{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_name",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "payees",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares_",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "recipient",
          "type": "string"
        }
      ],
      "name": "ERC20PaymentReleased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "PayeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentReleased",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_name",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "payees",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares_",
          "type": "uint256[]"
        }
      ],
      "name": "_addCSVPayee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares_",
          "type": "uint256"
        }
      ],
      "name": "_addPayee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addresstoname",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "bulkReleaseERC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "payee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "releasable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "releasableERC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "release",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "releaseERC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "released",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "releasedERC",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "totalERCReleased",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalReleased",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "3": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "4": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "5": "contracts/splitter.sol"
  },
  "ast": {
    "absolutePath": "contracts/splitter.sol",
    "exportedSymbols": {
      "Address": [1320],
      "Context": [1342],
      "IERC20": [1420],
      "Ownable": [801],
      "SafeERC20": [1025],
      "Splitter": [696]
    },
    "id": 697,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "111:23:5"
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 697,
        "sourceUnit": 1026,
        "src": "136:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 697,
        "sourceUnit": 1321,
        "src": "202:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 697,
        "sourceUnit": 1343,
        "src": "254:51:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/edmon/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 697,
        "sourceUnit": 802,
        "src": "306:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1342,
              "src": "1608:7:5"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "1608:7:5"
          },
          {
            "baseName": {
              "id": 9,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 801,
              "src": "1617:7:5"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "1617:7:5"
          }
        ],
        "canonicalName": "Splitter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "360:1226:5",
          "text": " @title PaymentSplitter\n @dev This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware\n that the Ether will be split in this way, since it is handled transparently by the contract.\n The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each\n account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim\n an amount proportional to the percentage of total shares they were assigned. The distribution of shares is set at the\n time of contract deployment and can't be updated thereafter.\n `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the\n accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release}\n function.\n NOTE: This contract assumes that ERC20 tokens will behave similarly to native tokens (Ether). Rebasing tokens, and\n tokens that apply fees during transfers, are likely to not be supported as expected. If in doubt, we encourage you\n to run tests before sending real value to this contract."
        },
        "fullyImplemented": true,
        "id": 696,
        "linearizedBaseContracts": [696, 801, 1342],
        "name": "Splitter",
        "nameLocation": "1596:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 18,
            "name": "PayeeAdded",
            "nameLocation": "1637:10:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1656:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "1648:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "1673:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "1665:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1688:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "1681:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:46:5"
            },
            "src": "1631:63:5"
          },
          {
            "anonymous": false,
            "id": 24,
            "name": "PaymentReleased",
            "nameLocation": "1705:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1729:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "1721:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1741:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "1733:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:28:5"
            },
            "src": "1699:50:5"
          },
          {
            "anonymous": false,
            "id": 35,
            "name": "ERC20PaymentReleased",
            "nameLocation": "1760:20:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1796:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1781:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1420",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 26,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 25,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1420,
                      "src": "1781:6:5"
                    },
                    "referencedDeclaration": 1420,
                    "src": "1781:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1420",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1811:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1803:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1803:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1823:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1815:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1843:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1831:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1831:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:73:5"
            },
            "src": "1754:100:5"
          },
          {
            "anonymous": false,
            "id": 41,
            "name": "PaymentReceived",
            "nameLocation": "1865:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1889:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1881:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1903:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1895:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1880:30:5"
            },
            "src": "1859:52:5"
          },
          {
            "constant": false,
            "id": 43,
            "mutability": "mutable",
            "name": "_totalShares",
            "nameLocation": "1933:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 696,
            "src": "1917:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1917:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "_totalReleased",
            "nameLocation": "1967:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 696,
            "src": "1951:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1951:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "e6e11565",
            "id": 49,
            "mutability": "mutable",
            "name": "addresstoname",
            "nameLocation": "2022:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 696,
            "src": "1988:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1996:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1988:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 47,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2007:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "_shares",
            "nameLocation": "2077:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 696,
            "src": "2041:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2049:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2041:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 51,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2060:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "_released",
            "nameLocation": "2126:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 696,
            "src": "2090:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 56,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2098:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2090:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 55,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2109:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "_payees",
            "nameLocation": "2159:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 696,
            "src": "2141:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2141:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 59,
              "nodeType": "ArrayTypeName",
              "src": "2141:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 65,
            "mutability": "mutable",
            "name": "_erc20TotalReleased",
            "nameLocation": "2208:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 696,
            "src": "2173:54:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_uint256_$",
              "typeString": "mapping(contract IERC20 => uint256)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 61,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1420,
                  "src": "2181:6:5"
                },
                "referencedDeclaration": 1420,
                "src": "2181:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$1420",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "2173:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_uint256_$",
                "typeString": "mapping(contract IERC20 => uint256)"
              },
              "valueType": {
                "id": 63,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2191:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 72,
            "mutability": "mutable",
            "name": "_erc20Released",
            "nameLocation": "2288:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 696,
            "src": "2233:69:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 67,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 66,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1420,
                  "src": "2241:6:5"
                },
                "referencedDeclaration": 1420,
                "src": "2241:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$1420",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "2233:46:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 70,
                "keyType": {
                  "id": 68,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2259:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2251:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 69,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2270:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "2749:346:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 86,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "2767:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2767:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 88,
                            "name": "shares_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "2784:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2784:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2767:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a2070617965657320616e6420736861726573206c656e677468206d69736d61746368",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2800:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        },
                        "value": "PaymentSplitter: payees and shares length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        }
                      ],
                      "id": 85,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2759:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:94:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2759:94:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 95,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "2871:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2871:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2887:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2871:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206e6f20706179656573",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2890:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        },
                        "value": "PaymentSplitter: no payees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        }
                      ],
                      "id": 94,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2863:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2863:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:56:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 103,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "2937:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2937:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 105,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "2953:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2953:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2937:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2929:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "2929:38:5"
                },
                {
                  "body": {
                    "id": 133,
                    "nodeType": "Block",
                    "src": "3022:67:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 122,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 76,
                                "src": "3046:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 124,
                              "indexExpression": {
                                "id": 123,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "3052:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3046:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 125,
                                "name": "payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79,
                                "src": "3056:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 127,
                              "indexExpression": {
                                "id": 126,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "3063:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3056:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 128,
                                "name": "shares_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82,
                                "src": "3067:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 130,
                              "indexExpression": {
                                "id": 129,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "3075:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3067:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 121,
                            "name": "_addPayee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 667,
                            "src": "3036:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,uint256)"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3036:42:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "3036:42:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 114,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2998:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 115,
                        "name": "payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "3002:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3002:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2998:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 134,
                  "initializationExpression": {
                    "assignments": [111],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2991:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 134,
                        "src": "2983:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2983:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 113,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2995:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2983:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3017:3:5",
                      "subExpression": {
                        "id": 118,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "3017:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 120,
                    "nodeType": "ExpressionStatement",
                    "src": "3017:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "2978:111:5"
                }
              ]
            },
            "documentation": {
              "id": 73,
              "nodeType": "StructuredDocumentation",
              "src": "2309:341:5",
              "text": " @dev Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at\n the matching position in the `shares` array.\n All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no\n duplicates in `payees`."
            },
            "id": 136,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2683:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2667:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2667:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 75,
                    "nodeType": "ArrayTypeName",
                    "src": "2667:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "payees",
                  "nameLocation": "2707:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2690:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 77,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2690:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 78,
                    "nodeType": "ArrayTypeName",
                    "src": "2690:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "2732:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2715:24:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2715:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 81,
                    "nodeType": "ArrayTypeName",
                    "src": "2715:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2666:74:5"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2749:0:5"
            },
            "scope": 696,
            "src": "2655:440:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "3642:62:5",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 141,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1332,
                          "src": "3673:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3673:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 143,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3687:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3687:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 140,
                      "name": "PaymentReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "3657:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3657:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "EmitStatement",
                  "src": "3652:45:5"
                }
              ]
            },
            "documentation": {
              "id": 137,
              "nodeType": "StructuredDocumentation",
              "src": "3101:501:5",
              "text": " @dev The Ether received will be logged with {PaymentReceived} events. Note that these events are not fully\n reliable: it's possible for a contract to receive Ether without triggering this function. This only affects the\n reliability of the events, and not the actual splitting of Ether.\n To learn more about this see the Solidity documentation for\n https://solidity.readthedocs.io/en/latest/contracts.html#fallback-function[fallback\n functions]."
            },
            "id": 148,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3614:2:5"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3642:0:5"
            },
            "scope": 696,
            "src": "3607:97:5",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "3813:346:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 161,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "3831:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3831:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 163,
                            "name": "shares_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "3848:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3848:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3831:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a2070617965657320616e6420736861726573206c656e677468206d69736d61746368",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3864:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        },
                        "value": "PaymentSplitter: payees and shares length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5e39d6690ea50b22e040fe9ba22acf868e3d7f78e6ca8dc7ae3224a0aade89f",
                          "typeString": "literal_string \"PaymentSplitter: payees and shares length mismatch\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3823:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3823:94:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3823:94:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 170,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "3935:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3935:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3951:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3935:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206e6f20706179656573",
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3954:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        },
                        "value": "PaymentSplitter: no payees"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1437b0f4053e38629626a98d8100226576b62fcebc211e7a49225bd05994643",
                          "typeString": "literal_string \"PaymentSplitter: no payees\""
                        }
                      ],
                      "id": 169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3927:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3927:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "3927:56:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 178,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "4001:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4001:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 180,
                            "name": "payees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "4017:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4017:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4001:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3993:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3993:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "3993:38:5"
                },
                {
                  "body": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "4086:67:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 197,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151,
                                "src": "4110:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 199,
                              "indexExpression": {
                                "id": 198,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 186,
                                "src": "4116:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4110:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 200,
                                "name": "payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 154,
                                "src": "4120:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 202,
                              "indexExpression": {
                                "id": 201,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 186,
                                "src": "4127:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4120:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 203,
                                "name": "shares_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "4131:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "id": 204,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 186,
                                "src": "4139:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4131:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 196,
                            "name": "_addPayee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 667,
                            "src": "4100:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,uint256)"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4100:42:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "ExpressionStatement",
                        "src": "4100:42:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 189,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "4062:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 190,
                        "name": "payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "4066:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4066:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4062:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 209,
                  "initializationExpression": {
                    "assignments": [186],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4055:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "4047:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4047:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 188,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4059:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4047:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4081:3:5",
                      "subExpression": {
                        "id": 193,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "4081:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 195,
                    "nodeType": "ExpressionStatement",
                    "src": "4081:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "4042:111:5"
                }
              ]
            },
            "functionSelector": "b969ef48",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addCSVPayee",
            "nameLocation": "3719:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3748:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "3732:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 149,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3732:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 150,
                    "nodeType": "ArrayTypeName",
                    "src": "3732:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "payees",
                  "nameLocation": "3772:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "3755:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 152,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3755:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 153,
                    "nodeType": "ArrayTypeName",
                    "src": "3755:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "3797:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "3780:24:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 155,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3780:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 156,
                    "nodeType": "ArrayTypeName",
                    "src": "3780:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3731:74:5"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3813:0:5"
            },
            "scope": 696,
            "src": "3710:449:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "4290:36:5",
              "statements": [
                {
                  "expression": {
                    "id": 217,
                    "name": "_totalShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "4307:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 216,
                  "id": 218,
                  "nodeType": "Return",
                  "src": "4300:19:5"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "4165:67:5",
              "text": " @dev Getter for the total shares held by payees."
            },
            "functionSelector": "3a98ef39",
            "id": 220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalShares",
            "nameLocation": "4246:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4257:2:5"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "4281:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4280:9:5"
            },
            "scope": 696,
            "src": "4237:89:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "4470:38:5",
              "statements": [
                {
                  "expression": {
                    "id": 226,
                    "name": "_totalReleased",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "4487:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 225,
                  "id": 227,
                  "nodeType": "Return",
                  "src": "4480:21:5"
                }
              ]
            },
            "documentation": {
              "id": 221,
              "nodeType": "StructuredDocumentation",
              "src": "4332:78:5",
              "text": " @dev Getter for the total amount of Ether already released."
            },
            "functionSelector": "e33b7de3",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalReleased",
            "nameLocation": "4424:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4437:2:5"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 229,
                  "src": "4461:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4461:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4460:9:5"
            },
            "scope": 696,
            "src": "4415:93:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "4729:50:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 238,
                      "name": "_erc20TotalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4746:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 240,
                    "indexExpression": {
                      "id": 239,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "4766:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1420",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4746:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 237,
                  "id": 241,
                  "nodeType": "Return",
                  "src": "4739:33:5"
                }
              ]
            },
            "documentation": {
              "id": 230,
              "nodeType": "StructuredDocumentation",
              "src": "4514:140:5",
              "text": " @dev Getter for the total amount of `token` already released. `token` should be the address of an IERC20\n contract."
            },
            "functionSelector": "2a5899d0",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalERCReleased",
            "nameLocation": "4668:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4692:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "4685:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1420",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 232,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 231,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1420,
                      "src": "4685:6:5"
                    },
                    "referencedDeclaration": 1420,
                    "src": "4685:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1420",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4684:14:5"
            },
            "returnParameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "4720:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4719:9:5"
            },
            "scope": 696,
            "src": "4659:120:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "4928:40:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 251,
                      "name": "_shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "4945:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 253,
                    "indexExpression": {
                      "id": 252,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "4953:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4945:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 250,
                  "id": 254,
                  "nodeType": "Return",
                  "src": "4938:23:5"
                }
              ]
            },
            "documentation": {
              "id": 244,
              "nodeType": "StructuredDocumentation",
              "src": "4785:75:5",
              "text": " @dev Getter for the amount of shares held by an account."
            },
            "functionSelector": "ce7c2ac2",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shares",
            "nameLocation": "4874:6:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4889:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4881:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4881:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4880:17:5"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "4919:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4919:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4918:9:5"
            },
            "scope": 696,
            "src": "4865:103:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 268,
              "nodeType": "Block",
              "src": "5127:42:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 264,
                      "name": "_released",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "5144:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 266,
                    "indexExpression": {
                      "id": 265,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "5154:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5144:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 263,
                  "id": 267,
                  "nodeType": "Return",
                  "src": "5137:25:5"
                }
              ]
            },
            "documentation": {
              "id": 257,
              "nodeType": "StructuredDocumentation",
              "src": "4974:83:5",
              "text": " @dev Getter for the amount of Ether already released to a payee."
            },
            "functionSelector": "9852595c",
            "id": 269,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "released",
            "nameLocation": "5071:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5088:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5080:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5080:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5079:17:5"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 269,
                  "src": "5118:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5118:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5117:9:5"
            },
            "scope": 696,
            "src": "5062:107:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 286,
              "nodeType": "Block",
              "src": "5414:54:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 280,
                        "name": "_erc20Released",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "5431:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                        }
                      },
                      "id": 282,
                      "indexExpression": {
                        "id": 281,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "5446:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5431:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 284,
                    "indexExpression": {
                      "id": 283,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "5453:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5431:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 279,
                  "id": 285,
                  "nodeType": "Return",
                  "src": "5424:37:5"
                }
              ]
            },
            "documentation": {
              "id": 270,
              "nodeType": "StructuredDocumentation",
              "src": "5175:152:5",
              "text": " @dev Getter for the amount of `token` tokens already released to a payee. `token` should be the address of an\n IERC20 contract."
            },
            "functionSelector": "f1d9cffd",
            "id": 287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releasedERC",
            "nameLocation": "5341:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 273,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5360:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "5353:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1420",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 272,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 271,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1420,
                      "src": "5353:6:5"
                    },
                    "referencedDeclaration": 1420,
                    "src": "5353:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1420",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5375:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "5367:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5367:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5352:31:5"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "5405:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5405:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5404:9:5"
            },
            "scope": 696,
            "src": "5332:136:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 299,
              "nodeType": "Block",
              "src": "5614:38:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 295,
                      "name": "_payees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "5631:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 297,
                    "indexExpression": {
                      "id": 296,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "5639:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5631:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 294,
                  "id": 298,
                  "nodeType": "Return",
                  "src": "5624:21:5"
                }
              ]
            },
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "5474:75:5",
              "text": " @dev Getter for the address of the payee number `index`."
            },
            "functionSelector": "8b83209b",
            "id": 300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payee",
            "nameLocation": "5563:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5577:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "5569:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5569:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5568:15:5"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 300,
                  "src": "5605:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5605:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5604:9:5"
            },
            "scope": 696,
            "src": "5554:98:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "5804:155:5",
              "statements": [
                {
                  "assignments": [309],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 309,
                      "mutability": "mutable",
                      "name": "totalReceived",
                      "nameLocation": "5822:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "5814:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 308,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5814:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 318,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 312,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5846:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Splitter_$696",
                              "typeString": "contract Splitter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Splitter_$696",
                              "typeString": "contract Splitter"
                            }
                          ],
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5838:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 310,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5838:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5838:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "5838:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 315,
                        "name": "totalReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "5862:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5862:15:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5838:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5814:63:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 320,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "5910:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 321,
                        "name": "totalReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "5919:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 323,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "5943:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 322,
                          "name": "released",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "5934:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5934:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 319,
                      "name": "_pendingPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "5894:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5894:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 307,
                  "id": 326,
                  "nodeType": "Return",
                  "src": "5887:65:5"
                }
              ]
            },
            "documentation": {
              "id": 301,
              "nodeType": "StructuredDocumentation",
              "src": "5658:74:5",
              "text": " @dev Getter for the amount of payee's releasable Ether."
            },
            "functionSelector": "a3f8eace",
            "id": 328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releasable",
            "nameLocation": "5746:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5765:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "5757:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5757:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5756:17:5"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 328,
                  "src": "5795:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5795:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5794:9:5"
            },
            "scope": 696,
            "src": "5737:222:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "6197:182:5",
              "statements": [
                {
                  "assignments": [340],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "totalReceived",
                      "nameLocation": "6215:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "6207:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6207:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 352,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 345,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6255:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Splitter_$696",
                                "typeString": "contract Splitter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Splitter_$696",
                                "typeString": "contract Splitter"
                              }
                            ],
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6247:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 343,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6247:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6247:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 341,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "6231:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1420",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1359,
                        "src": "6231:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6231:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 349,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "6281:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1420",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1420",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 348,
                        "name": "totalERCReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "6264:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1420_$returns$_t_uint256_$",
                          "typeString": "function (contract IERC20) view returns (uint256)"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6264:23:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6231:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6207:80:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 354,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "6320:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 355,
                        "name": "totalReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "6329:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 357,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "6356:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1420",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 358,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 334,
                            "src": "6363:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$1420",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 356,
                          "name": "releasedERC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "6344:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1420_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,address) view returns (uint256)"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6344:27:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 353,
                      "name": "_pendingPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "6304:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6304:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 338,
                  "id": 361,
                  "nodeType": "Return",
                  "src": "6297:75:5"
                }
              ]
            },
            "documentation": {
              "id": 329,
              "nodeType": "StructuredDocumentation",
              "src": "5965:143:5",
              "text": " @dev Getter for the amount of payee's releasable `token` tokens. `token` should be the address of an\n IERC20 contract."
            },
            "functionSelector": "1c35f4c3",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releasableERC",
            "nameLocation": "6122:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 332,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6143:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "6136:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1420",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 331,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 330,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1420,
                      "src": "6136:6:5"
                    },
                    "referencedDeclaration": 1420,
                    "src": "6136:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1420",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6158:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "6150:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6150:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6135:31:5"
            },
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "6188:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6188:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6187:9:5"
            },
            "scope": 696,
            "src": "6113:266:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 416,
              "nodeType": "Block",
              "src": "6639:598:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 372,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "6657:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 374,
                          "indexExpression": {
                            "id": 373,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "6665:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6657:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6676:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6657:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420686173206e6f20736861726573",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6679:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        },
                        "value": "PaymentSplitter: account has no shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        }
                      ],
                      "id": 371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6649:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6649:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "6649:71:5"
                },
                {
                  "assignments": [381],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 381,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "6739:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 416,
                      "src": "6731:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 380,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6731:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 385,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 383,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "6760:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 382,
                      "name": "releasable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "6749:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6749:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6731:37:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 387,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 381,
                          "src": "6787:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6798:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6787:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e74206973206e6f7420647565207061796d656e74",
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6801:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        },
                        "value": "PaymentSplitter: account is not due payment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6779:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6779:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "6779:68:5"
                },
                {
                  "expression": {
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 393,
                      "name": "_totalReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "7038:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 394,
                      "name": "payment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "7056:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7038:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "7038:25:5"
                },
                {
                  "id": 403,
                  "nodeType": "UncheckedBlock",
                  "src": "7073:64:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 397,
                            "name": "_released",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "7097:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 399,
                          "indexExpression": {
                            "id": 398,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "7107:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7097:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 400,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 381,
                          "src": "7119:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7097:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 402,
                      "nodeType": "ExpressionStatement",
                      "src": "7097:29:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 407,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "7165:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 408,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "7174:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 404,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1320,
                        "src": "7147:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$1320_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1077,
                      "src": "7147:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7147:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "7147:35:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 412,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "7213:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 413,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "7222:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 411,
                      "name": "PaymentReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "7197:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7197:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 415,
                  "nodeType": "EmitStatement",
                  "src": "7192:38:5"
                }
              ]
            },
            "documentation": {
              "id": 364,
              "nodeType": "StructuredDocumentation",
              "src": "6385:183:5",
              "text": " @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the\n total shares and their previous withdrawals."
            },
            "functionSelector": "19165587",
            "id": 417,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 368,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 743,
                  "src": "6630:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "6630:9:5"
              }
            ],
            "name": "release",
            "nameLocation": "6582:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6606:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 417,
                  "src": "6590:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6590:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6589:25:5"
            },
            "returnParameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6639:0:5"
            },
            "scope": 696,
            "src": "6573:664:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "7573:739:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 429,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "7591:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 431,
                          "indexExpression": {
                            "id": 430,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "7599:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7591:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7610:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7591:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420686173206e6f20736861726573",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7613:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        },
                        "value": "PaymentSplitter: account has no shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41702911e7fdf9741c61509216c070cb4be5837176954fb37acaf958eaff82dd",
                          "typeString": "literal_string \"PaymentSplitter: account has no shares\""
                        }
                      ],
                      "id": 428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "7583:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7583:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 436,
                  "nodeType": "ExpressionStatement",
                  "src": "7583:71:5"
                },
                {
                  "assignments": [438],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 438,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "7673:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 483,
                      "src": "7665:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 437,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7665:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 443,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 440,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "7697:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 441,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "7704:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 439,
                      "name": "releasableERC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 363,
                      "src": "7683:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1420_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address) view returns (uint256)"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7683:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7665:47:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 445,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "7731:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7742:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7731:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e74206973206e6f7420647565207061796d656e74",
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7745:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        },
                        "value": "PaymentSplitter: account is not due payment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57f87f0ebf27afe0d68884e28202f547fd6c4ce1b7243f1356690df65e0fa2e4",
                          "typeString": "literal_string \"PaymentSplitter: account is not due payment\""
                        }
                      ],
                      "id": 444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "7723:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7723:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "7723:68:5"
                },
                {
                  "expression": {
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 451,
                        "name": "_erc20TotalReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "8041:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 453,
                      "indexExpression": {
                        "id": 452,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "8061:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8041:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 454,
                      "name": "payment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "8071:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8041:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "8041:37:5"
                },
                {
                  "id": 465,
                  "nodeType": "UncheckedBlock",
                  "src": "8088:76:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 457,
                              "name": "_erc20Released",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "8112:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                              }
                            },
                            "id": 460,
                            "indexExpression": {
                              "id": 458,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "8127:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1420",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8112:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 461,
                          "indexExpression": {
                            "id": 459,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "8134:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8112:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 462,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "8146:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8112:41:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 464,
                      "nodeType": "ExpressionStatement",
                      "src": "8112:41:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 469,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "8197:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 470,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "8204:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 471,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "8213:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 466,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "8174:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1025_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 832,
                      "src": "8174:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1420_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8174:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "8174:47:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 475,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "8257:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 476,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "8264:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 477,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "8273:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 478,
                          "name": "addresstoname",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "8282:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                            "typeString": "mapping(address => string storage ref)"
                          }
                        },
                        "id": 480,
                        "indexExpression": {
                          "id": 479,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "8296:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8282:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 474,
                      "name": "ERC20PaymentReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "8236:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$1420_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,string memory)"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8236:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "EmitStatement",
                  "src": "8231:74:5"
                }
              ]
            },
            "documentation": {
              "id": 418,
              "nodeType": "StructuredDocumentation",
              "src": "7243:250:5",
              "text": " @dev Triggers a transfer to `account` of the amount of `token` tokens they are owed, according to their\n percentage of the total shares and their previous withdrawals. `token` must be the address of an IERC20\n contract."
            },
            "functionSelector": "b32a185b",
            "id": 484,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 426,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 425,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 743,
                  "src": "7564:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "7564:9:5"
              }
            ],
            "name": "releaseERC",
            "nameLocation": "7507:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7525:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "7518:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1420",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 420,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 419,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1420,
                      "src": "7518:6:5"
                    },
                    "referencedDeclaration": 1420,
                    "src": "7518:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1420",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7540:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "7532:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7532:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7517:31:5"
            },
            "returnParameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7573:0:5"
            },
            "scope": 696,
            "src": "7498:814:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "8446:586:5",
              "statements": [
                {
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "8501:525:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 505,
                                  "name": "_shares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53,
                                  "src": "8523:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 509,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 506,
                                    "name": "_payees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "8531:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 508,
                                  "indexExpression": {
                                    "id": 507,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 494,
                                    "src": "8539:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8531:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8523:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8545:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8523:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4163636f756e7420686173206e6f20736861726573",
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8548:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_19593b2e9dc7a5dfaf63d70ac01609e64f8f23a3abbfb60f650256aa6a0d6e23",
                                "typeString": "literal_string \"Account has no shares\""
                              },
                              "value": "Account has no shares"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_19593b2e9dc7a5dfaf63d70ac01609e64f8f23a3abbfb60f650256aa6a0d6e23",
                                "typeString": "literal_string \"Account has no shares\""
                              }
                            ],
                            "id": 504,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "8515:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8515:57:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 514,
                        "nodeType": "ExpressionStatement",
                        "src": "8515:57:5"
                      },
                      {
                        "assignments": [516],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 516,
                            "mutability": "mutable",
                            "name": "payment",
                            "nameLocation": "8595:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 571,
                            "src": "8587:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 515,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8587:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 523,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 518,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "8619:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1420",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 519,
                                "name": "_payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "8626:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 521,
                              "indexExpression": {
                                "id": 520,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 494,
                                "src": "8634:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8626:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1420",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 517,
                            "name": "releasableERC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "8605:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$1420_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,address) view returns (uint256)"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8605:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8587:50:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 525,
                                "name": "payment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 516,
                                "src": "8660:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8671:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8660:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6163636f756e74206973206e6f7420647565207061796d656e74",
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8674:28:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fdc328ab82bf9f88b34807cdf0520228a4a66d6f8bfcb12cf3f372369708f51b",
                                "typeString": "literal_string \"account is not due payment\""
                              },
                              "value": "account is not due payment"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fdc328ab82bf9f88b34807cdf0520228a4a66d6f8bfcb12cf3f372369708f51b",
                                "typeString": "literal_string \"account is not due payment\""
                              }
                            ],
                            "id": 524,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "8652:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8652:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 530,
                        "nodeType": "ExpressionStatement",
                        "src": "8652:51:5"
                      },
                      {
                        "expression": {
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 531,
                              "name": "_erc20TotalReleased",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "8718:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 533,
                            "indexExpression": {
                              "id": 532,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "8738:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1420",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8718:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 534,
                            "name": "payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "8748:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8718:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "8718:37:5"
                      },
                      {
                        "id": 547,
                        "nodeType": "UncheckedBlock",
                        "src": "8770:87:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 537,
                                    "name": "_erc20Released",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72,
                                    "src": "8798:14:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IERC20_$1420_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 542,
                                  "indexExpression": {
                                    "id": 538,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 488,
                                    "src": "8813:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1420",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8798:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 543,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 539,
                                    "name": "_payees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "8820:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 541,
                                  "indexExpression": {
                                    "id": 540,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 494,
                                    "src": "8828:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8820:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "8798:33:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 544,
                                "name": "payment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 516,
                                "src": "8835:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8798:44:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 546,
                            "nodeType": "ExpressionStatement",
                            "src": "8798:44:5"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 551,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "8894:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1420",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 552,
                                "name": "_payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "8901:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 554,
                              "indexExpression": {
                                "id": 553,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 494,
                                "src": "8909:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8901:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 555,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "8913:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1420",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 548,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1025,
                              "src": "8871:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1025_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 832,
                            "src": "8871:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1420_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8871:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 557,
                        "nodeType": "ExpressionStatement",
                        "src": "8871:50:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 559,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "8961:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1420",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 560,
                                "name": "_payees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "8968:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 562,
                              "indexExpression": {
                                "id": 561,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 494,
                                "src": "8976:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8968:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 563,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "8980:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 564,
                                "name": "addresstoname",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "8989:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                  "typeString": "mapping(address => string storage ref)"
                                }
                              },
                              "id": 568,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 565,
                                  "name": "_payees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "9003:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 567,
                                "indexExpression": {
                                  "id": 566,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 494,
                                  "src": "9011:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9003:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8989:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1420",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 558,
                            "name": "ERC20PaymentReleased",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "8940:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$1420_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256,string memory)"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8940:75:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 570,
                        "nodeType": "EmitStatement",
                        "src": "8935:80:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 497,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "8476:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 498,
                        "name": "_payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "8480:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8480:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8476:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 572,
                  "initializationExpression": {
                    "assignments": [494],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8469:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "8461:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8461:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 496,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8473:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8461:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8496:3:5",
                      "subExpression": {
                        "id": 501,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "8496:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 503,
                    "nodeType": "ExpressionStatement",
                    "src": "8496:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "8456:570:5"
                }
              ]
            },
            "documentation": {
              "id": 485,
              "nodeType": "StructuredDocumentation",
              "src": "8318:59:5",
              "text": " Function to make the smart contract Bulk"
            },
            "functionSelector": "b4cf99a2",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 491,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 490,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 743,
                  "src": "8436:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "8436:9:5"
              }
            ],
            "name": "bulkReleaseERC",
            "nameLocation": "8392:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8414:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "8407:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1420",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 487,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 486,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1420,
                      "src": "8407:6:5"
                    },
                    "referencedDeclaration": 1420,
                    "src": "8407:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1420",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8406:14:5"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8446:0:5"
            },
            "scope": 696,
            "src": "8383:649:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "9355:91:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 586,
                              "name": "totalReceived",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "9373:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 587,
                                "name": "_shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "9389:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 589,
                              "indexExpression": {
                                "id": 588,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 577,
                                "src": "9397:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9389:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9373:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 591,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9372:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 592,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "9409:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9372:49:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 594,
                      "name": "alreadyReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "9424:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9372:67:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 585,
                  "id": 596,
                  "nodeType": "Return",
                  "src": "9365:74:5"
                }
              ]
            },
            "documentation": {
              "id": 575,
              "nodeType": "StructuredDocumentation",
              "src": "9038:161:5",
              "text": " @dev internal logic for computing the pending payment of an `account` given the token historical balances and\n already released amounts."
            },
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pendingPayment",
            "nameLocation": "9213:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9246:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "9238:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9238:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "totalReceived",
                  "nameLocation": "9271:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "9263:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9263:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "alreadyReleased",
                  "nameLocation": "9302:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "9294:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9294:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9228:95:5"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "9346:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9346:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9345:9:5"
            },
            "scope": 696,
            "src": "9204:242:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "9722:450:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 611,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 603,
                          "src": "9740:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9759:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9751:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 612,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9751:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9751:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9740:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420697320746865207a65726f2061646472657373",
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9763:46:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22db6c622fd62a15ab5fca8fc78156905c4f1b5914d7d1db97b192b87e8c816b",
                          "typeString": "literal_string \"PaymentSplitter: account is the zero address\""
                        },
                        "value": "PaymentSplitter: account is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22db6c622fd62a15ab5fca8fc78156905c4f1b5914d7d1db97b192b87e8c816b",
                          "typeString": "literal_string \"PaymentSplitter: account is the zero address\""
                        }
                      ],
                      "id": 610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9732:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9732:78:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "9732:78:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 621,
                          "name": "shares_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 605,
                          "src": "9828:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9838:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9828:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a20736861726573206172652030",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9841:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9c1be4d5245e2b1590d7367c9c09f1ac5365954d05fed4172915681bdc80ed4",
                          "typeString": "literal_string \"PaymentSplitter: shares are 0\""
                        },
                        "value": "PaymentSplitter: shares are 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9c1be4d5245e2b1590d7367c9c09f1ac5365954d05fed4172915681bdc80ed4",
                          "typeString": "literal_string \"PaymentSplitter: shares are 0\""
                        }
                      ],
                      "id": 620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9820:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9820:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "9820:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 628,
                            "name": "_shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "9891:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 630,
                          "indexExpression": {
                            "id": 629,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 603,
                            "src": "9899:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9891:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9911:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9891:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061796d656e7453706c69747465723a206163636f756e7420616c72656164792068617320736861726573",
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9914:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df40dd957dfb1d655a61a3d20a7083773a63031454719eb1eb83074b56cf5635",
                          "typeString": "literal_string \"PaymentSplitter: account already has shares\""
                        },
                        "value": "PaymentSplitter: account already has shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df40dd957dfb1d655a61a3d20a7083773a63031454719eb1eb83074b56cf5635",
                          "typeString": "literal_string \"PaymentSplitter: account already has shares\""
                        }
                      ],
                      "id": 627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9883:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9883:77:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "9883:77:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 639,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "9984:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 636,
                        "name": "_payees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "9971:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "9971:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9971:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "9971:21:5"
                },
                {
                  "expression": {
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 642,
                        "name": "_shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "10002:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 644,
                      "indexExpression": {
                        "id": 643,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "10010:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10002:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 645,
                      "name": "shares_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 605,
                      "src": "10021:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10002:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "10002:26:5"
                },
                {
                  "expression": {
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 648,
                      "name": "_totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "10038:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 649,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "10053:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 650,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "10068:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10053:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10038:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "10038:37:5"
                },
                {
                  "expression": {
                    "id": 658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 654,
                        "name": "addresstoname",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "10085:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 656,
                      "indexExpression": {
                        "id": 655,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "10099:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10085:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 657,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 601,
                      "src": "10110:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10085:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 659,
                  "nodeType": "ExpressionStatement",
                  "src": "10085:30:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 661,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 603,
                        "src": "10141:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 662,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "10150:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 663,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "10159:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 660,
                      "name": "PayeeAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "10130:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10130:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "EmitStatement",
                  "src": "10125:40:5"
                }
              ]
            },
            "documentation": {
              "id": 599,
              "nodeType": "StructuredDocumentation",
              "src": "9452:174:5",
              "text": " @dev Add a new payee to the contract.\n @param account The address of the payee to add.\n @param shares_ The number of shares owned by the payee."
            },
            "functionSelector": "d84043f4",
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 608,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 607,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 743,
                  "src": "9712:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "9712:9:5"
              }
            ],
            "name": "_addPayee",
            "nameLocation": "9640:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "9664:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "9650:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9650:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9679:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "9671:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9671:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "9696:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "9688:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9688:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9649:55:5"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9722:0:5"
            },
            "scope": 696,
            "src": "9631:541:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 694,
              "nodeType": "Block",
              "src": "10227:136:5",
              "statements": [
                {
                  "assignments": [676],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 676,
                      "mutability": "mutable",
                      "name": "tokenBalance",
                      "nameLocation": "10245:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 694,
                      "src": "10237:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 675,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10237:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 684,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 681,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10284:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Splitter_$696",
                              "typeString": "contract Splitter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Splitter_$696",
                              "typeString": "contract Splitter"
                            }
                          ],
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10276:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 679,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10276:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10276:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 677,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "10260:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1359,
                      "src": "10260:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10260:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10237:53:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 688,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "10324:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10331:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10331:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 691,
                        "name": "tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "10343:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1420",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 685,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "10301:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$1025_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 832,
                      "src": "10301:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1420_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10301:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "10301:55:5"
                }
              ]
            },
            "functionSelector": "51cff8d9",
            "id": 695,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 673,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 672,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 743,
                  "src": "10217:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "10217:9:5"
              }
            ],
            "name": "withdraw",
            "nameLocation": "10187:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10203:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "10196:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1420",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 669,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 668,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1420,
                      "src": "10196:6:5"
                    },
                    "referencedDeclaration": 1420,
                    "src": "10196:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1420",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10195:14:5"
            },
            "returnParameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10227:0:5"
            },
            "scope": 696,
            "src": "10178:185:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 697,
        "src": "1587:8778:5",
        "usedErrors": []
      }
    ],
    "src": "111:10254:5"
  },
  "bytecode": "",
  "bytecodeSha1": "688f83a3203e98895efd0b469ed49df192065d29",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Splitter",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "75": [2006, 2028, true]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "76": [3735, 3756, false],
          "77": [3819, 3849, true]
        }
      },
      "3": {
        "Address.sendValue": {
          "71": [2501, 2532, true],
          "72": [2647, 2654, true]
        },
        "Address.verifyCallResult": {
          "73": [7735, 7742, false],
          "74": [7876, 7897, false]
        }
      },
      "4": {},
      "5": {
        "Splitter._addCSVPayee": {
          "65": [3831, 3862, true],
          "66": [3935, 3952, true],
          "67": [4001, 4030, true]
        },
        "Splitter._addPayee": {
          "68": [9740, 9761, true],
          "69": [9828, 9839, true],
          "70": [9891, 9912, true]
        },
        "Splitter.bulkReleaseERC": {
          "63": [8523, 8546, true],
          "64": [8660, 8672, true]
        },
        "Splitter.release": {
          "61": [6787, 6799, true]
        },
        "Splitter.releaseERC": {
          "62": [7731, 7743, true]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "52": [2378, 2395],
          "53": [2405, 2450]
        },
        "Ownable.owner": {
          "4": [1101, 1114]
        },
        "Ownable.renounceOwnership": {
          "17": [1732, 1762]
        },
        "Ownable.transferOwnership": {
          "46": [1998, 2071],
          "47": [2081, 2109]
        }
      },
      "1": {},
      "2": {
        "SafeERC20._callOptionalReturn": {
          "54": [3811, 3896]
        },
        "SafeERC20.safeTransfer": {
          "51": [813, 899]
        }
      },
      "3": {
        "Address.functionCall": {
          "55": [4018, 4077]
        },
        "Address.functionCallWithValue": {
          "57": [5228, 5288],
          "58": [5382, 5440]
        },
        "Address.isContract": {
          "56": [1458, 1488]
        },
        "Address.sendValue": {
          "48": [2493, 2566],
          "49": [2639, 2717]
        },
        "Address.verifyCallResult": {
          "59": [7758, 7775],
          "60": [8202, 8222]
        }
      },
      "4": {
        "Context._msgSender": {
          "1": [712, 729]
        }
      },
      "5": {
        "Splitter.<receive>": {
          "0": [3652, 3697]
        },
        "Splitter._addCSVPayee": {
          "33": [3823, 3917],
          "34": [3927, 3983],
          "35": [3993, 4031],
          "36": [4100, 4142],
          "37": [4081, 4084]
        },
        "Splitter._addPayee": {
          "38": [9732, 9810],
          "39": [9820, 9873],
          "40": [9883, 9960],
          "41": [9971, 9992],
          "42": [10002, 10028],
          "43": [10038, 10075],
          "44": [10085, 10115],
          "45": [10125, 10165]
        },
        "Splitter._pendingPayment": {
          "50": [9365, 9439]
        },
        "Splitter.bulkReleaseERC": {
          "26": [8515, 8572],
          "27": [8652, 8703],
          "28": [8718, 8755],
          "29": [8798, 8842],
          "30": [8871, 8921],
          "31": [8935, 9015],
          "32": [8496, 8499]
        },
        "Splitter.payee": {
          "18": [5624, 5645]
        },
        "Splitter.releasable": {
          "19": [5887, 5952]
        },
        "Splitter.releasableERC": {
          "15": [6297, 6372]
        },
        "Splitter.release": {
          "9": [6649, 6720],
          "10": [6779, 6847],
          "11": [7038, 7063],
          "12": [7097, 7126],
          "13": [7147, 7182],
          "14": [7192, 7230]
        },
        "Splitter.releaseERC": {
          "20": [7583, 7654],
          "21": [7723, 7791],
          "22": [8041, 8078],
          "23": [8112, 8153],
          "24": [8174, 8221],
          "25": [8231, 8305]
        },
        "Splitter.released": {
          "5": [5137, 5162]
        },
        "Splitter.releasedERC": {
          "8": [5424, 5461]
        },
        "Splitter.shares": {
          "6": [4938, 4961]
        },
        "Splitter.totalERCReleased": {
          "2": [4739, 4772]
        },
        "Splitter.totalReleased": {
          "7": [4480, 4501]
        },
        "Splitter.totalShares": {
          "3": [4300, 4319]
        },
        "Splitter.withdraw": {
          "16": [10301, 10356]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "6080604052600436106101185760003560e01c8063a3f8eace116100a0578063d84043f411610064578063d84043f41461037d578063e33b7de31461039d578063e6e11565146103b2578063f1d9cffd146103df578063f2fde38b1461042557600080fd5b8063a3f8eace146102c7578063b32a185b146102e7578063b4cf99a214610307578063b969ef4814610327578063ce7c2ac21461034757600080fd5b806351cff8d9116100e757806351cff8d914610206578063715018a6146102265780638b83209b1461023b5780638da5cb5b146102735780639852595c1461029157600080fd5b806319165587146101665780631c35f4c3146101885780632a5899d0146101bb5780633a98ef39146101f157600080fd5b36610161577f6ef95f06320e7a25a04a175ca677b7052bdd97131872c2192525a629f51be77033604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b34801561017257600080fd5b506101866101813660046114c1565b610445565b005b34801561019457600080fd5b506101a86101a33660046114de565b61055c565b6040519081526020015b60405180910390f35b3480156101c757600080fd5b506101a86101d63660046114c1565b6001600160a01b031660009081526007602052604090205490565b3480156101fd57600080fd5b506001546101a8565b34801561021257600080fd5b506101866102213660046114c1565b61062c565b34801561023257600080fd5b506101866106d2565b34801561024757600080fd5b5061025b610256366004611517565b610708565b6040516001600160a01b0390911681526020016101b2565b34801561027f57600080fd5b506000546001600160a01b031661025b565b34801561029d57600080fd5b506101a86102ac3660046114c1565b6001600160a01b031660009081526005602052604090205490565b3480156102d357600080fd5b506101a86102e23660046114c1565b610738565b3480156102f357600080fd5b506101866103023660046114de565b61077b565b34801561031357600080fd5b506101866103223660046114c1565b6108c5565b34801561033357600080fd5b506101866103423660046116da565b610b82565b34801561035357600080fd5b506101a86103623660046114c1565b6001600160a01b031660009081526004602052604090205490565b34801561038957600080fd5b506101866103983660046117d2565b610cc7565b3480156103a957600080fd5b506002546101a8565b3480156103be57600080fd5b506103d26103cd3660046114c1565b610efa565b6040516101b29190611884565b3480156103eb57600080fd5b506101a86103fa3660046114de565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b34801561043157600080fd5b506101866104403660046114c1565b610f94565b6000546001600160a01b031633146104785760405162461bcd60e51b815260040161046f90611897565b60405180910390fd5b6001600160a01b0381166000908152600460205260409020546104ad5760405162461bcd60e51b815260040161046f906118cc565b60006104b882610738565b9050806104d75760405162461bcd60e51b815260040161046f90611912565b80600260008282546104e99190611973565b90915550506001600160a01b0382166000908152600560205260409020805482019055610516828261102f565b604080516001600160a01b0384168152602081018390527fdf20fd1e76bc69d672e4814fafb2c449bba3a5369d8359adf9e05e6fde87b056910160405180910390a15050565b6001600160a01b03821660009081526007602052604081205481906040516370a0823160e01b81523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156105bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105df919061198b565b6105e99190611973565b6001600160a01b03808616600090815260086020908152604080832093881683529290522054909150610624908490839061114d565b61114d565b949350505050565b6000546001600160a01b031633146106565760405162461bcd60e51b815260040161046f90611897565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c1919061198b565b90506106ce82338361118b565b5050565b6000546001600160a01b031633146106fc5760405162461bcd60e51b815260040161046f90611897565b61070660006111dd565b565b60006006828154811061071d5761071d6119a4565b6000918252602090912001546001600160a01b031692915050565b60008061074460025490565b61074e9047611973565b9050610774838261061f866001600160a01b031660009081526005602052604090205490565b9392505050565b6000546001600160a01b031633146107a55760405162461bcd60e51b815260040161046f90611897565b6001600160a01b0381166000908152600460205260409020546107da5760405162461bcd60e51b815260040161046f906118cc565b60006107e6838361055c565b9050806108055760405162461bcd60e51b815260040161046f90611912565b6001600160a01b0383166000908152600760205260408120805483929061082d908490611973565b90915550506001600160a01b03808416600090815260086020908152604080832093861683529290522080548201905561086883838361118b565b6001600160a01b03828116600090815260036020526040908190209051918516917fb91796ac388f2a71d412e9a062ce147adf6c8f3683c6b37fa5f002529fbcb5cf916108b891869186916119f5565b60405180910390a2505050565b6000546001600160a01b031633146108ef5760405162461bcd60e51b815260040161046f90611897565b60005b6006548110156106ce5760006004600060068481548110610915576109156119a4565b60009182526020808320909101546001600160a01b031683528201929092526040019020541161097f5760405162461bcd60e51b81526020600482015260156024820152744163636f756e7420686173206e6f2073686172657360581b604482015260640161046f565b60006109b28360068481548110610998576109986119a4565b6000918252602090912001546001600160a01b031661055c565b905080610a015760405162461bcd60e51b815260206004820152601a60248201527f6163636f756e74206973206e6f7420647565207061796d656e74000000000000604482015260640161046f565b6001600160a01b03831660009081526007602052604081208054839290610a29908490611973565b90915550506001600160a01b0383166000908152600860205260408120600680548493919086908110610a5e57610a5e6119a4565b60009182526020808320909101546001600160a01b0316835282019290925260400190208054909101905560068054610abe91859185908110610aa357610aa36119a4565b6000918252602090912001546001600160a01b03168361118b565b826001600160a01b03167fb91796ac388f2a71d412e9a062ce147adf6c8f3683c6b37fa5f002529fbcb5cf60068481548110610afc57610afc6119a4565b9060005260206000200160009054906101000a90046001600160a01b0316836003600060068881548110610b3257610b326119a4565b60009182526020808320909101546001600160a01b0316835282019290925260409081019091209051610b67939291906119f5565b60405180910390a25080610b7a81611ab7565b9150506108f2565b8051825114610bee5760405162461bcd60e51b815260206004820152603260248201527f5061796d656e7453706c69747465723a2070617965657320616e6420736861726044820152710cae640d8cadccee8d040dad2e6dac2e8c6d60731b606482015260840161046f565b6000825111610c3f5760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e7453706c69747465723a206e6f20706179656573000000000000604482015260640161046f565b8151835114610c4d57600080fd5b60005b8251811015610cc157610caf848281518110610c6e57610c6e6119a4565b6020026020010151848381518110610c8857610c886119a4565b6020026020010151848481518110610ca257610ca26119a4565b6020026020010151610cc7565b80610cb981611ab7565b915050610c50565b50505050565b6000546001600160a01b03163314610cf15760405162461bcd60e51b815260040161046f90611897565b6001600160a01b038216610d5c5760405162461bcd60e51b815260206004820152602c60248201527f5061796d656e7453706c69747465723a206163636f756e74206973207468652060448201526b7a65726f206164647265737360a01b606482015260840161046f565b60008111610dac5760405162461bcd60e51b815260206004820152601d60248201527f5061796d656e7453706c69747465723a20736861726573206172652030000000604482015260640161046f565b6001600160a01b03821660009081526004602052604090205415610e265760405162461bcd60e51b815260206004820152602b60248201527f5061796d656e7453706c69747465723a206163636f756e7420616c726561647960448201526a206861732073686172657360a81b606482015260840161046f565b6006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b038516908117909155600090815260046020526040902082905554610e8d908290611973565b6001556001600160a01b03821660009081526003602090815260409091208451610eb992860190611413565b507f319341ecdae9bdc47fd5810aaf1c42c449352b02df82b41b8076895b5f3a4688828285604051610eed93929190611ad2565b60405180910390a1505050565b60036020526000908152604090208054610f13906119ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3f906119ba565b8015610f8c5780601f10610f6157610100808354040283529160200191610f8c565b820191906000526020600020905b815481529060010190602001808311610f6f57829003601f168201915b505050505081565b6000546001600160a01b03163314610fbe5760405162461bcd60e51b815260040161046f90611897565b6001600160a01b0381166110235760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161046f565b61102c816111dd565b50565b8047101561107f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161046f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146110cc576040519150601f19603f3d011682016040523d82523d6000602084013e6110d1565b606091505b50509050806111485760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161046f565b505050565b6001546001600160a01b038416600090815260046020526040812054909183916111779086611b02565b6111819190611b21565b6106249190611b43565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261114890849061122d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611282826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112ff9092919063ffffffff16565b80519091501561114857808060200190518101906112a09190611b5a565b6111485760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161046f565b60606106248484600085856001600160a01b0385163b6113615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161046f565b600080866001600160a01b0316858760405161137d9190611b7c565b60006040518083038185875af1925050503d80600081146113ba576040519150601f19603f3d011682016040523d82523d6000602084013e6113bf565b606091505b50915091506113cf8282866113da565b979650505050505050565b606083156113e9575081610774565b8251156113f95782518084602001fd5b8160405162461bcd60e51b815260040161046f9190611884565b82805461141f906119ba565b90600052602060002090601f0160209004810192826114415760008555611487565b82601f1061145a57805160ff1916838001178555611487565b82800160010185558215611487579182015b8281111561148757825182559160200191906001019061146c565b50611493929150611497565b5090565b5b808211156114935760008155600101611498565b6001600160a01b038116811461102c57600080fd5b6000602082840312156114d357600080fd5b8135610774816114ac565b600080604083850312156114f157600080fd5b82356114fc816114ac565b9150602083013561150c816114ac565b809150509250929050565b60006020828403121561152957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561156f5761156f611530565b604052919050565b600067ffffffffffffffff82111561159157611591611530565b5060051b60200190565b600082601f8301126115ac57600080fd5b813567ffffffffffffffff8111156115c6576115c6611530565b6115d9601f8201601f1916602001611546565b8181528460208386010111156115ee57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261161c57600080fd5b8135602061163161162c83611577565b611546565b82815260059290921b8401810191818101908684111561165057600080fd5b8286015b84811015611674578035611667816114ac565b8352918301918301611654565b509695505050505050565b600082601f83011261169057600080fd5b813560206116a061162c83611577565b82815260059290921b840181019181810190868411156116bf57600080fd5b8286015b8481101561167457803583529183019183016116c3565b6000806000606084860312156116ef57600080fd5b833567ffffffffffffffff8082111561170757600080fd5b818601915086601f83011261171b57600080fd5b8135602061172b61162c83611577565b82815260059290921b8401810191818101908a84111561174a57600080fd5b8286015b84811015611782578035868111156117665760008081fd5b6117748d86838b010161159b565b84525091830191830161174e565b509750508701359250508082111561179957600080fd5b6117a58783880161160b565b935060408601359150808211156117bb57600080fd5b506117c88682870161167f565b9150509250925092565b6000806000606084860312156117e757600080fd5b833567ffffffffffffffff8111156117fe57600080fd5b61180a8682870161159b565b935050602084013561181b816114ac565b929592945050506040919091013590565b60005b8381101561184757818101518382015260200161182f565b83811115610cc15750506000910152565b6000815180845261187081602086016020860161182c565b601f01601f19169290920160200192915050565b6020815260006107746020830184611858565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526026908201527f5061796d656e7453706c69747465723a206163636f756e7420686173206e6f2060408201526573686172657360d01b606082015260800190565b6020808252602b908201527f5061796d656e7453706c69747465723a206163636f756e74206973206e6f742060408201526a191d59481c185e5b595b9d60aa1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156119865761198661195d565b500190565b60006020828403121561199d57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806119ce57607f821691505b602082108114156119ef57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03841681526020808201849052606060408301528254600091908290600181811c9082811680611a2d57607f831692505b858310811415611a4b57634e487b7160e01b85526022600452602485fd5b6060880183905260808801818015611a6a5760018114611a7b57611aa6565b60ff19861682528782019650611aa6565b60008b81526020902060005b86811015611aa057815484820152908501908901611a87565b83019750505b50949b9a5050505050505050505050565b6000600019821415611acb57611acb61195d565b5060010190565b60018060a01b0384168152826020820152606060408201526000611af96060830184611858565b95945050505050565b6000816000190483118215151615611b1c57611b1c61195d565b500290565b600082611b3e57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015611b5557611b5561195d565b500390565b600060208284031215611b6c57600080fd5b8151801515811461077457600080fd5b60008251611b8e81846020870161182c565b919091019291505056fea2646970667358221220cea38da9b8d8e61863a266d7a4d03f988442310148ec326bdfa1c797e903ac6e64736f6c634300080b0033",
  "deployedSourceMap": "1587:8778:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3657:40;719:10:4;3657:40:5;;;-1:-1:-1;;;;;206:32:6;;;188:51;;3687:9:5;270:2:6;255:18;;248:34;161:18;3657:40:5;;;;;;;1587:8778;;;;;6573:664;;;;;;;;;;-1:-1:-1;6573:664:5;;;;;:::i;:::-;;:::i;:::-;;6113:266;;;;;;;;;;-1:-1:-1;6113:266:5;;;;;:::i;:::-;;:::i;:::-;;;1275:25:6;;;1263:2;1248:18;6113:266:5;;;;;;;;4659:120;;;;;;;;;;-1:-1:-1;4659:120:5;;;;;:::i;:::-;-1:-1:-1;;;;;4746:26:5;4720:7;4746:26;;;:19;:26;;;;;;;4659:120;4237:89;;;;;;;;;;-1:-1:-1;4307:12:5;;4237:89;;10178:185;;;;;;;;;;-1:-1:-1;10178:185:5;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;5554:98:5:-;;;;;;;;;;-1:-1:-1;5554:98:5;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1935:32:6;;;1917:51;;1905:2;1890:18;5554:98:5;1771:203:6;1036:85:0;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;5062:107:5;;;;;;;;;;-1:-1:-1;5062:107:5;;;;;:::i;:::-;-1:-1:-1;;;;;5144:18:5;5118:7;5144:18;;;:9;:18;;;;;;;5062:107;5737:222;;;;;;;;;;-1:-1:-1;5737:222:5;;;;;:::i;:::-;;:::i;7498:814::-;;;;;;;;;;-1:-1:-1;7498:814:5;;;;;:::i;:::-;;:::i;8383:649::-;;;;;;;;;;-1:-1:-1;8383:649:5;;;;;:::i;:::-;;:::i;3710:449::-;;;;;;;;;;-1:-1:-1;3710:449:5;;;;;:::i;:::-;;:::i;4865:103::-;;;;;;;;;;-1:-1:-1;4865:103:5;;;;;:::i;:::-;-1:-1:-1;;;;;4945:16:5;4919:7;4945:16;;;:7;:16;;;;;;;4865:103;9631:541;;;;;;;;;;-1:-1:-1;9631:541:5;;;;;:::i;:::-;;:::i;4415:93::-;;;;;;;;;;-1:-1:-1;4487:14:5;;4415:93;;1988:47;;;;;;;;;;-1:-1:-1;1988:47:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5332:136::-;;;;;;;;;;-1:-1:-1;5332:136:5;;;;;:::i;:::-;-1:-1:-1;;;;;5431:21:5;;;5405:7;5431:21;;;:14;:21;;;;;;;;:30;;;;;;;;;;;;;5332:136;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;6573:664:5:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;6657:16:5;::::1;6676:1;6657:16:::0;;;:7:::1;:16;::::0;;;;;6649:71:::1;;;;-1:-1:-1::0;;;6649:71:5::1;;;;;;;:::i;:::-;6731:15;6749:19;6760:7;6749:10;:19::i;:::-;6731:37:::0;-1:-1:-1;6787:12:5;6779:68:::1;;;;-1:-1:-1::0;;;6779:68:5::1;;;;;;;:::i;:::-;7056:7;7038:14;;:25;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;7097:18:5;::::1;;::::0;;;:9:::1;:18;::::0;;;;:29;;;::::1;::::0;;7147:35:::1;7107:7:::0;7119;7147:17:::1;:35::i;:::-;7197:33;::::0;;-1:-1:-1;;;;;206:32:6;;188:51;;270:2;255:18;;248:34;;;7197:33:5::1;::::0;161:18:6;7197:33:5::1;;;;;;;6639:598;6573:664:::0;:::o;6113:266::-;-1:-1:-1;;;;;4746:26:5;;6188:7;4746:26;;;:19;:26;;;;;;6188:7;;6231:30;;-1:-1:-1;;;6231:30:5;;6255:4;6231:30;;;1917:51:6;-1:-1:-1;;;;;6231:15:5;;;;;1890:18:6;;6231:30:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;-1:-1:-1;;;;;5431:21:5;;;5405:7;5431:21;;;:14;:21;;;;;;;;:30;;;;;;;;;;6207:80;;-1:-1:-1;6304:68:5;;6320:7;;6207:80;;6304:15;:68::i;6344:27::-;6304:15;:68::i;:::-;6297:75;6113:266;-1:-1:-1;;;;6113:266:5:o;10178:185::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;10260:30:5::1;::::0;-1:-1:-1;;;10260:30:5;;10284:4:::1;10260:30;::::0;::::1;1917:51:6::0;10237:20:5::1;::::0;-1:-1:-1;;;;;10260:15:5;::::1;::::0;::::1;::::0;1890:18:6;;10260:30:5::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10237:53;;10301:55;10324:5;10331:10;10343:12;10301:22;:55::i;:::-;10227:136;10178:185:::0;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5554:98:5:-;5605:7;5631;5639:5;5631:14;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5631:14:5;;5554:98;-1:-1:-1;;5554:98:5:o;5737:222::-;5795:7;5814:21;5862:15;4487:14;;;4415:93;5862:15;5838:39;;:21;:39;:::i;:::-;5814:63;;5894:58;5910:7;5919:13;5934:17;5943:7;-1:-1:-1;;;;;5144:18:5;5118:7;5144:18;;;:9;:18;;;;;;;5062:107;5894:58;5887:65;5737:222;-1:-1:-1;;;5737:222:5:o;7498:814::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;7591:16:5;::::1;7610:1;7591:16:::0;;;:7:::1;:16;::::0;;;;;7583:71:::1;;;;-1:-1:-1::0;;;7583:71:5::1;;;;;;;:::i;:::-;7665:15;7683:29;7697:5;7704:7;7683:13;:29::i;:::-;7665:47:::0;-1:-1:-1;7731:12:5;7723:68:::1;;;;-1:-1:-1::0;;;7723:68:5::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8041:26:5;::::1;;::::0;;;:19:::1;:26;::::0;;;;:37;;8071:7;;8041:26;:37:::1;::::0;8071:7;;8041:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8112:21:5;;::::1;;::::0;;;:14:::1;:21;::::0;;;;;;;:30;;::::1;::::0;;;;;;:41;;;::::1;::::0;;8174:47:::1;8127:5:::0;8134:7;8146;8174:22:::1;:47::i;:::-;-1:-1:-1::0;;;;;8282:22:5;;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;8236:69;;;;::::1;::::0;::::1;::::0;::::1;::::0;8264:7;;8273;;8236:69:::1;:::i;:::-;;;;;;;;7573:739;7498:814:::0;;:::o;8383:649::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8461:9:5::1;8456:570;8480:7;:14:::0;8476:18;::::1;8456:570;;;8545:1;8523:7;:19;8531:7;8539:1;8531:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;8531:10:5::1;8523:19:::0;;;::::1;::::0;;;;;;;;;:23:::1;8515:57;;;::::0;-1:-1:-1;;;8515:57:5;;11949:2:6;8515:57:5::1;::::0;::::1;11931:21:6::0;11988:2;11968:18;;;11961:30;-1:-1:-1;;;12007:18:6;;;12000:51;12068:18;;8515:57:5::1;11747:345:6::0;8515:57:5::1;8587:15;8605:32;8619:5;8626:7;8634:1;8626:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;8626:10:5::1;8605:13;:32::i;:::-;8587:50:::0;-1:-1:-1;8660:12:5;8652:51:::1;;;::::0;-1:-1:-1;;;8652:51:5;;12299:2:6;8652:51:5::1;::::0;::::1;12281:21:6::0;12338:2;12318:18;;;12311:30;12377:28;12357:18;;;12350:56;12423:18;;8652:51:5::1;12097:350:6::0;8652:51:5::1;-1:-1:-1::0;;;;;8718:26:5;::::1;;::::0;;;:19:::1;:26;::::0;;;;:37;;8748:7;;8718:26;:37:::1;::::0;8748:7;;8718:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8798:21:5;::::1;;::::0;;;:14:::1;:21;::::0;;;;8820:7:::1;:10:::0;;8835:7;;8798:21;8820:7;8828:1;;8820:10;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;8820:10:5::1;8798:33:::0;;;::::1;::::0;;;;;;;;:44;;;;::::1;::::0;;8901:7:::1;:10:::0;;8871:50:::1;::::0;8894:5;;8909:1;;8901:10;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;8901:10:5::1;8913:7:::0;8871:22:::1;:50::i;:::-;8961:5;-1:-1:-1::0;;;;;8940:75:5::1;;8968:7;8976:1;8968:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8968:10:5::1;8980:7;8989:13;:25;9003:7;9011:1;9003:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;9003:10:5::1;8989:25:::0;;;::::1;::::0;;;;;;;;;;;8940:75;;::::1;::::0;;;8989:25;8940:75:::1;:::i;:::-;;;;;;;;-1:-1:-1::0;8496:3:5;::::1;::::0;::::1;:::i;:::-;;;;8456:570;;3710:449:::0;3848:7;:14;3831:6;:13;:31;3823:94;;;;-1:-1:-1;;;3823:94:5;;12794:2:6;3823:94:5;;;12776:21:6;12833:2;12813:18;;;12806:30;12872:34;12852:18;;;12845:62;-1:-1:-1;;;12923:18:6;;;12916:48;12981:19;;3823:94:5;12592:414:6;3823:94:5;3951:1;3935:6;:13;:17;3927:56;;;;-1:-1:-1;;;3927:56:5;;13213:2:6;3927:56:5;;;13195:21:6;13252:2;13232:18;;;13225:30;13291:28;13271:18;;;13264:56;13337:18;;3927:56:5;13011:350:6;3927:56:5;4017:6;:13;4001:5;:12;:29;3993:38;;;;;;4047:9;4042:111;4066:6;:13;4062:1;:17;4042:111;;;4100:42;4110:5;4116:1;4110:8;;;;;;;;:::i;:::-;;;;;;;4120:6;4127:1;4120:9;;;;;;;;:::i;:::-;;;;;;;4131:7;4139:1;4131:10;;;;;;;;:::i;:::-;;;;;;;4100:9;:42::i;:::-;4081:3;;;;:::i;:::-;;;;4042:111;;;;3710:449;;;:::o;9631:541::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;9740:21:5;::::1;9732:78;;;::::0;-1:-1:-1;;;9732:78:5;;13568:2:6;9732:78:5::1;::::0;::::1;13550:21:6::0;13607:2;13587:18;;;13580:30;13646:34;13626:18;;;13619:62;-1:-1:-1;;;13697:18:6;;;13690:42;13749:19;;9732:78:5::1;13366:408:6::0;9732:78:5::1;9838:1;9828:7;:11;9820:53;;;::::0;-1:-1:-1;;;9820:53:5;;13981:2:6;9820:53:5::1;::::0;::::1;13963:21:6::0;14020:2;14000:18;;;13993:30;14059:31;14039:18;;;14032:59;14108:18;;9820:53:5::1;13779:353:6::0;9820:53:5::1;-1:-1:-1::0;;;;;9891:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;;:21;9883:77:::1;;;::::0;-1:-1:-1;;;9883:77:5;;14339:2:6;9883:77:5::1;::::0;::::1;14321:21:6::0;14378:2;14358:18;;;14351:30;14417:34;14397:18;;;14390:62;-1:-1:-1;;;14468:18:6;;;14461:41;14519:19;;9883:77:5::1;14137:407:6::0;9883:77:5::1;9971:7;:21:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;9971:21:5::1;-1:-1:-1::0;;;;;9971:21:5;::::1;::::0;;::::1;::::0;;;-1:-1:-1;10002:16:5;;;:7:::1;9971:21;10002:16:::0;;;;:26;;;10053:12;:22:::1;::::0;10002:26;;10053:22:::1;:::i;:::-;10038:12;:37:::0;-1:-1:-1;;;;;10085:22:5;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;;:30;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;10130:35;10141:7;10150;10159:5;10130:35;;;;;;;;:::i;:::-;;;;;;;;9631:541:::0;;;:::o;1988:47::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;15144:2:6;1998:73:0::1;::::0;::::1;15126:21:6::0;15183:2;15163:18;;;15156:30;15222:34;15202:18;;;15195:62;-1:-1:-1;;;15273:18:6;;;15266:36;15319:19;;1998:73:0::1;14942:402:6::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2412:312:3:-;2526:6;2501:21;:31;;2493:73;;;;-1:-1:-1;;;2493:73:3;;15551:2:6;2493:73:3;;;15533:21:6;15590:2;15570:18;;;15563:30;15629:31;15609:18;;;15602:59;15678:18;;2493:73:3;15349:353:6;2493:73:3;2578:12;2596:9;-1:-1:-1;;;;;2596:14:3;2618:6;2596:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:52;;;2647:7;2639:78;;;;-1:-1:-1;;;2639:78:3;;16119:2:6;2639:78:3;;;16101:21:6;16158:2;16138:18;;;16131:30;16197:34;16177:18;;;16170:62;16268:28;16248:18;;;16241:56;16314:19;;2639:78:3;15917:422:6;2639:78:3;2483:241;2412:312;;:::o;9204:242:5:-;9409:12;;-1:-1:-1;;;;;9389:16:5;;9346:7;9389:16;;;:7;:16;;;;;;9346:7;;9424:15;;9373:32;;:13;:32;:::i;:::-;9372:49;;;;:::i;:::-;:67;;;;:::i;701:205:2:-;840:58;;;-1:-1:-1;;;;;206:32:6;;840:58:2;;;188:51:6;255:18;;;;248:34;;;840:58:2;;;;;;;;;;161:18:6;;;;840:58:2;;;;;;;;-1:-1:-1;;;;;840:58:2;-1:-1:-1;;;840:58:2;;;813:86;;833:5;;813:19;:86::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3207:706:2:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:2;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:2;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:2;;17353:2:6;3811:85:2;;;17335:21:6;17392:2;17372:18;;;17365:30;17431:34;17411:18;;;17404:62;-1:-1:-1;;;17482:18:6;;;17475:40;17532:19;;3811:85:2;17151:406:6;3861:223:3;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;-1:-1:-1;;;;;1465:19:3;;;5228:60;;;;-1:-1:-1;;;5228:60:3;;18171:2:6;5228:60:3;;;18153:21:6;18210:2;18190:18;;;18183:30;18249:31;18229:18;;;18222:59;18298:18;;5228:60:3;17969:353:6;5228:60:3;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:3;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:3:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:3;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:3;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;293:139:6;-1:-1:-1;;;;;376:31:6;;366:42;;356:70;;422:1;419;412:12;437:263;504:6;557:2;545:9;536:7;532:23;528:32;525:52;;;573:1;570;563:12;525:52;612:9;599:23;631:39;664:5;631:39;:::i;705:419::-;788:6;796;849:2;837:9;828:7;824:23;820:32;817:52;;;865:1;862;855:12;817:52;904:9;891:23;923:39;956:5;923:39;:::i;:::-;981:5;-1:-1:-1;1038:2:6;1023:18;;1010:32;1051:41;1010:32;1051:41;:::i;:::-;1111:7;1101:17;;;705:419;;;;;:::o;1586:180::-;1645:6;1698:2;1686:9;1677:7;1673:23;1669:32;1666:52;;;1714:1;1711;1704:12;1666:52;-1:-1:-1;1737:23:6;;1586:180;-1:-1:-1;1586:180:6:o;2239:127::-;2300:10;2295:3;2291:20;2288:1;2281:31;2331:4;2328:1;2321:15;2355:4;2352:1;2345:15;2371:275;2442:2;2436:9;2507:2;2488:13;;-1:-1:-1;;2484:27:6;2472:40;;2542:18;2527:34;;2563:22;;;2524:62;2521:88;;;2589:18;;:::i;:::-;2625:2;2618:22;2371:275;;-1:-1:-1;2371:275:6:o;2651:182::-;2710:4;2743:18;2735:6;2732:30;2729:56;;;2765:18;;:::i;:::-;-1:-1:-1;2810:1:6;2806:14;2822:4;2802:25;;2651:182::o;2838:531::-;2881:5;2934:3;2927:4;2919:6;2915:17;2911:27;2901:55;;2952:1;2949;2942:12;2901:55;2988:6;2975:20;3014:18;3010:2;3007:26;3004:52;;;3036:18;;:::i;:::-;3080:55;3123:2;3104:13;;-1:-1:-1;;3100:27:6;3129:4;3096:38;3080:55;:::i;:::-;3160:2;3151:7;3144:19;3206:3;3199:4;3194:2;3186:6;3182:15;3178:26;3175:35;3172:55;;;3223:1;3220;3213:12;3172:55;3288:2;3281:4;3273:6;3269:17;3262:4;3253:7;3249:18;3236:55;3336:1;3311:16;;;3329:4;3307:27;3300:38;;;;3315:7;2838:531;-1:-1:-1;;;2838:531:6:o;3374:744::-;3428:5;3481:3;3474:4;3466:6;3462:17;3458:27;3448:55;;3499:1;3496;3489:12;3448:55;3535:6;3522:20;3561:4;3585:59;3601:42;3640:2;3601:42;:::i;:::-;3585:59;:::i;:::-;3678:15;;;3764:1;3760:10;;;;3748:23;;3744:32;;;3709:12;;;;3788:15;;;3785:35;;;3816:1;3813;3806:12;3785:35;3852:2;3844:6;3840:15;3864:225;3880:6;3875:3;3872:15;3864:225;;;3960:3;3947:17;3977:39;4010:5;3977:39;:::i;:::-;4029:18;;4067:12;;;;3897;;3864:225;;;-1:-1:-1;4107:5:6;3374:744;-1:-1:-1;;;;;;3374:744:6:o;4123:661::-;4177:5;4230:3;4223:4;4215:6;4211:17;4207:27;4197:55;;4248:1;4245;4238:12;4197:55;4284:6;4271:20;4310:4;4334:59;4350:42;4389:2;4350:42;:::i;4334:59::-;4427:15;;;4513:1;4509:10;;;;4497:23;;4493:32;;;4458:12;;;;4537:15;;;4534:35;;;4565:1;4562;4555:12;4534:35;4601:2;4593:6;4589:15;4613:142;4629:6;4624:3;4621:15;4613:142;;;4695:17;;4683:30;;4733:12;;;;4646;;4613:142;;4789:1586;4951:6;4959;4967;5020:2;5008:9;4999:7;4995:23;4991:32;4988:52;;;5036:1;5033;5026:12;4988:52;5076:9;5063:23;5105:18;5146:2;5138:6;5135:14;5132:34;;;5162:1;5159;5152:12;5132:34;5200:6;5189:9;5185:22;5175:32;;5245:7;5238:4;5234:2;5230:13;5226:27;5216:55;;5267:1;5264;5257:12;5216:55;5303:2;5290:16;5325:4;5349:59;5365:42;5404:2;5365:42;:::i;5349:59::-;5442:15;;;5524:1;5520:10;;;;5512:19;;5508:28;;;5473:12;;;;5548:19;;;5545:39;;;5580:1;5577;5570:12;5545:39;5612:2;5608;5604:11;5624:353;5640:6;5635:3;5632:15;5624:353;;;5726:3;5713:17;5762:2;5749:11;5746:19;5743:109;;;5806:1;5835:2;5831;5824:14;5743:109;5877:57;5926:7;5921:2;5907:11;5903:2;5899:20;5895:29;5877:57;:::i;:::-;5865:70;;-1:-1:-1;5955:12:6;;;;5657;;5624:353;;;-1:-1:-1;5996:5:6;-1:-1:-1;;6039:18:6;;6026:32;;-1:-1:-1;;6070:16:6;;;6067:36;;;6099:1;6096;6089:12;6067:36;6122:63;6177:7;6166:8;6155:9;6151:24;6122:63;:::i;:::-;6112:73;;6238:2;6227:9;6223:18;6210:32;6194:48;;6267:2;6257:8;6254:16;6251:36;;;6283:1;6280;6273:12;6251:36;;6306:63;6361:7;6350:8;6339:9;6335:24;6306:63;:::i;:::-;6296:73;;;4789:1586;;;;;:::o;6380:533::-;6467:6;6475;6483;6536:2;6524:9;6515:7;6511:23;6507:32;6504:52;;;6552:1;6549;6542:12;6504:52;6592:9;6579:23;6625:18;6617:6;6614:30;6611:50;;;6657:1;6654;6647:12;6611:50;6680;6722:7;6713:6;6702:9;6698:22;6680:50;:::i;:::-;6670:60;;;6780:2;6769:9;6765:18;6752:32;6793:39;6826:5;6793:39;:::i;:::-;6380:533;;6851:5;;-1:-1:-1;;;6903:2:6;6888:18;;;;6875:32;;6380:533::o;7073:258::-;7145:1;7155:113;7169:6;7166:1;7163:13;7155:113;;;7245:11;;;7239:18;7226:11;;;7219:39;7191:2;7184:10;7155:113;;;7286:6;7283:1;7280:13;7277:48;;;-1:-1:-1;;7321:1:6;7303:16;;7296:27;7073:258::o;7336:::-;7378:3;7416:5;7410:12;7443:6;7438:3;7431:19;7459:63;7515:6;7508:4;7503:3;7499:14;7492:4;7485:5;7481:16;7459:63;:::i;:::-;7576:2;7555:15;-1:-1:-1;;7551:29:6;7542:39;;;;7583:4;7538:50;;7336:258;-1:-1:-1;;7336:258:6:o;7599:220::-;7748:2;7737:9;7730:21;7711:4;7768:45;7809:2;7798:9;7794:18;7786:6;7768:45;:::i;7824:356::-;8026:2;8008:21;;;8045:18;;;8038:30;8104:34;8099:2;8084:18;;8077:62;8171:2;8156:18;;7824:356::o;8185:402::-;8387:2;8369:21;;;8426:2;8406:18;;;8399:30;8465:34;8460:2;8445:18;;8438:62;-1:-1:-1;;;8531:2:6;8516:18;;8509:36;8577:3;8562:19;;8185:402::o;8592:407::-;8794:2;8776:21;;;8833:2;8813:18;;;8806:30;8872:34;8867:2;8852:18;;8845:62;-1:-1:-1;;;8938:2:6;8923:18;;8916:41;8989:3;8974:19;;8592:407::o;9004:127::-;9065:10;9060:3;9056:20;9053:1;9046:31;9096:4;9093:1;9086:15;9120:4;9117:1;9110:15;9136:128;9176:3;9207:1;9203:6;9200:1;9197:13;9194:39;;;9213:18;;:::i;:::-;-1:-1:-1;9249:9:6;;9136:128::o;9556:184::-;9626:6;9679:2;9667:9;9658:7;9654:23;9650:32;9647:52;;;9695:1;9692;9685:12;9647:52;-1:-1:-1;9718:16:6;;9556:184;-1:-1:-1;9556:184:6:o;9745:127::-;9806:10;9801:3;9797:20;9794:1;9787:31;9837:4;9834:1;9827:15;9861:4;9858:1;9851:15;9877:380;9956:1;9952:12;;;;9999;;;10020:61;;10074:4;10066:6;10062:17;10052:27;;10020:61;10127:2;10119:6;10116:14;10096:18;10093:38;10090:161;;;10173:10;10168:3;10164:20;10161:1;10154:31;10208:4;10205:1;10198:15;10236:4;10233:1;10226:15;10090:161;;9877:380;;;:::o;10388:1354::-;-1:-1:-1;;;;;10590:32:6;;10572:51;;10642:2;10660:18;;;10653:34;;;10723:2;10718;10703:18;;10696:30;10773:13;;10553:4;;10642:2;10553:4;;10619:1;10851:18;;;;10904;;;;10931:61;;10985:4;10977:6;10973:17;10963:27;;10931:61;11038:2;11030:6;11027:14;11007:18;11004:38;11001:165;;;-1:-1:-1;;;11065:33:6;;11121:4;11118:1;11111:15;11151:4;11072:3;11139:17;11001:165;11237:2;11222:18;;7005:19;;;7048:14;;;11265:18;11292:100;;;;11406:1;11401:315;;;;11258:458;;11292:100;-1:-1:-1;;11325:24:6;;11313:37;;11370:12;;;;-1:-1:-1;11292:100:6;;11401:315;10335:1;10328:14;;;10372:4;10359:18;;11496:1;11510:165;11524:6;11521:1;11518:13;11510:165;;;11602:14;;11589:11;;;11582:35;11645:16;;;;11539:10;;11510:165;;;11695:11;;;-1:-1:-1;;11258:458:6;-1:-1:-1;11733:3:6;;10388:1354;-1:-1:-1;;;;;;;;;;;10388:1354:6:o;12452:135::-;12491:3;-1:-1:-1;;12512:17:6;;12509:43;;;12532:18;;:::i;:::-;-1:-1:-1;12579:1:6;12568:13;;12452:135::o;14549:388::-;14783:1;14779;14774:3;14770:11;14766:19;14758:6;14754:32;14743:9;14736:51;14823:6;14818:2;14807:9;14803:18;14796:34;14866:2;14861;14850:9;14846:18;14839:30;14717:4;14886:45;14927:2;14916:9;14912:18;14904:6;14886:45;:::i;:::-;14878:53;14549:388;-1:-1:-1;;;;;14549:388:6:o;16344:168::-;16384:7;16450:1;16446;16442:6;16438:14;16435:1;16432:21;16427:1;16420:9;16413:17;16409:45;16406:71;;;16457:18;;:::i;:::-;-1:-1:-1;16497:9:6;;16344:168::o;16517:217::-;16557:1;16583;16573:132;;16627:10;16622:3;16618:20;16615:1;16608:31;16662:4;16659:1;16652:15;16690:4;16687:1;16680:15;16573:132;-1:-1:-1;16719:9:6;;16517:217::o;16739:125::-;16779:4;16807:1;16804;16801:8;16798:34;;;16812:18;;:::i;:::-;-1:-1:-1;16849:9:6;;16739:125::o;16869:277::-;16936:6;16989:2;16977:9;16968:7;16964:23;16960:32;16957:52;;;17005:1;17002;16995:12;16957:52;17037:9;17031:16;17090:5;17083:13;17076:21;17069:5;17066:32;17056:60;;17112:1;17109;17102:12;18327:274;18456:3;18494:6;18488:13;18510:53;18556:6;18551:3;18544:4;18536:6;18532:17;18510:53;:::i;:::-;18579:16;;;;;18327:274;-1:-1:-1;;18327:274:6:o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware that the Ether will be split in this way, since it is handled transparently by the contract. The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim an amount proportional to the percentage of total shares they were assigned. The distribution of shares is set at the time of contract deployment and can't be updated thereafter. `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release} function. NOTE: This contract assumes that ERC20 tokens will behave similarly to native tokens (Ether). Rebasing tokens, and tokens that apply fees during transfers, are likely to not be supported as expected. If in doubt, we encourage you to run tests before sending real value to this contract.",
    "kind": "dev",
    "methods": {
      "_addPayee(string,address,uint256)": {
        "details": "Add a new payee to the contract.",
        "params": {
          "account": "The address of the payee to add.",
          "shares_": "The number of shares owned by the payee."
        }
      },
      "bulkReleaseERC(address)": {
        "notice": "Function to make the smart contract Bulk"
      },
      "constructor": {
        "details": "Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at the matching position in the `shares` array. All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no duplicates in `payees`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "payee(uint256)": {
        "details": "Getter for the address of the payee number `index`."
      },
      "releasable(address)": {
        "details": "Getter for the amount of payee's releasable Ether."
      },
      "releasableERC(address,address)": {
        "details": "Getter for the amount of payee's releasable `token` tokens. `token` should be the address of an IERC20 contract."
      },
      "release(address)": {
        "details": "Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the total shares and their previous withdrawals."
      },
      "releaseERC(address,address)": {
        "details": "Triggers a transfer to `account` of the amount of `token` tokens they are owed, according to their percentage of the total shares and their previous withdrawals. `token` must be the address of an IERC20 contract."
      },
      "released(address)": {
        "details": "Getter for the amount of Ether already released to a payee."
      },
      "releasedERC(address,address)": {
        "details": "Getter for the amount of `token` tokens already released to a payee. `token` should be the address of an IERC20 contract."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "shares(address)": {
        "details": "Getter for the amount of shares held by an account."
      },
      "totalERCReleased(address)": {
        "details": "Getter for the total amount of `token` already released. `token` should be the address of an IERC20 contract."
      },
      "totalReleased()": {
        "details": "Getter for the total amount of Ether already released."
      },
      "totalShares()": {
        "details": "Getter for the total shares held by payees."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "PaymentSplitter",
    "version": 1
  },
  "offset": [1587, 10365],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3F8EACE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD84043F4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD84043F4 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xE33B7DE3 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xE6E11565 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xF1D9CFFD EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xB32A185B EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xB4CF99A2 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xB969EF48 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xCE7C2AC2 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51CFF8D9 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8B83209B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19165587 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x1C35F4C3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x2A5899D0 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x161 JUMPI PUSH32 0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770 CALLER PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE CALLVALUE PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x6D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x1517 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x738 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0xB82 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x362 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D2 JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0xEFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH2 0x440 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0xF94 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B8 DUP3 PUSH2 0x738 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1912 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x1973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0x516 DUP3 DUP3 PUSH2 0x102F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xDF20FD1E76BC69D672E4814FAFB2C449BBA3A5369D8359ADF9E05E6FDE87B056 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x624 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH2 0x114D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST SWAP1 POP PUSH2 0x6CE DUP3 CALLER DUP4 PUSH2 0x118B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x706 PUSH1 0x0 PUSH2 0x11DD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x71D JUMPI PUSH2 0x71D PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x744 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x74E SWAP1 SELFBALANCE PUSH2 0x1973 JUMP JUMPDEST SWAP1 POP PUSH2 0x774 DUP4 DUP3 PUSH2 0x61F DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E6 DUP4 DUP4 PUSH2 0x55C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x82D SWAP1 DUP5 SWAP1 PUSH2 0x1973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH2 0x868 DUP4 DUP4 DUP4 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD SWAP2 DUP6 AND SWAP2 PUSH32 0xB91796AC388F2A71D412E9A062CE147ADF6C8F3683C6B37FA5F002529FBCB5CF SWAP2 PUSH2 0x8B8 SWAP2 DUP7 SWAP2 DUP7 SWAP2 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x915 JUMPI PUSH2 0x915 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4163636F756E7420686173206E6F20736861726573 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B2 DUP4 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x998 JUMPI PUSH2 0x998 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55C JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E74206973206E6F7420647565207061796D656E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA29 SWAP1 DUP5 SWAP1 PUSH2 0x1973 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 DUP1 SLOAD DUP5 SWAP4 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xA5E JUMPI PUSH2 0xA5E PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH2 0xABE SWAP2 DUP6 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0xAA3 JUMPI PUSH2 0xAA3 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x118B JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xB91796AC388F2A71D412E9A062CE147ADF6C8F3683C6B37FA5F002529FBCB5CF PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xAFC JUMPI PUSH2 0xAFC PUSH2 0x19A4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x3 PUSH1 0x0 PUSH1 0x6 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xB32 JUMPI PUSH2 0xB32 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD SWAP1 SWAP2 KECCAK256 SWAP1 MLOAD PUSH2 0xB67 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP DUP1 PUSH2 0xB7A DUP2 PUSH2 0x1AB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8F2 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A2070617965657320616E642073686172 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0xCAE640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x73 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206E6F20706179656573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xCC1 JUMPI PUSH2 0xCAF DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC6E JUMPI PUSH2 0xC6E PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC88 JUMPI PUSH2 0xC88 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCA2 JUMPI PUSH2 0xCA2 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xCC7 JUMP JUMPDEST DUP1 PUSH2 0xCB9 DUP2 PUSH2 0x1AB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC50 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E742069732074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xDAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A20736861726573206172652030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xE26 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E7420616C7265616479 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x2068617320736861726573 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE SLOAD PUSH2 0xE8D SWAP1 DUP3 SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP5 MLOAD PUSH2 0xEB9 SWAP3 DUP7 ADD SWAP1 PUSH2 0x1413 JUMP JUMPDEST POP PUSH32 0x319341ECDAE9BDC47FD5810AAF1C42C449352B02DF82B41B8076895B5F3A4688 DUP3 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xF13 SWAP1 PUSH2 0x19BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF3F SWAP1 PUSH2 0x19BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF8C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF61 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF8C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF6F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP1 PUSH2 0x1897 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH2 0x102C DUP2 PUSH2 0x11DD JUMP JUMPDEST POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x107F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10CC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0x1177 SWAP1 DUP7 PUSH2 0x1B02 JUMP JUMPDEST PUSH2 0x1181 SWAP2 SWAP1 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1148 SWAP1 DUP5 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1282 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12FF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1148 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x1B5A JUMP JUMPDEST PUSH2 0x1148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x624 DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1361 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x46F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x137D SWAP2 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13BA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13CF DUP3 DUP3 DUP7 PUSH2 0x13DA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13E9 JUMPI POP DUP2 PUSH2 0x774 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x13F9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1884 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x141F SWAP1 PUSH2 0x19BA JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1441 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1487 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x145A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1487 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1487 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1487 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x146C JUMP JUMPDEST POP PUSH2 0x1493 SWAP3 SWAP2 POP PUSH2 0x1497 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1493 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x102C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x774 DUP2 PUSH2 0x14AC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14FC DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x150C DUP2 PUSH2 0x14AC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x156F JUMPI PUSH2 0x156F PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1591 JUMPI PUSH2 0x1591 PUSH2 0x1530 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x15AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C6 JUMPI PUSH2 0x15C6 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x15D9 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1546 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x15EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x161C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1631 PUSH2 0x162C DUP4 PUSH2 0x1577 JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1674 JUMPI DUP1 CALLDATALOAD PUSH2 0x1667 DUP2 PUSH2 0x14AC JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1654 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x16A0 PUSH2 0x162C DUP4 PUSH2 0x1577 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x16BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1674 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x171B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x172B PUSH2 0x162C DUP4 PUSH2 0x1577 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1782 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x1766 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1774 DUP14 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x159B JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x174E JUMP JUMPDEST POP SWAP8 POP POP DUP8 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A5 DUP8 DUP4 DUP9 ADD PUSH2 0x160B JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C8 DUP7 DUP3 DUP8 ADD PUSH2 0x167F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180A DUP7 DUP3 DUP8 ADD PUSH2 0x159B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x181B DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1847 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x182F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xCC1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1870 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x182C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x774 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1858 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E7420686173206E6F20 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x736861726573 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x5061796D656E7453706C69747465723A206163636F756E74206973206E6F7420 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x191D59481C185E5B595B9D PUSH1 0xAA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1986 JUMPI PUSH2 0x1986 PUSH2 0x195D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x19CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x19EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE DUP3 SLOAD PUSH1 0x0 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 DUP2 AND DUP1 PUSH2 0x1A2D JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST DUP6 DUP4 LT DUP2 EQ ISZERO PUSH2 0x1A4B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x60 DUP9 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP9 ADD DUP2 DUP1 ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1A7B JUMPI PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP3 MSTORE DUP8 DUP3 ADD SWAP7 POP PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1AA0 JUMPI DUP2 SLOAD DUP5 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP10 ADD PUSH2 0x1A87 JUMP JUMPDEST DUP4 ADD SWAP8 POP POP JUMPDEST POP SWAP5 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1ACB JUMPI PUSH2 0x1ACB PUSH2 0x195D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1AF9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1858 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B1C JUMPI PUSH2 0x1B1C PUSH2 0x195D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B3E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B55 JUMPI PUSH2 0x1B55 PUSH2 0x195D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1B8E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x182C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE LOG3 DUP14 0xA9 0xB8 0xD8 0xE6 XOR PUSH4 0xA266D7A4 0xD0 EXTCODEHASH SWAP9 DUP5 TIMESTAMP BALANCE ADD BASEFEE 0xEC ORIGIN PUSH12 0xDFA1C797E903AC6E64736F6C PUSH4 0x4300080B STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "12": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA3F8EACE"
    },
    "25": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "GT",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA0"
    },
    "29": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD84043F4"
    },
    "36": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "GT",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD84043F4"
    },
    "47": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37D"
    },
    "51": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE33B7DE3"
    },
    "58": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39D"
    },
    "62": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE6E11565"
    },
    "69": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B2"
    },
    "73": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "75": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF1D9CFFD"
    },
    "80": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "81": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3DF"
    },
    "84": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "85": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "86": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x425"
    },
    "95": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "96": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "REVERT",
      "path": "5"
    },
    "100": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPDEST",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA3F8EACE"
    },
    "107": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "108": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C7"
    },
    "111": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB32A185B"
    },
    "118": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "119": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E7"
    },
    "122": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "123": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "124": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB4CF99A2"
    },
    "129": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "130": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x307"
    },
    "133": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "134": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "135": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB969EF48"
    },
    "140": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x327"
    },
    "144": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "145": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "146": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCE7C2AC2"
    },
    "151": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x347"
    },
    "155": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "156": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "REVERT",
      "path": "5"
    },
    "160": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPDEST",
      "path": "5"
    },
    "161": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "162": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x51CFF8D9"
    },
    "167": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "GT",
      "path": "5"
    },
    "168": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x51CFF8D9"
    },
    "178": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "179": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x206"
    },
    "182": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "183": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "184": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "189": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "190": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x226"
    },
    "193": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "194": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "195": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8B83209B"
    },
    "200": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "201": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23B"
    },
    "204": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "205": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "206": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "211": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "212": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x273"
    },
    "215": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "216": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "217": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9852595C"
    },
    "222": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x291"
    },
    "226": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "227": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "REVERT",
      "path": "5"
    },
    "231": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPDEST",
      "path": "5"
    },
    "232": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "233": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x19165587"
    },
    "238": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "239": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x166"
    },
    "242": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "243": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1C35F4C3"
    },
    "249": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "250": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x188"
    },
    "253": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "255": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2A5899D0"
    },
    "260": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "261": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BB"
    },
    "264": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "265": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3A98EF39"
    },
    "271": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "EQ",
      "path": "5"
    },
    "272": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F1"
    },
    "275": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "276": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "278": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "279": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "REVERT",
      "path": "5"
    },
    "280": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPDEST",
      "path": "5"
    },
    "281": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "282": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "PUSH2",
      "path": "5",
      "value": "0x161"
    },
    "285": {
      "fn": null,
      "offset": [1587, 10365],
      "op": "JUMPI",
      "path": "5"
    },
    "286": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "PUSH32",
      "path": "5",
      "statement": 0,
      "value": "0x6EF95F06320E7A25A04A175CA677B7052BDD97131872C2192525A629F51BE770"
    },
    "319": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "320": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "322": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "DUP1",
      "path": "5"
    },
    "323": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "MLOAD",
      "path": "5"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "330": {
      "op": "SHL"
    },
    "331": {
      "op": "SUB"
    },
    "332": {
      "op": "SWAP1"
    },
    "333": {
      "op": "SWAP3"
    },
    "334": {
      "op": "AND"
    },
    "335": {
      "op": "DUP3"
    },
    "336": {
      "op": "MSTORE"
    },
    "337": {
      "fn": "Splitter.<receive>",
      "offset": [3687, 3696],
      "op": "CALLVALUE",
      "path": "5"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "340": {
      "op": "DUP4"
    },
    "341": {
      "op": "ADD"
    },
    "342": {
      "op": "MSTORE"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "346": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "MLOAD",
      "path": "5"
    },
    "347": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "DUP1",
      "path": "5"
    },
    "348": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "SWAP2",
      "path": "5"
    },
    "349": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "SUB",
      "path": "5"
    },
    "350": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "SWAP1",
      "path": "5"
    },
    "351": {
      "fn": "Splitter.<receive>",
      "offset": [3657, 3697],
      "op": "LOG1",
      "path": "5"
    },
    "352": {
      "offset": [1587, 10365],
      "op": "STOP",
      "path": "5"
    },
    "353": {
      "fn": "Splitter.<receive>",
      "offset": [1587, 10365],
      "op": "JUMPDEST",
      "path": "5"
    },
    "354": {
      "fn": "Splitter.<receive>",
      "offset": [1587, 10365],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "356": {
      "fn": "Splitter.<receive>",
      "offset": [1587, 10365],
      "op": "DUP1",
      "path": "5"
    },
    "357": {
      "first_revert": true,
      "fn": "Splitter.<receive>",
      "offset": [1587, 10365],
      "op": "REVERT",
      "path": "5"
    },
    "358": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "JUMPDEST",
      "path": "5"
    },
    "359": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "CALLVALUE",
      "path": "5"
    },
    "360": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "DUP1",
      "path": "5"
    },
    "361": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "ISZERO",
      "path": "5"
    },
    "362": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "PUSH2",
      "path": "5",
      "value": "0x172"
    },
    "365": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "JUMPI",
      "path": "5"
    },
    "366": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "368": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "DUP1",
      "path": "5"
    },
    "369": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "REVERT",
      "path": "5"
    },
    "370": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "JUMPDEST",
      "path": "5"
    },
    "371": {
      "op": "POP"
    },
    "372": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "PUSH2",
      "path": "5",
      "value": "0x186"
    },
    "375": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "PUSH2",
      "path": "5",
      "value": "0x181"
    },
    "378": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "379": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "381": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C1"
    },
    "384": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [6573, 7237],
      "op": "JUMP",
      "path": "5"
    },
    "385": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "JUMPDEST",
      "path": "5"
    },
    "386": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "PUSH2",
      "path": "5",
      "value": "0x445"
    },
    "389": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [6573, 7237],
      "op": "JUMP",
      "path": "5"
    },
    "390": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "JUMPDEST",
      "path": "5"
    },
    "391": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "STOP",
      "path": "5"
    },
    "392": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "JUMPDEST",
      "path": "5"
    },
    "393": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "CALLVALUE",
      "path": "5"
    },
    "394": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "DUP1",
      "path": "5"
    },
    "395": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "ISZERO",
      "path": "5"
    },
    "396": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "PUSH2",
      "path": "5",
      "value": "0x194"
    },
    "399": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "JUMPI",
      "path": "5"
    },
    "400": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "402": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "DUP1",
      "path": "5"
    },
    "403": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "REVERT",
      "path": "5"
    },
    "404": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "JUMPDEST",
      "path": "5"
    },
    "405": {
      "op": "POP"
    },
    "406": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A8"
    },
    "409": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "412": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "413": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "415": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14DE"
    },
    "418": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [6113, 6379],
      "op": "JUMP",
      "path": "5"
    },
    "419": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "JUMPDEST",
      "path": "5"
    },
    "420": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55C"
    },
    "423": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [6113, 6379],
      "op": "JUMP",
      "path": "5"
    },
    "424": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "JUMPDEST",
      "path": "5"
    },
    "425": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "427": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "MLOAD",
      "path": "5"
    },
    "428": {
      "op": "SWAP1"
    },
    "429": {
      "op": "DUP2"
    },
    "430": {
      "op": "MSTORE"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "433": {
      "op": "ADD"
    },
    "434": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "JUMPDEST",
      "path": "5"
    },
    "435": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "437": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "MLOAD",
      "path": "5"
    },
    "438": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "DUP1",
      "path": "5"
    },
    "439": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "SWAP2",
      "path": "5"
    },
    "440": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "SUB",
      "path": "5"
    },
    "441": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "SWAP1",
      "path": "5"
    },
    "442": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "RETURN",
      "path": "5"
    },
    "443": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "JUMPDEST",
      "path": "5"
    },
    "444": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "CALLVALUE",
      "path": "5"
    },
    "445": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "DUP1",
      "path": "5"
    },
    "446": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "ISZERO",
      "path": "5"
    },
    "447": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7"
    },
    "450": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "JUMPI",
      "path": "5"
    },
    "451": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "453": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "DUP1",
      "path": "5"
    },
    "454": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "REVERT",
      "path": "5"
    },
    "455": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "JUMPDEST",
      "path": "5"
    },
    "456": {
      "op": "POP"
    },
    "457": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A8"
    },
    "460": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D6"
    },
    "463": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "464": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "466": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C1"
    },
    "469": {
      "fn": "Splitter.totalERCReleased",
      "jump": "i",
      "offset": [4659, 4779],
      "op": "JUMP",
      "path": "5"
    },
    "470": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "JUMPDEST",
      "path": "5"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "477": {
      "op": "SHL"
    },
    "478": {
      "op": "SUB"
    },
    "479": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "AND",
      "path": "5",
      "statement": 2
    },
    "480": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4720, 4727],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "482": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "SWAP1",
      "path": "5"
    },
    "483": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "DUP2",
      "path": "5"
    },
    "484": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "MSTORE",
      "path": "5"
    },
    "485": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4765],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "487": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "489": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "MSTORE",
      "path": "5"
    },
    "490": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "492": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "SWAP1",
      "path": "5"
    },
    "493": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "KECCAK256",
      "path": "5"
    },
    "494": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "SLOAD",
      "path": "5"
    },
    "495": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "SWAP1",
      "path": "5"
    },
    "496": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4659, 4779],
      "op": "JUMP",
      "path": "5"
    },
    "497": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "JUMPDEST",
      "path": "5"
    },
    "498": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "CALLVALUE",
      "path": "5"
    },
    "499": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "DUP1",
      "path": "5"
    },
    "500": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "ISZERO",
      "path": "5"
    },
    "501": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FD"
    },
    "504": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "JUMPI",
      "path": "5"
    },
    "505": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "507": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "DUP1",
      "path": "5"
    },
    "508": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "REVERT",
      "path": "5"
    },
    "509": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "JUMPDEST",
      "path": "5"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "fn": "Splitter.totalShares",
      "offset": [4307, 4319],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x1"
    },
    "513": {
      "fn": "Splitter.totalShares",
      "offset": [4307, 4319],
      "op": "SLOAD",
      "path": "5"
    },
    "514": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A8"
    },
    "517": {
      "fn": "Splitter.totalShares",
      "offset": [4237, 4326],
      "op": "JUMP",
      "path": "5"
    },
    "518": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "JUMPDEST",
      "path": "5"
    },
    "519": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "CALLVALUE",
      "path": "5"
    },
    "520": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "DUP1",
      "path": "5"
    },
    "521": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "ISZERO",
      "path": "5"
    },
    "522": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "PUSH2",
      "path": "5",
      "value": "0x212"
    },
    "525": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "JUMPI",
      "path": "5"
    },
    "526": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "528": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "DUP1",
      "path": "5"
    },
    "529": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "REVERT",
      "path": "5"
    },
    "530": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "JUMPDEST",
      "path": "5"
    },
    "531": {
      "op": "POP"
    },
    "532": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "PUSH2",
      "path": "5",
      "value": "0x186"
    },
    "535": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "PUSH2",
      "path": "5",
      "value": "0x221"
    },
    "538": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "539": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "541": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C1"
    },
    "544": {
      "fn": "Splitter.withdraw",
      "jump": "i",
      "offset": [10178, 10363],
      "op": "JUMP",
      "path": "5"
    },
    "545": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "JUMPDEST",
      "path": "5"
    },
    "546": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "PUSH2",
      "path": "5",
      "value": "0x62C"
    },
    "549": {
      "fn": "Splitter.withdraw",
      "jump": "i",
      "offset": [10178, 10363],
      "op": "JUMP",
      "path": "5"
    },
    "550": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "0"
    },
    "551": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "CALLVALUE",
      "path": "0"
    },
    "552": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "DUP1",
      "path": "0"
    },
    "553": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "ISZERO",
      "path": "0"
    },
    "554": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH2",
      "path": "0",
      "value": "0x232"
    },
    "557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPI",
      "path": "0"
    },
    "558": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "560": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "DUP1",
      "path": "0"
    },
    "561": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "REVERT",
      "path": "0"
    },
    "562": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "0"
    },
    "563": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "POP",
      "path": "0"
    },
    "564": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH2",
      "path": "0",
      "value": "0x186"
    },
    "567": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D2"
    },
    "570": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1668, 1769],
      "op": "JUMP",
      "path": "0"
    },
    "571": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "JUMPDEST",
      "path": "5"
    },
    "572": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "CALLVALUE",
      "path": "5"
    },
    "573": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "DUP1",
      "path": "5"
    },
    "574": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "ISZERO",
      "path": "5"
    },
    "575": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "PUSH2",
      "path": "5",
      "value": "0x247"
    },
    "578": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "JUMPI",
      "path": "5"
    },
    "579": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "581": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "DUP1",
      "path": "5"
    },
    "582": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "REVERT",
      "path": "5"
    },
    "583": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "JUMPDEST",
      "path": "5"
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25B"
    },
    "588": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "PUSH2",
      "path": "5",
      "value": "0x256"
    },
    "591": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "592": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "594": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1517"
    },
    "597": {
      "fn": "Splitter.payee",
      "jump": "i",
      "offset": [5554, 5652],
      "op": "JUMP",
      "path": "5"
    },
    "598": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "JUMPDEST",
      "path": "5"
    },
    "599": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "PUSH2",
      "path": "5",
      "value": "0x708"
    },
    "602": {
      "fn": "Splitter.payee",
      "jump": "i",
      "offset": [5554, 5652],
      "op": "JUMP",
      "path": "5"
    },
    "603": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "JUMPDEST",
      "path": "5"
    },
    "604": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "606": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "MLOAD",
      "path": "5"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "613": {
      "op": "SHL"
    },
    "614": {
      "op": "SUB"
    },
    "615": {
      "op": "SWAP1"
    },
    "616": {
      "op": "SWAP2"
    },
    "617": {
      "op": "AND"
    },
    "618": {
      "op": "DUP2"
    },
    "619": {
      "op": "MSTORE"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "622": {
      "op": "ADD"
    },
    "623": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B2"
    },
    "626": {
      "op": "JUMP"
    },
    "627": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMPDEST",
      "path": "0"
    },
    "628": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "CALLVALUE",
      "path": "0"
    },
    "629": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "DUP1",
      "path": "0"
    },
    "630": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "ISZERO",
      "path": "0"
    },
    "631": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "634": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMPI",
      "path": "0"
    },
    "635": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "637": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "DUP1",
      "path": "0"
    },
    "638": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "REVERT",
      "path": "0"
    },
    "639": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "op": "POP"
    },
    "641": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "643": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "0",
      "statement": 4
    },
    "644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "650": {
      "op": "SHL"
    },
    "651": {
      "op": "SUB"
    },
    "652": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "0"
    },
    "653": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "656": {
      "fn": "Ownable.owner",
      "offset": [1036, 1121],
      "op": "JUMP",
      "path": "0"
    },
    "657": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "JUMPDEST",
      "path": "5"
    },
    "658": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "CALLVALUE",
      "path": "5"
    },
    "659": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "DUP1",
      "path": "5"
    },
    "660": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "ISZERO",
      "path": "5"
    },
    "661": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29D"
    },
    "664": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "JUMPI",
      "path": "5"
    },
    "665": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "667": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "DUP1",
      "path": "5"
    },
    "668": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "REVERT",
      "path": "5"
    },
    "669": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "JUMPDEST",
      "path": "5"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A8"
    },
    "674": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AC"
    },
    "677": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "678": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "680": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C1"
    },
    "683": {
      "fn": "Splitter.released",
      "jump": "i",
      "offset": [5062, 5169],
      "op": "JUMP",
      "path": "5"
    },
    "684": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "JUMPDEST",
      "path": "5"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "691": {
      "op": "SHL"
    },
    "692": {
      "op": "SUB"
    },
    "693": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "AND",
      "path": "5",
      "statement": 5
    },
    "694": {
      "fn": "Splitter.released",
      "offset": [5118, 5125],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "696": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "SWAP1",
      "path": "5"
    },
    "697": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "DUP2",
      "path": "5"
    },
    "698": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "MSTORE",
      "path": "5"
    },
    "699": {
      "fn": "Splitter.released",
      "offset": [5144, 5153],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "701": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "703": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "MSTORE",
      "path": "5"
    },
    "704": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "706": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "SWAP1",
      "path": "5"
    },
    "707": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "KECCAK256",
      "path": "5"
    },
    "708": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "SLOAD",
      "path": "5"
    },
    "709": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "SWAP1",
      "path": "5"
    },
    "710": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "JUMP",
      "path": "5"
    },
    "711": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "JUMPDEST",
      "path": "5"
    },
    "712": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "CALLVALUE",
      "path": "5"
    },
    "713": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "DUP1",
      "path": "5"
    },
    "714": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "ISZERO",
      "path": "5"
    },
    "715": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D3"
    },
    "718": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "JUMPI",
      "path": "5"
    },
    "719": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "721": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "DUP1",
      "path": "5"
    },
    "722": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "REVERT",
      "path": "5"
    },
    "723": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "JUMPDEST",
      "path": "5"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A8"
    },
    "728": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E2"
    },
    "731": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "732": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "734": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C1"
    },
    "737": {
      "fn": "Splitter.releasable",
      "jump": "i",
      "offset": [5737, 5959],
      "op": "JUMP",
      "path": "5"
    },
    "738": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "JUMPDEST",
      "path": "5"
    },
    "739": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "PUSH2",
      "path": "5",
      "value": "0x738"
    },
    "742": {
      "fn": "Splitter.releasable",
      "jump": "i",
      "offset": [5737, 5959],
      "op": "JUMP",
      "path": "5"
    },
    "743": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "JUMPDEST",
      "path": "5"
    },
    "744": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "CALLVALUE",
      "path": "5"
    },
    "745": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "DUP1",
      "path": "5"
    },
    "746": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "ISZERO",
      "path": "5"
    },
    "747": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F3"
    },
    "750": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "JUMPI",
      "path": "5"
    },
    "751": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "753": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "DUP1",
      "path": "5"
    },
    "754": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "REVERT",
      "path": "5"
    },
    "755": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "JUMPDEST",
      "path": "5"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "PUSH2",
      "path": "5",
      "value": "0x186"
    },
    "760": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "PUSH2",
      "path": "5",
      "value": "0x302"
    },
    "763": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "764": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "766": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14DE"
    },
    "769": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [7498, 8312],
      "op": "JUMP",
      "path": "5"
    },
    "770": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "JUMPDEST",
      "path": "5"
    },
    "771": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "PUSH2",
      "path": "5",
      "value": "0x77B"
    },
    "774": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [7498, 8312],
      "op": "JUMP",
      "path": "5"
    },
    "775": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "JUMPDEST",
      "path": "5"
    },
    "776": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "CALLVALUE",
      "path": "5"
    },
    "777": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "DUP1",
      "path": "5"
    },
    "778": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "ISZERO",
      "path": "5"
    },
    "779": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "PUSH2",
      "path": "5",
      "value": "0x313"
    },
    "782": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "JUMPI",
      "path": "5"
    },
    "783": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "785": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "DUP1",
      "path": "5"
    },
    "786": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "REVERT",
      "path": "5"
    },
    "787": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "JUMPDEST",
      "path": "5"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "PUSH2",
      "path": "5",
      "value": "0x186"
    },
    "792": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "PUSH2",
      "path": "5",
      "value": "0x322"
    },
    "795": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "796": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "798": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C1"
    },
    "801": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8383, 9032],
      "op": "JUMP",
      "path": "5"
    },
    "802": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "JUMPDEST",
      "path": "5"
    },
    "803": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8C5"
    },
    "806": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8383, 9032],
      "op": "JUMP",
      "path": "5"
    },
    "807": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "JUMPDEST",
      "path": "5"
    },
    "808": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "CALLVALUE",
      "path": "5"
    },
    "809": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "DUP1",
      "path": "5"
    },
    "810": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "ISZERO",
      "path": "5"
    },
    "811": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "PUSH2",
      "path": "5",
      "value": "0x333"
    },
    "814": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "JUMPI",
      "path": "5"
    },
    "815": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "817": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "DUP1",
      "path": "5"
    },
    "818": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "REVERT",
      "path": "5"
    },
    "819": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "JUMPDEST",
      "path": "5"
    },
    "820": {
      "op": "POP"
    },
    "821": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "PUSH2",
      "path": "5",
      "value": "0x186"
    },
    "824": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "PUSH2",
      "path": "5",
      "value": "0x342"
    },
    "827": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "828": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "830": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16DA"
    },
    "833": {
      "fn": "Splitter._addCSVPayee",
      "jump": "i",
      "offset": [3710, 4159],
      "op": "JUMP",
      "path": "5"
    },
    "834": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "JUMPDEST",
      "path": "5"
    },
    "835": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB82"
    },
    "838": {
      "fn": "Splitter._addCSVPayee",
      "jump": "i",
      "offset": [3710, 4159],
      "op": "JUMP",
      "path": "5"
    },
    "839": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "JUMPDEST",
      "path": "5"
    },
    "840": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "CALLVALUE",
      "path": "5"
    },
    "841": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "DUP1",
      "path": "5"
    },
    "842": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "ISZERO",
      "path": "5"
    },
    "843": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "PUSH2",
      "path": "5",
      "value": "0x353"
    },
    "846": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "JUMPI",
      "path": "5"
    },
    "847": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "849": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "DUP1",
      "path": "5"
    },
    "850": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "REVERT",
      "path": "5"
    },
    "851": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "JUMPDEST",
      "path": "5"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A8"
    },
    "856": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "PUSH2",
      "path": "5",
      "value": "0x362"
    },
    "859": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "860": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "862": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C1"
    },
    "865": {
      "fn": "Splitter.shares",
      "jump": "i",
      "offset": [4865, 4968],
      "op": "JUMP",
      "path": "5"
    },
    "866": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "JUMPDEST",
      "path": "5"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "op": "SUB"
    },
    "875": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "AND",
      "path": "5",
      "statement": 6
    },
    "876": {
      "fn": "Splitter.shares",
      "offset": [4919, 4926],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "878": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "SWAP1",
      "path": "5"
    },
    "879": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "DUP2",
      "path": "5"
    },
    "880": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "MSTORE",
      "path": "5"
    },
    "881": {
      "fn": "Splitter.shares",
      "offset": [4945, 4952],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "883": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "885": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "MSTORE",
      "path": "5"
    },
    "886": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "888": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "SWAP1",
      "path": "5"
    },
    "889": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "KECCAK256",
      "path": "5"
    },
    "890": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "SLOAD",
      "path": "5"
    },
    "891": {
      "fn": "Splitter.shares",
      "offset": [4945, 4961],
      "op": "SWAP1",
      "path": "5"
    },
    "892": {
      "fn": "Splitter.shares",
      "offset": [4865, 4968],
      "op": "JUMP",
      "path": "5"
    },
    "893": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "JUMPDEST",
      "path": "5"
    },
    "894": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "CALLVALUE",
      "path": "5"
    },
    "895": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "DUP1",
      "path": "5"
    },
    "896": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "ISZERO",
      "path": "5"
    },
    "897": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "PUSH2",
      "path": "5",
      "value": "0x389"
    },
    "900": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "JUMPI",
      "path": "5"
    },
    "901": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "903": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "DUP1",
      "path": "5"
    },
    "904": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "REVERT",
      "path": "5"
    },
    "905": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "JUMPDEST",
      "path": "5"
    },
    "906": {
      "op": "POP"
    },
    "907": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "PUSH2",
      "path": "5",
      "value": "0x186"
    },
    "910": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "PUSH2",
      "path": "5",
      "value": "0x398"
    },
    "913": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "914": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "916": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17D2"
    },
    "919": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [9631, 10172],
      "op": "JUMP",
      "path": "5"
    },
    "920": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "JUMPDEST",
      "path": "5"
    },
    "921": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC7"
    },
    "924": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [9631, 10172],
      "op": "JUMP",
      "path": "5"
    },
    "925": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "JUMPDEST",
      "path": "5"
    },
    "926": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "CALLVALUE",
      "path": "5"
    },
    "927": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "DUP1",
      "path": "5"
    },
    "928": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "ISZERO",
      "path": "5"
    },
    "929": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A9"
    },
    "932": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "JUMPI",
      "path": "5"
    },
    "933": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "935": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "DUP1",
      "path": "5"
    },
    "936": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "REVERT",
      "path": "5"
    },
    "937": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "JUMPDEST",
      "path": "5"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "Splitter.totalReleased",
      "offset": [4487, 4501],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x2"
    },
    "941": {
      "fn": "Splitter.totalReleased",
      "offset": [4487, 4501],
      "op": "SLOAD",
      "path": "5"
    },
    "942": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A8"
    },
    "945": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "JUMP",
      "path": "5"
    },
    "946": {
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "947": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "CALLVALUE",
      "path": "5"
    },
    "948": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "949": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "ISZERO",
      "path": "5"
    },
    "950": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BE"
    },
    "953": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "JUMPI",
      "path": "5"
    },
    "954": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "956": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "957": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "REVERT",
      "path": "5"
    },
    "958": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "959": {
      "op": "POP"
    },
    "960": {
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D2"
    },
    "963": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3CD"
    },
    "966": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "967": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "969": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C1"
    },
    "972": {
      "fn": "Splitter.totalReleased",
      "jump": "i",
      "offset": [1988, 2035],
      "op": "JUMP",
      "path": "5"
    },
    "973": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "974": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEFA"
    },
    "977": {
      "fn": "Splitter.totalReleased",
      "jump": "i",
      "offset": [1988, 2035],
      "op": "JUMP",
      "path": "5"
    },
    "978": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "979": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "981": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "MLOAD",
      "path": "5"
    },
    "982": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B2"
    },
    "985": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "SWAP2",
      "path": "5"
    },
    "986": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "987": {
      "fn": "Splitter.totalReleased",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1884"
    },
    "990": {
      "fn": "Splitter.totalReleased",
      "jump": "i",
      "offset": [1988, 2035],
      "op": "JUMP",
      "path": "5"
    },
    "991": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "JUMPDEST",
      "path": "5"
    },
    "992": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "CALLVALUE",
      "path": "5"
    },
    "993": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "DUP1",
      "path": "5"
    },
    "994": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "ISZERO",
      "path": "5"
    },
    "995": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3EB"
    },
    "998": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "JUMPI",
      "path": "5"
    },
    "999": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1001": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "DUP1",
      "path": "5"
    },
    "1002": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "REVERT",
      "path": "5"
    },
    "1003": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A8"
    },
    "1008": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FA"
    },
    "1011": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1012": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1014": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14DE"
    },
    "1017": {
      "fn": "Splitter.releasedERC",
      "jump": "i",
      "offset": [5332, 5468],
      "op": "JUMP",
      "path": "5"
    },
    "1018": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "op": "SUB"
    },
    "1027": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "SWAP2",
      "path": "5",
      "statement": 8
    },
    "1028": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP3",
      "path": "5"
    },
    "1029": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "AND",
      "path": "5"
    },
    "1030": {
      "fn": "Splitter.releasedERC",
      "offset": [5405, 5412],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1032": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "SWAP1",
      "path": "5"
    },
    "1033": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP2",
      "path": "5"
    },
    "1034": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "MSTORE",
      "path": "5"
    },
    "1035": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5445],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "1037": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1039": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "SWAP1",
      "path": "5"
    },
    "1040": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP2",
      "path": "5"
    },
    "1041": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "MSTORE",
      "path": "5"
    },
    "1042": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1044": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP1",
      "path": "5"
    },
    "1045": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP4",
      "path": "5"
    },
    "1046": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "KECCAK256",
      "path": "5"
    },
    "1047": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP4",
      "path": "5"
    },
    "1048": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP1",
      "path": "5"
    },
    "1049": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP5",
      "path": "5"
    },
    "1050": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "AND",
      "path": "5"
    },
    "1051": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "DUP3",
      "path": "5"
    },
    "1052": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "MSTORE",
      "path": "5"
    },
    "1053": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP2",
      "path": "5"
    },
    "1054": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP1",
      "path": "5"
    },
    "1055": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP2",
      "path": "5"
    },
    "1056": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "MSTORE",
      "path": "5"
    },
    "1057": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "KECCAK256",
      "path": "5"
    },
    "1058": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SLOAD",
      "path": "5"
    },
    "1059": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP1",
      "path": "5"
    },
    "1060": {
      "fn": "Splitter.releasedERC",
      "offset": [5332, 5468],
      "op": "JUMP",
      "path": "5"
    },
    "1061": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1062": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1063": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "DUP1",
      "path": "0"
    },
    "1064": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "ISZERO",
      "path": "0"
    },
    "1065": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "0",
      "value": "0x431"
    },
    "1068": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPI",
      "path": "0"
    },
    "1069": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1071": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "DUP1",
      "path": "0"
    },
    "1072": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "REVERT",
      "path": "0"
    },
    "1073": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1074": {
      "op": "POP"
    },
    "1075": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "0",
      "value": "0x186"
    },
    "1078": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "0",
      "value": "0x440"
    },
    "1081": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1082": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1084": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C1"
    },
    "1087": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "0"
    },
    "1088": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1089": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF94"
    },
    "1092": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "0"
    },
    "1093": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1094": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1096": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "0"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1103": {
      "op": "SHL"
    },
    "1104": {
      "op": "SUB"
    },
    "1105": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "0"
    },
    "1106": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "1107": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "1108": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "1111": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "1112": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1114": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "1115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1121": {
      "op": "SHL"
    },
    "1122": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "1123": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "1124": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1126": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "1127": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "1130": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "1131": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1897"
    },
    "1134": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "1135": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1136": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1138": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "1139": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "DUP1",
      "path": "0"
    },
    "1140": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP2",
      "path": "0"
    },
    "1141": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SUB",
      "path": "0"
    },
    "1142": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "1143": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1144": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "op": "SUB"
    },
    "1153": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "DUP2",
      "path": "5",
      "statement": 9
    },
    "1154": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "AND",
      "path": "5"
    },
    "1155": {
      "fn": "Splitter.release",
      "offset": [6676, 6677],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1157": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "SWAP1",
      "path": "5"
    },
    "1158": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "DUP2",
      "path": "5"
    },
    "1159": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "MSTORE",
      "path": "5"
    },
    "1160": {
      "fn": "Splitter.release",
      "offset": [6657, 6664],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1162": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1164": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "MSTORE",
      "path": "5"
    },
    "1165": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1167": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "SWAP1",
      "path": "5"
    },
    "1168": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "KECCAK256",
      "path": "5"
    },
    "1169": {
      "fn": "Splitter.release",
      "offset": [6657, 6673],
      "op": "SLOAD",
      "path": "5"
    },
    "1170": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4AD"
    },
    "1173": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "JUMPI",
      "path": "5"
    },
    "1174": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1176": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "MLOAD",
      "path": "5"
    },
    "1177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "DUP2",
      "path": "5"
    },
    "1185": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "MSTORE",
      "path": "5"
    },
    "1186": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1188": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "ADD",
      "path": "5"
    },
    "1189": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "1192": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "SWAP1",
      "path": "5"
    },
    "1193": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18CC"
    },
    "1196": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [6649, 6720],
      "op": "JUMP",
      "path": "5"
    },
    "1197": {
      "fn": "Splitter.release",
      "offset": [6649, 6720],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1198": {
      "fn": "Splitter.release",
      "offset": [6731, 6746],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1200": {
      "fn": "Splitter.release",
      "offset": [6749, 6768],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B8"
    },
    "1203": {
      "fn": "Splitter.release",
      "offset": [6760, 6767],
      "op": "DUP3",
      "path": "5"
    },
    "1204": {
      "fn": "Splitter.release",
      "offset": [6749, 6759],
      "op": "PUSH2",
      "path": "5",
      "value": "0x738"
    },
    "1207": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [6749, 6768],
      "op": "JUMP",
      "path": "5"
    },
    "1208": {
      "fn": "Splitter.release",
      "offset": [6749, 6768],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1209": {
      "fn": "Splitter.release",
      "offset": [6731, 6768],
      "op": "SWAP1",
      "path": "5"
    },
    "1210": {
      "op": "POP"
    },
    "1211": {
      "branch": 61,
      "fn": "Splitter.release",
      "offset": [6787, 6799],
      "op": "DUP1",
      "path": "5",
      "statement": 10
    },
    "1212": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D7"
    },
    "1215": {
      "branch": 61,
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "JUMPI",
      "path": "5"
    },
    "1216": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1218": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "MLOAD",
      "path": "5"
    },
    "1219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1225": {
      "op": "SHL"
    },
    "1226": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "DUP2",
      "path": "5"
    },
    "1227": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "MSTORE",
      "path": "5"
    },
    "1228": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1230": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "ADD",
      "path": "5"
    },
    "1231": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "1234": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "SWAP1",
      "path": "5"
    },
    "1235": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1912"
    },
    "1238": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [6779, 6847],
      "op": "JUMP",
      "path": "5"
    },
    "1239": {
      "fn": "Splitter.release",
      "offset": [6779, 6847],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1240": {
      "fn": "Splitter.release",
      "offset": [7056, 7063],
      "op": "DUP1",
      "path": "5",
      "statement": 11
    },
    "1241": {
      "fn": "Splitter.release",
      "offset": [7038, 7052],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1243": {
      "fn": "Splitter.release",
      "offset": [7038, 7052],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1245": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "DUP3",
      "path": "5"
    },
    "1246": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "DUP3",
      "path": "5"
    },
    "1247": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "SLOAD",
      "path": "5"
    },
    "1248": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E9"
    },
    "1251": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "SWAP2",
      "path": "5"
    },
    "1252": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "SWAP1",
      "path": "5"
    },
    "1253": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1973"
    },
    "1256": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [7038, 7063],
      "op": "JUMP",
      "path": "5"
    },
    "1257": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1258": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "SWAP1",
      "path": "5"
    },
    "1259": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "SWAP2",
      "path": "5"
    },
    "1260": {
      "fn": "Splitter.release",
      "offset": [7038, 7063],
      "op": "SSTORE",
      "path": "5"
    },
    "1261": {
      "op": "POP"
    },
    "1262": {
      "op": "POP"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1269": {
      "op": "SHL"
    },
    "1270": {
      "op": "SUB"
    },
    "1271": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "DUP3",
      "path": "5",
      "statement": 12
    },
    "1272": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "AND",
      "path": "5"
    },
    "1273": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1275": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "SWAP1",
      "path": "5"
    },
    "1276": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "DUP2",
      "path": "5"
    },
    "1277": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "MSTORE",
      "path": "5"
    },
    "1278": {
      "fn": "Splitter.release",
      "offset": [7097, 7106],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1280": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1282": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "MSTORE",
      "path": "5"
    },
    "1283": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1285": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "SWAP1",
      "path": "5"
    },
    "1286": {
      "fn": "Splitter.release",
      "offset": [7097, 7115],
      "op": "KECCAK256",
      "path": "5"
    },
    "1287": {
      "fn": "Splitter.release",
      "offset": [7097, 7126],
      "op": "DUP1",
      "path": "5"
    },
    "1288": {
      "fn": "Splitter.release",
      "offset": [7097, 7126],
      "op": "SLOAD",
      "path": "5"
    },
    "1289": {
      "fn": "Splitter.release",
      "offset": [7097, 7126],
      "op": "DUP3",
      "path": "5"
    },
    "1290": {
      "fn": "Splitter.release",
      "offset": [7097, 7126],
      "op": "ADD",
      "path": "5"
    },
    "1291": {
      "fn": "Splitter.release",
      "offset": [7097, 7126],
      "op": "SWAP1",
      "path": "5"
    },
    "1292": {
      "fn": "Splitter.release",
      "offset": [7097, 7126],
      "op": "SSTORE",
      "path": "5"
    },
    "1293": {
      "fn": "Splitter.release",
      "offset": [7147, 7182],
      "op": "PUSH2",
      "path": "5",
      "statement": 13,
      "value": "0x516"
    },
    "1296": {
      "fn": "Splitter.release",
      "offset": [7107, 7114],
      "op": "DUP3",
      "path": "5"
    },
    "1297": {
      "fn": "Splitter.release",
      "offset": [7119, 7126],
      "op": "DUP3",
      "path": "5"
    },
    "1298": {
      "fn": "Splitter.release",
      "offset": [7147, 7164],
      "op": "PUSH2",
      "path": "5",
      "value": "0x102F"
    },
    "1301": {
      "fn": "Splitter.release",
      "jump": "i",
      "offset": [7147, 7182],
      "op": "JUMP",
      "path": "5"
    },
    "1302": {
      "fn": "Splitter.release",
      "offset": [7147, 7182],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1303": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "PUSH1",
      "path": "5",
      "statement": 14,
      "value": "0x40"
    },
    "1305": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "DUP1",
      "path": "5"
    },
    "1306": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "MLOAD",
      "path": "5"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "SUB"
    },
    "1315": {
      "op": "DUP5"
    },
    "1316": {
      "op": "AND"
    },
    "1317": {
      "op": "DUP2"
    },
    "1318": {
      "op": "MSTORE"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1321": {
      "op": "DUP2"
    },
    "1322": {
      "op": "ADD"
    },
    "1323": {
      "op": "DUP4"
    },
    "1324": {
      "op": "SWAP1"
    },
    "1325": {
      "op": "MSTORE"
    },
    "1326": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDF20FD1E76BC69D672E4814FAFB2C449BBA3A5369D8359ADF9E05E6FDE87B056"
    },
    "1359": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "SWAP2",
      "path": "5"
    },
    "1360": {
      "op": "ADD"
    },
    "1361": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1363": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "MLOAD",
      "path": "5"
    },
    "1364": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "DUP1",
      "path": "5"
    },
    "1365": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "SWAP2",
      "path": "5"
    },
    "1366": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "SUB",
      "path": "5"
    },
    "1367": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "SWAP1",
      "path": "5"
    },
    "1368": {
      "fn": "Splitter.release",
      "offset": [7197, 7230],
      "op": "LOG1",
      "path": "5"
    },
    "1369": {
      "fn": "Splitter.release",
      "offset": [6639, 7237],
      "op": "POP",
      "path": "5"
    },
    "1370": {
      "fn": "Splitter.release",
      "offset": [6573, 7237],
      "op": "POP",
      "path": "5"
    },
    "1371": {
      "fn": "Splitter.release",
      "jump": "o",
      "offset": [6573, 7237],
      "op": "JUMP",
      "path": "5"
    },
    "1372": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1379": {
      "op": "SHL"
    },
    "1380": {
      "op": "SUB"
    },
    "1381": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "DUP3",
      "path": "5"
    },
    "1382": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "AND",
      "path": "5"
    },
    "1383": {
      "fn": "Splitter.releasableERC",
      "offset": [6188, 6195],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1385": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "SWAP1",
      "path": "5"
    },
    "1386": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "DUP2",
      "path": "5"
    },
    "1387": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "MSTORE",
      "path": "5"
    },
    "1388": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4765],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "1390": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1392": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "MSTORE",
      "path": "5"
    },
    "1393": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1395": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "DUP2",
      "path": "5"
    },
    "1396": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "KECCAK256",
      "path": "5"
    },
    "1397": {
      "fn": "Splitter.totalERCReleased",
      "offset": [4746, 4772],
      "op": "SLOAD",
      "path": "5"
    },
    "1398": {
      "fn": "Splitter.releasableERC",
      "offset": [6188, 6195],
      "op": "DUP2",
      "path": "5"
    },
    "1399": {
      "fn": "Splitter.releasableERC",
      "offset": [6188, 6195],
      "op": "SWAP1",
      "path": "5"
    },
    "1400": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1402": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "MLOAD",
      "path": "5"
    },
    "1403": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP2",
      "path": "5"
    },
    "1412": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "MSTORE",
      "path": "5"
    },
    "1413": {
      "fn": "Splitter.releasableERC",
      "offset": [6255, 6259],
      "op": "ADDRESS",
      "path": "5"
    },
    "1414": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1416": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP3",
      "path": "5"
    },
    "1417": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "ADD",
      "path": "5"
    },
    "1418": {
      "op": "MSTORE"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1425": {
      "op": "SHL"
    },
    "1426": {
      "op": "SUB"
    },
    "1427": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6246],
      "op": "DUP7",
      "path": "5"
    },
    "1428": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6246],
      "op": "AND",
      "path": "5"
    },
    "1429": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6246],
      "op": "SWAP1",
      "path": "5"
    },
    "1430": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6246],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "1435": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6246],
      "op": "SWAP1",
      "path": "5"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1438": {
      "op": "ADD"
    },
    "1439": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1441": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1443": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "MLOAD",
      "path": "5"
    },
    "1444": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP1",
      "path": "5"
    },
    "1445": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP4",
      "path": "5"
    },
    "1446": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "SUB",
      "path": "5"
    },
    "1447": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP2",
      "path": "5"
    },
    "1448": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP7",
      "path": "5"
    },
    "1449": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "GAS",
      "path": "5"
    },
    "1450": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "STATICCALL",
      "path": "5"
    },
    "1451": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "ISZERO",
      "path": "5"
    },
    "1452": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP1",
      "path": "5"
    },
    "1453": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "ISZERO",
      "path": "5"
    },
    "1454": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5BB"
    },
    "1457": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "JUMPI",
      "path": "5"
    },
    "1458": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1459": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1461": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP1",
      "path": "5"
    },
    "1462": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1463": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1464": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1466": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "REVERT",
      "path": "5"
    },
    "1467": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1468": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "POP",
      "path": "5"
    },
    "1469": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "POP",
      "path": "5"
    },
    "1470": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "POP",
      "path": "5"
    },
    "1471": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "POP",
      "path": "5"
    },
    "1472": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1474": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "MLOAD",
      "path": "5"
    },
    "1475": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1476": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1478": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "NOT",
      "path": "5"
    },
    "1479": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1481": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP3",
      "path": "5"
    },
    "1482": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "ADD",
      "path": "5"
    },
    "1483": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "AND",
      "path": "5"
    },
    "1484": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP3",
      "path": "5"
    },
    "1485": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "ADD",
      "path": "5"
    },
    "1486": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP1",
      "path": "5"
    },
    "1487": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1489": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "MSTORE",
      "path": "5"
    },
    "1490": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "POP",
      "path": "5"
    },
    "1491": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "DUP2",
      "path": "5"
    },
    "1492": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "ADD",
      "path": "5"
    },
    "1493": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "SWAP1",
      "path": "5"
    },
    "1494": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5DF"
    },
    "1497": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "SWAP2",
      "path": "5"
    },
    "1498": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "SWAP1",
      "path": "5"
    },
    "1499": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "PUSH2",
      "path": "5",
      "value": "0x198B"
    },
    "1502": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [6231, 6261],
      "op": "JUMP",
      "path": "5"
    },
    "1503": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6261],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1504": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6287],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E9"
    },
    "1507": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6287],
      "op": "SWAP2",
      "path": "5"
    },
    "1508": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6287],
      "op": "SWAP1",
      "path": "5"
    },
    "1509": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6287],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1973"
    },
    "1512": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [6231, 6287],
      "op": "JUMP",
      "path": "5"
    },
    "1513": {
      "fn": "Splitter.releasableERC",
      "offset": [6231, 6287],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1520": {
      "op": "SHL"
    },
    "1521": {
      "op": "SUB"
    },
    "1522": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP1",
      "path": "5"
    },
    "1523": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP7",
      "path": "5"
    },
    "1524": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "AND",
      "path": "5"
    },
    "1525": {
      "fn": "Splitter.releasedERC",
      "offset": [5405, 5412],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1527": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "SWAP1",
      "path": "5"
    },
    "1528": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP2",
      "path": "5"
    },
    "1529": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "MSTORE",
      "path": "5"
    },
    "1530": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5445],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "1532": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1534": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "SWAP1",
      "path": "5"
    },
    "1535": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP2",
      "path": "5"
    },
    "1536": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "MSTORE",
      "path": "5"
    },
    "1537": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1539": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP1",
      "path": "5"
    },
    "1540": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "DUP4",
      "path": "5"
    },
    "1541": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5452],
      "op": "KECCAK256",
      "path": "5"
    },
    "1542": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP4",
      "path": "5"
    },
    "1543": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "DUP9",
      "path": "5"
    },
    "1544": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "AND",
      "path": "5"
    },
    "1545": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "DUP4",
      "path": "5"
    },
    "1546": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "MSTORE",
      "path": "5"
    },
    "1547": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP3",
      "path": "5"
    },
    "1548": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SWAP1",
      "path": "5"
    },
    "1549": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "MSTORE",
      "path": "5"
    },
    "1550": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "KECCAK256",
      "path": "5"
    },
    "1551": {
      "fn": "Splitter.releasedERC",
      "offset": [5431, 5461],
      "op": "SLOAD",
      "path": "5"
    },
    "1552": {
      "fn": "Splitter.releasableERC",
      "offset": [6207, 6287],
      "op": "SWAP1",
      "path": "5"
    },
    "1553": {
      "fn": "Splitter.releasableERC",
      "offset": [6207, 6287],
      "op": "SWAP2",
      "path": "5"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "fn": "Splitter.releasableERC",
      "offset": [6304, 6372],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0x624"
    },
    "1558": {
      "fn": "Splitter.releasableERC",
      "offset": [6304, 6372],
      "op": "SWAP1",
      "path": "5"
    },
    "1559": {
      "fn": "Splitter.releasableERC",
      "offset": [6320, 6327],
      "op": "DUP5",
      "path": "5"
    },
    "1560": {
      "fn": "Splitter.releasableERC",
      "offset": [6320, 6327],
      "op": "SWAP1",
      "path": "5"
    },
    "1561": {
      "fn": "Splitter.releasableERC",
      "offset": [6207, 6287],
      "op": "DUP4",
      "path": "5"
    },
    "1562": {
      "fn": "Splitter.releasableERC",
      "offset": [6207, 6287],
      "op": "SWAP1",
      "path": "5"
    },
    "1563": {
      "fn": "Splitter.releasableERC",
      "offset": [6304, 6319],
      "op": "PUSH2",
      "path": "5",
      "value": "0x114D"
    },
    "1566": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [6304, 6372],
      "op": "JUMP",
      "path": "5"
    },
    "1567": {
      "fn": "Splitter.releasableERC",
      "offset": [6344, 6371],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1568": {
      "fn": "Splitter.releasableERC",
      "offset": [6304, 6319],
      "op": "PUSH2",
      "path": "5",
      "value": "0x114D"
    },
    "1571": {
      "fn": "Splitter.releasableERC",
      "jump": "i",
      "offset": [6304, 6372],
      "op": "JUMP",
      "path": "5"
    },
    "1572": {
      "fn": "Splitter.releasableERC",
      "offset": [6304, 6372],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1573": {
      "fn": "Splitter.releasableERC",
      "offset": [6297, 6372],
      "op": "SWAP5",
      "path": "5"
    },
    "1574": {
      "fn": "Splitter.releasableERC",
      "offset": [6113, 6379],
      "op": "SWAP4",
      "path": "5"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "op": "POP"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "fn": "Splitter.releasableERC",
      "jump": "o",
      "offset": [6113, 6379],
      "op": "JUMP",
      "path": "5"
    },
    "1580": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1581": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1583": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "0"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1590": {
      "op": "SHL"
    },
    "1591": {
      "op": "SUB"
    },
    "1592": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "0"
    },
    "1593": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "1594": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "1595": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x656"
    },
    "1598": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "1599": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1601": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "1602": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1608": {
      "op": "SHL"
    },
    "1609": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "1610": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "1611": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1613": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "1614": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "1617": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "1618": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1897"
    },
    "1621": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "1622": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1623": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1625": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "MLOAD",
      "path": "5"
    },
    "1626": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1633": {
      "op": "SHL"
    },
    "1634": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP2",
      "path": "5"
    },
    "1635": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "MSTORE",
      "path": "5"
    },
    "1636": {
      "fn": "Splitter.withdraw",
      "offset": [10284, 10288],
      "op": "ADDRESS",
      "path": "5"
    },
    "1637": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1639": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP3",
      "path": "5"
    },
    "1640": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "ADD",
      "path": "5"
    },
    "1641": {
      "op": "MSTORE"
    },
    "1642": {
      "fn": "Splitter.withdraw",
      "offset": [10237, 10257],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1644": {
      "fn": "Splitter.withdraw",
      "offset": [10237, 10257],
      "op": "SWAP1",
      "path": "5"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1651": {
      "op": "SHL"
    },
    "1652": {
      "op": "SUB"
    },
    "1653": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10275],
      "op": "DUP4",
      "path": "5"
    },
    "1654": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10275],
      "op": "AND",
      "path": "5"
    },
    "1655": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10275],
      "op": "SWAP1",
      "path": "5"
    },
    "1656": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10275],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "1661": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10275],
      "op": "SWAP1",
      "path": "5"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1664": {
      "op": "ADD"
    },
    "1665": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1667": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1669": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "MLOAD",
      "path": "5"
    },
    "1670": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP1",
      "path": "5"
    },
    "1671": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP4",
      "path": "5"
    },
    "1672": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "SUB",
      "path": "5"
    },
    "1673": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP2",
      "path": "5"
    },
    "1674": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP7",
      "path": "5"
    },
    "1675": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "GAS",
      "path": "5"
    },
    "1676": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "STATICCALL",
      "path": "5"
    },
    "1677": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "ISZERO",
      "path": "5"
    },
    "1678": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP1",
      "path": "5"
    },
    "1679": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "ISZERO",
      "path": "5"
    },
    "1680": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH2",
      "path": "5",
      "value": "0x69D"
    },
    "1683": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "JUMPI",
      "path": "5"
    },
    "1684": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1685": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1687": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP1",
      "path": "5"
    },
    "1688": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1689": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1690": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1692": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "REVERT",
      "path": "5"
    },
    "1693": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1694": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "POP",
      "path": "5"
    },
    "1695": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "POP",
      "path": "5"
    },
    "1696": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "POP",
      "path": "5"
    },
    "1697": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "POP",
      "path": "5"
    },
    "1698": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1700": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "MLOAD",
      "path": "5"
    },
    "1701": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1702": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1704": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "NOT",
      "path": "5"
    },
    "1705": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1707": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP3",
      "path": "5"
    },
    "1708": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "ADD",
      "path": "5"
    },
    "1709": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "AND",
      "path": "5"
    },
    "1710": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP3",
      "path": "5"
    },
    "1711": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "ADD",
      "path": "5"
    },
    "1712": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP1",
      "path": "5"
    },
    "1713": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1715": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "MSTORE",
      "path": "5"
    },
    "1716": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "POP",
      "path": "5"
    },
    "1717": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "DUP2",
      "path": "5"
    },
    "1718": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "ADD",
      "path": "5"
    },
    "1719": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "SWAP1",
      "path": "5"
    },
    "1720": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6C1"
    },
    "1723": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "SWAP2",
      "path": "5"
    },
    "1724": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "SWAP1",
      "path": "5"
    },
    "1725": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "PUSH2",
      "path": "5",
      "value": "0x198B"
    },
    "1728": {
      "fn": "Splitter.withdraw",
      "jump": "i",
      "offset": [10260, 10290],
      "op": "JUMP",
      "path": "5"
    },
    "1729": {
      "fn": "Splitter.withdraw",
      "offset": [10260, 10290],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1730": {
      "fn": "Splitter.withdraw",
      "offset": [10237, 10290],
      "op": "SWAP1",
      "path": "5"
    },
    "1731": {
      "fn": "Splitter.withdraw",
      "offset": [10237, 10290],
      "op": "POP",
      "path": "5"
    },
    "1732": {
      "fn": "Splitter.withdraw",
      "offset": [10301, 10356],
      "op": "PUSH2",
      "path": "5",
      "statement": 16,
      "value": "0x6CE"
    },
    "1735": {
      "fn": "Splitter.withdraw",
      "offset": [10324, 10329],
      "op": "DUP3",
      "path": "5"
    },
    "1736": {
      "fn": "Splitter.withdraw",
      "offset": [10331, 10341],
      "op": "CALLER",
      "path": "5"
    },
    "1737": {
      "fn": "Splitter.withdraw",
      "offset": [10343, 10355],
      "op": "DUP4",
      "path": "5"
    },
    "1738": {
      "fn": "Splitter.withdraw",
      "offset": [10301, 10323],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118B"
    },
    "1741": {
      "fn": "Splitter.withdraw",
      "jump": "i",
      "offset": [10301, 10356],
      "op": "JUMP",
      "path": "5"
    },
    "1742": {
      "fn": "Splitter.withdraw",
      "offset": [10301, 10356],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1743": {
      "fn": "Splitter.withdraw",
      "offset": [10227, 10363],
      "op": "POP",
      "path": "5"
    },
    "1744": {
      "fn": "Splitter.withdraw",
      "offset": [10178, 10363],
      "op": "POP",
      "path": "5"
    },
    "1745": {
      "fn": "Splitter.withdraw",
      "jump": "o",
      "offset": [10178, 10363],
      "op": "JUMP",
      "path": "5"
    },
    "1746": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1668, 1769],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1747": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1749": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "0"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1756": {
      "op": "SHL"
    },
    "1757": {
      "op": "SUB"
    },
    "1758": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "0"
    },
    "1759": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "1760": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "1761": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FC"
    },
    "1764": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "1765": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1767": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "1768": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1774": {
      "op": "SHL"
    },
    "1775": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "1776": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "1777": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1779": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "1780": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "1783": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "1784": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1897"
    },
    "1787": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "1788": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1762],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x706"
    },
    "1792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1759, 1760],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1750],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DD"
    },
    "1797": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1732, 1762],
      "op": "JUMP",
      "path": "0"
    },
    "1798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1732, 1762],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1799": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [1668, 1769],
      "op": "JUMP",
      "path": "0"
    },
    "1800": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1801": {
      "fn": "Splitter.payee",
      "offset": [5605, 5612],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1803": {
      "fn": "Splitter.payee",
      "offset": [5631, 5638],
      "op": "PUSH1",
      "path": "5",
      "statement": 18,
      "value": "0x6"
    },
    "1805": {
      "fn": "Splitter.payee",
      "offset": [5639, 5644],
      "op": "DUP3",
      "path": "5"
    },
    "1806": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "DUP2",
      "path": "5"
    },
    "1807": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "SLOAD",
      "path": "5"
    },
    "1808": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "DUP2",
      "path": "5"
    },
    "1809": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "LT",
      "path": "5"
    },
    "1810": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71D"
    },
    "1813": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "JUMPI",
      "path": "5"
    },
    "1814": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71D"
    },
    "1817": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "1820": {
      "fn": "Splitter.payee",
      "jump": "i",
      "offset": [5631, 5645],
      "op": "JUMP",
      "path": "5"
    },
    "1821": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1822": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1824": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "SWAP2",
      "path": "5"
    },
    "1825": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "DUP3",
      "path": "5"
    },
    "1826": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "MSTORE",
      "path": "5"
    },
    "1827": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1829": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "SWAP1",
      "path": "5"
    },
    "1830": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "SWAP2",
      "path": "5"
    },
    "1831": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "KECCAK256",
      "path": "5"
    },
    "1832": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "ADD",
      "path": "5"
    },
    "1833": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "SLOAD",
      "path": "5"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1840": {
      "op": "SHL"
    },
    "1841": {
      "op": "SUB"
    },
    "1842": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "AND",
      "path": "5"
    },
    "1843": {
      "fn": "Splitter.payee",
      "offset": [5631, 5645],
      "op": "SWAP3",
      "path": "5"
    },
    "1844": {
      "fn": "Splitter.payee",
      "offset": [5554, 5652],
      "op": "SWAP2",
      "path": "5"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "op": "POP"
    },
    "1847": {
      "fn": "Splitter.payee",
      "jump": "o",
      "offset": [5554, 5652],
      "op": "JUMP",
      "path": "5"
    },
    "1848": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1849": {
      "fn": "Splitter.releasable",
      "offset": [5795, 5802],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1851": {
      "fn": "Splitter.releasable",
      "offset": [5814, 5835],
      "op": "DUP1",
      "path": "5"
    },
    "1852": {
      "fn": "Splitter.releasable",
      "offset": [5862, 5877],
      "op": "PUSH2",
      "path": "5",
      "value": "0x744"
    },
    "1855": {
      "fn": "Splitter.totalReleased",
      "offset": [4487, 4501],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1857": {
      "fn": "Splitter.totalReleased",
      "offset": [4487, 4501],
      "op": "SLOAD",
      "path": "5"
    },
    "1858": {
      "fn": "Splitter.totalReleased",
      "offset": [4487, 4501],
      "op": "SWAP1",
      "path": "5"
    },
    "1859": {
      "fn": "Splitter.totalReleased",
      "offset": [4415, 4508],
      "op": "JUMP",
      "path": "5"
    },
    "1860": {
      "fn": "Splitter.releasable",
      "offset": [5862, 5877],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1861": {
      "fn": "Splitter.releasable",
      "offset": [5838, 5877],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74E"
    },
    "1864": {
      "fn": "Splitter.releasable",
      "offset": [5838, 5877],
      "op": "SWAP1",
      "path": "5"
    },
    "1865": {
      "fn": "Splitter.releasable",
      "offset": [5838, 5859],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "1866": {
      "fn": "Splitter.releasable",
      "offset": [5838, 5877],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1973"
    },
    "1869": {
      "fn": "Splitter.releasable",
      "jump": "i",
      "offset": [5838, 5877],
      "op": "JUMP",
      "path": "5"
    },
    "1870": {
      "fn": "Splitter.releasable",
      "offset": [5838, 5877],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1871": {
      "fn": "Splitter.releasable",
      "offset": [5814, 5877],
      "op": "SWAP1",
      "path": "5"
    },
    "1872": {
      "fn": "Splitter.releasable",
      "offset": [5814, 5877],
      "op": "POP",
      "path": "5"
    },
    "1873": {
      "fn": "Splitter.releasable",
      "offset": [5894, 5952],
      "op": "PUSH2",
      "path": "5",
      "statement": 19,
      "value": "0x774"
    },
    "1876": {
      "fn": "Splitter.releasable",
      "offset": [5910, 5917],
      "op": "DUP4",
      "path": "5"
    },
    "1877": {
      "fn": "Splitter.releasable",
      "offset": [5919, 5932],
      "op": "DUP3",
      "path": "5"
    },
    "1878": {
      "fn": "Splitter.releasable",
      "offset": [5934, 5951],
      "op": "PUSH2",
      "path": "5",
      "value": "0x61F"
    },
    "1881": {
      "fn": "Splitter.releasable",
      "offset": [5943, 5950],
      "op": "DUP7",
      "path": "5"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1888": {
      "op": "SHL"
    },
    "1889": {
      "op": "SUB"
    },
    "1890": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "AND",
      "path": "5"
    },
    "1891": {
      "fn": "Splitter.released",
      "offset": [5118, 5125],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1893": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "SWAP1",
      "path": "5"
    },
    "1894": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "DUP2",
      "path": "5"
    },
    "1895": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "MSTORE",
      "path": "5"
    },
    "1896": {
      "fn": "Splitter.released",
      "offset": [5144, 5153],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1898": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1900": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "MSTORE",
      "path": "5"
    },
    "1901": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1903": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "SWAP1",
      "path": "5"
    },
    "1904": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "KECCAK256",
      "path": "5"
    },
    "1905": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "SLOAD",
      "path": "5"
    },
    "1906": {
      "fn": "Splitter.released",
      "offset": [5144, 5162],
      "op": "SWAP1",
      "path": "5"
    },
    "1907": {
      "fn": "Splitter.released",
      "offset": [5062, 5169],
      "op": "JUMP",
      "path": "5"
    },
    "1908": {
      "fn": "Splitter.releasable",
      "offset": [5894, 5952],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1909": {
      "fn": "Splitter.releasable",
      "offset": [5887, 5952],
      "op": "SWAP4",
      "path": "5"
    },
    "1910": {
      "fn": "Splitter.releasable",
      "offset": [5737, 5959],
      "op": "SWAP3",
      "path": "5"
    },
    "1911": {
      "op": "POP"
    },
    "1912": {
      "op": "POP"
    },
    "1913": {
      "op": "POP"
    },
    "1914": {
      "fn": "Splitter.releasable",
      "jump": "o",
      "offset": [5737, 5959],
      "op": "JUMP",
      "path": "5"
    },
    "1915": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1916": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1918": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "0"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1925": {
      "op": "SHL"
    },
    "1926": {
      "op": "SUB"
    },
    "1927": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "0"
    },
    "1928": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "1929": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "1930": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A5"
    },
    "1933": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "1934": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1936": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "1937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "1945": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "1946": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1948": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "1949": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "1952": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "1953": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1897"
    },
    "1956": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "1957": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "op": "SUB"
    },
    "1966": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "DUP2",
      "path": "5",
      "statement": 20
    },
    "1967": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "AND",
      "path": "5"
    },
    "1968": {
      "fn": "Splitter.releaseERC",
      "offset": [7610, 7611],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1970": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "SWAP1",
      "path": "5"
    },
    "1971": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "DUP2",
      "path": "5"
    },
    "1972": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "MSTORE",
      "path": "5"
    },
    "1973": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7598],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1975": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1977": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "MSTORE",
      "path": "5"
    },
    "1978": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1980": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "SWAP1",
      "path": "5"
    },
    "1981": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "KECCAK256",
      "path": "5"
    },
    "1982": {
      "fn": "Splitter.releaseERC",
      "offset": [7591, 7607],
      "op": "SLOAD",
      "path": "5"
    },
    "1983": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7DA"
    },
    "1986": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "JUMPI",
      "path": "5"
    },
    "1987": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1989": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "MLOAD",
      "path": "5"
    },
    "1990": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "DUP2",
      "path": "5"
    },
    "1998": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "MSTORE",
      "path": "5"
    },
    "1999": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2001": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "ADD",
      "path": "5"
    },
    "2002": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "2005": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "SWAP1",
      "path": "5"
    },
    "2006": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18CC"
    },
    "2009": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [7583, 7654],
      "op": "JUMP",
      "path": "5"
    },
    "2010": {
      "fn": "Splitter.releaseERC",
      "offset": [7583, 7654],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2011": {
      "fn": "Splitter.releaseERC",
      "offset": [7665, 7680],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2013": {
      "fn": "Splitter.releaseERC",
      "offset": [7683, 7712],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7E6"
    },
    "2016": {
      "fn": "Splitter.releaseERC",
      "offset": [7697, 7702],
      "op": "DUP4",
      "path": "5"
    },
    "2017": {
      "fn": "Splitter.releaseERC",
      "offset": [7704, 7711],
      "op": "DUP4",
      "path": "5"
    },
    "2018": {
      "fn": "Splitter.releaseERC",
      "offset": [7683, 7696],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55C"
    },
    "2021": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [7683, 7712],
      "op": "JUMP",
      "path": "5"
    },
    "2022": {
      "fn": "Splitter.releaseERC",
      "offset": [7683, 7712],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2023": {
      "fn": "Splitter.releaseERC",
      "offset": [7665, 7712],
      "op": "SWAP1",
      "path": "5"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "branch": 62,
      "fn": "Splitter.releaseERC",
      "offset": [7731, 7743],
      "op": "DUP1",
      "path": "5",
      "statement": 21
    },
    "2026": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "PUSH2",
      "path": "5",
      "value": "0x805"
    },
    "2029": {
      "branch": 62,
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "JUMPI",
      "path": "5"
    },
    "2030": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2032": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "MLOAD",
      "path": "5"
    },
    "2033": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "DUP2",
      "path": "5"
    },
    "2041": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "MSTORE",
      "path": "5"
    },
    "2042": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2044": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "ADD",
      "path": "5"
    },
    "2045": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "2048": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "SWAP1",
      "path": "5"
    },
    "2049": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1912"
    },
    "2052": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [7723, 7791],
      "op": "JUMP",
      "path": "5"
    },
    "2053": {
      "fn": "Splitter.releaseERC",
      "offset": [7723, 7791],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "DUP4",
      "path": "5",
      "statement": 22
    },
    "2063": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "AND",
      "path": "5"
    },
    "2064": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2066": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "SWAP1",
      "path": "5"
    },
    "2067": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "DUP2",
      "path": "5"
    },
    "2068": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "MSTORE",
      "path": "5"
    },
    "2069": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8060],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "2071": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2073": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "MSTORE",
      "path": "5"
    },
    "2074": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2076": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "DUP2",
      "path": "5"
    },
    "2077": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "KECCAK256",
      "path": "5"
    },
    "2078": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8078],
      "op": "DUP1",
      "path": "5"
    },
    "2079": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8078],
      "op": "SLOAD",
      "path": "5"
    },
    "2080": {
      "fn": "Splitter.releaseERC",
      "offset": [8071, 8078],
      "op": "DUP4",
      "path": "5"
    },
    "2081": {
      "fn": "Splitter.releaseERC",
      "offset": [8071, 8078],
      "op": "SWAP3",
      "path": "5"
    },
    "2082": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8067],
      "op": "SWAP1",
      "path": "5"
    },
    "2083": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8078],
      "op": "PUSH2",
      "path": "5",
      "value": "0x82D"
    },
    "2086": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8078],
      "op": "SWAP1",
      "path": "5"
    },
    "2087": {
      "fn": "Splitter.releaseERC",
      "offset": [8071, 8078],
      "op": "DUP5",
      "path": "5"
    },
    "2088": {
      "fn": "Splitter.releaseERC",
      "offset": [8071, 8078],
      "op": "SWAP1",
      "path": "5"
    },
    "2089": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8078],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1973"
    },
    "2092": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [8041, 8078],
      "op": "JUMP",
      "path": "5"
    },
    "2093": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8078],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2094": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8078],
      "op": "SWAP1",
      "path": "5"
    },
    "2095": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8078],
      "op": "SWAP2",
      "path": "5"
    },
    "2096": {
      "fn": "Splitter.releaseERC",
      "offset": [8041, 8078],
      "op": "SSTORE",
      "path": "5"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2105": {
      "op": "SHL"
    },
    "2106": {
      "op": "SUB"
    },
    "2107": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "DUP1",
      "path": "5",
      "statement": 23
    },
    "2108": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "DUP5",
      "path": "5"
    },
    "2109": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "AND",
      "path": "5"
    },
    "2110": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2112": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "SWAP1",
      "path": "5"
    },
    "2113": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "DUP2",
      "path": "5"
    },
    "2114": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "MSTORE",
      "path": "5"
    },
    "2115": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8126],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2117": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2119": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "SWAP1",
      "path": "5"
    },
    "2120": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "DUP2",
      "path": "5"
    },
    "2121": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "MSTORE",
      "path": "5"
    },
    "2122": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2124": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "DUP1",
      "path": "5"
    },
    "2125": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "DUP4",
      "path": "5"
    },
    "2126": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8133],
      "op": "KECCAK256",
      "path": "5"
    },
    "2127": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8142],
      "op": "SWAP4",
      "path": "5"
    },
    "2128": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8142],
      "op": "DUP7",
      "path": "5"
    },
    "2129": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8142],
      "op": "AND",
      "path": "5"
    },
    "2130": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8142],
      "op": "DUP4",
      "path": "5"
    },
    "2131": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8142],
      "op": "MSTORE",
      "path": "5"
    },
    "2132": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8142],
      "op": "SWAP3",
      "path": "5"
    },
    "2133": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8142],
      "op": "SWAP1",
      "path": "5"
    },
    "2134": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8142],
      "op": "MSTORE",
      "path": "5"
    },
    "2135": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8142],
      "op": "KECCAK256",
      "path": "5"
    },
    "2136": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8153],
      "op": "DUP1",
      "path": "5"
    },
    "2137": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8153],
      "op": "SLOAD",
      "path": "5"
    },
    "2138": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8153],
      "op": "DUP3",
      "path": "5"
    },
    "2139": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8153],
      "op": "ADD",
      "path": "5"
    },
    "2140": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8153],
      "op": "SWAP1",
      "path": "5"
    },
    "2141": {
      "fn": "Splitter.releaseERC",
      "offset": [8112, 8153],
      "op": "SSTORE",
      "path": "5"
    },
    "2142": {
      "fn": "Splitter.releaseERC",
      "offset": [8174, 8221],
      "op": "PUSH2",
      "path": "5",
      "statement": 24,
      "value": "0x868"
    },
    "2145": {
      "fn": "Splitter.releaseERC",
      "offset": [8127, 8132],
      "op": "DUP4",
      "path": "5"
    },
    "2146": {
      "fn": "Splitter.releaseERC",
      "offset": [8134, 8141],
      "op": "DUP4",
      "path": "5"
    },
    "2147": {
      "fn": "Splitter.releaseERC",
      "offset": [8146, 8153],
      "op": "DUP4",
      "path": "5"
    },
    "2148": {
      "fn": "Splitter.releaseERC",
      "offset": [8174, 8196],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118B"
    },
    "2151": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [8174, 8221],
      "op": "JUMP",
      "path": "5"
    },
    "2152": {
      "fn": "Splitter.releaseERC",
      "offset": [8174, 8221],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2159": {
      "op": "SHL"
    },
    "2160": {
      "op": "SUB"
    },
    "2161": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "DUP3",
      "path": "5",
      "statement": 25
    },
    "2162": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "DUP2",
      "path": "5"
    },
    "2163": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "AND",
      "path": "5"
    },
    "2164": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2166": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "SWAP1",
      "path": "5"
    },
    "2167": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "DUP2",
      "path": "5"
    },
    "2168": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "MSTORE",
      "path": "5"
    },
    "2169": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8295],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2171": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2173": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "MSTORE",
      "path": "5"
    },
    "2174": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2176": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "SWAP1",
      "path": "5"
    },
    "2177": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "DUP2",
      "path": "5"
    },
    "2178": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "SWAP1",
      "path": "5"
    },
    "2179": {
      "fn": "Splitter.releaseERC",
      "offset": [8282, 8304],
      "op": "KECCAK256",
      "path": "5"
    },
    "2180": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "SWAP1",
      "path": "5"
    },
    "2181": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "MLOAD",
      "path": "5"
    },
    "2182": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "SWAP2",
      "path": "5"
    },
    "2183": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "DUP6",
      "path": "5"
    },
    "2184": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "AND",
      "path": "5"
    },
    "2185": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "SWAP2",
      "path": "5"
    },
    "2186": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "PUSH32",
      "path": "5",
      "value": "0xB91796AC388F2A71D412E9A062CE147ADF6C8F3683C6B37FA5F002529FBCB5CF"
    },
    "2219": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "SWAP2",
      "path": "5"
    },
    "2220": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8B8"
    },
    "2223": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "SWAP2",
      "path": "5"
    },
    "2224": {
      "fn": "Splitter.releaseERC",
      "offset": [8264, 8271],
      "op": "DUP7",
      "path": "5"
    },
    "2225": {
      "fn": "Splitter.releaseERC",
      "offset": [8264, 8271],
      "op": "SWAP2",
      "path": "5"
    },
    "2226": {
      "fn": "Splitter.releaseERC",
      "offset": [8273, 8280],
      "op": "DUP7",
      "path": "5"
    },
    "2227": {
      "fn": "Splitter.releaseERC",
      "offset": [8273, 8280],
      "op": "SWAP2",
      "path": "5"
    },
    "2228": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19F5"
    },
    "2231": {
      "fn": "Splitter.releaseERC",
      "jump": "i",
      "offset": [8236, 8305],
      "op": "JUMP",
      "path": "5"
    },
    "2232": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2233": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2235": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "MLOAD",
      "path": "5"
    },
    "2236": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "DUP1",
      "path": "5"
    },
    "2237": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "SWAP2",
      "path": "5"
    },
    "2238": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "SUB",
      "path": "5"
    },
    "2239": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "SWAP1",
      "path": "5"
    },
    "2240": {
      "fn": "Splitter.releaseERC",
      "offset": [8236, 8305],
      "op": "LOG2",
      "path": "5"
    },
    "2241": {
      "fn": "Splitter.releaseERC",
      "offset": [7573, 8312],
      "op": "POP",
      "path": "5"
    },
    "2242": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "POP",
      "path": "5"
    },
    "2243": {
      "fn": "Splitter.releaseERC",
      "offset": [7498, 8312],
      "op": "POP",
      "path": "5"
    },
    "2244": {
      "fn": "Splitter.releaseERC",
      "jump": "o",
      "offset": [7498, 8312],
      "op": "JUMP",
      "path": "5"
    },
    "2245": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8383, 9032],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2246": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2248": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "0"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2255": {
      "op": "SHL"
    },
    "2256": {
      "op": "SUB"
    },
    "2257": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "0"
    },
    "2258": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "2259": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "2260": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EF"
    },
    "2263": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "2264": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2266": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "2267": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2273": {
      "op": "SHL"
    },
    "2274": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "2275": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "2276": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2278": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "2279": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "2282": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "2283": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1897"
    },
    "2286": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "2287": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2288": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8461, 8470],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2290": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8456, 9026],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2291": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8480, 8487],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2293": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8480, 8494],
      "op": "SLOAD",
      "path": "5"
    },
    "2294": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8476, 8494],
      "op": "DUP2",
      "path": "5"
    },
    "2295": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8476, 8494],
      "op": "LT",
      "path": "5"
    },
    "2296": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8456, 9026],
      "op": "ISZERO",
      "path": "5"
    },
    "2297": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8456, 9026],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6CE"
    },
    "2300": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8456, 9026],
      "op": "JUMPI",
      "path": "5"
    },
    "2301": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8545, 8546],
      "op": "PUSH1",
      "path": "5",
      "statement": 26,
      "value": "0x0"
    },
    "2303": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8530],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2305": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2307": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8538],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2309": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8539, 8540],
      "op": "DUP5",
      "path": "5"
    },
    "2310": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "DUP2",
      "path": "5"
    },
    "2311": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "SLOAD",
      "path": "5"
    },
    "2312": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "DUP2",
      "path": "5"
    },
    "2313": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "LT",
      "path": "5"
    },
    "2314": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "PUSH2",
      "path": "5",
      "value": "0x915"
    },
    "2317": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "JUMPI",
      "path": "5"
    },
    "2318": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "PUSH2",
      "path": "5",
      "value": "0x915"
    },
    "2321": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "2324": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8531, 8541],
      "op": "JUMP",
      "path": "5"
    },
    "2325": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2326": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2328": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "SWAP2",
      "path": "5"
    },
    "2329": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "DUP3",
      "path": "5"
    },
    "2330": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "MSTORE",
      "path": "5"
    },
    "2331": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2333": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "DUP1",
      "path": "5"
    },
    "2334": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "DUP4",
      "path": "5"
    },
    "2335": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "KECCAK256",
      "path": "5"
    },
    "2336": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "SWAP1",
      "path": "5"
    },
    "2337": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "SWAP2",
      "path": "5"
    },
    "2338": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "ADD",
      "path": "5"
    },
    "2339": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "SLOAD",
      "path": "5"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2346": {
      "op": "SHL"
    },
    "2347": {
      "op": "SUB"
    },
    "2348": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8531, 8541],
      "op": "AND",
      "path": "5"
    },
    "2349": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "DUP4",
      "path": "5"
    },
    "2350": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "MSTORE",
      "path": "5"
    },
    "2351": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "DUP3",
      "path": "5"
    },
    "2352": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "ADD",
      "path": "5"
    },
    "2353": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "SWAP3",
      "path": "5"
    },
    "2354": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "SWAP1",
      "path": "5"
    },
    "2355": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "SWAP3",
      "path": "5"
    },
    "2356": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "MSTORE",
      "path": "5"
    },
    "2357": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2359": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "ADD",
      "path": "5"
    },
    "2360": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "SWAP1",
      "path": "5"
    },
    "2361": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "KECCAK256",
      "path": "5"
    },
    "2362": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8542],
      "op": "SLOAD",
      "path": "5"
    },
    "2363": {
      "branch": 63,
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8523, 8546],
      "op": "GT",
      "path": "5"
    },
    "2364": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97F"
    },
    "2367": {
      "branch": 63,
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "JUMPI",
      "path": "5"
    },
    "2368": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2370": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "MLOAD",
      "path": "5"
    },
    "2371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "DUP2",
      "path": "5"
    },
    "2379": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "MSTORE",
      "path": "5"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2382": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2384": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "DUP3",
      "path": "5"
    },
    "2385": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "ADD",
      "path": "5"
    },
    "2386": {
      "op": "MSTORE"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2391": {
      "op": "DUP3"
    },
    "2392": {
      "op": "ADD"
    },
    "2393": {
      "op": "MSTORE"
    },
    "2394": {
      "op": "PUSH21",
      "value": "0x4163636F756E7420686173206E6F20736861726573"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "2418": {
      "op": "SHL"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2421": {
      "op": "DUP3"
    },
    "2422": {
      "op": "ADD"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2426": {
      "op": "ADD"
    },
    "2427": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "2430": {
      "op": "JUMP"
    },
    "2431": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8515, 8572],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2432": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8587, 8602],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2434": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8605, 8637],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9B2"
    },
    "2437": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8619, 8624],
      "op": "DUP4",
      "path": "5"
    },
    "2438": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8633],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2440": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8634, 8635],
      "op": "DUP5",
      "path": "5"
    },
    "2441": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "DUP2",
      "path": "5"
    },
    "2442": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "SLOAD",
      "path": "5"
    },
    "2443": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "DUP2",
      "path": "5"
    },
    "2444": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "LT",
      "path": "5"
    },
    "2445": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "PUSH2",
      "path": "5",
      "value": "0x998"
    },
    "2448": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "JUMPI",
      "path": "5"
    },
    "2449": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "PUSH2",
      "path": "5",
      "value": "0x998"
    },
    "2452": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "2455": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8626, 8636],
      "op": "JUMP",
      "path": "5"
    },
    "2456": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2457": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2459": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "SWAP2",
      "path": "5"
    },
    "2460": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "DUP3",
      "path": "5"
    },
    "2461": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "MSTORE",
      "path": "5"
    },
    "2462": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2464": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "SWAP1",
      "path": "5"
    },
    "2465": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "SWAP2",
      "path": "5"
    },
    "2466": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "KECCAK256",
      "path": "5"
    },
    "2467": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "ADD",
      "path": "5"
    },
    "2468": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "SLOAD",
      "path": "5"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "op": "SUB"
    },
    "2477": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8626, 8636],
      "op": "AND",
      "path": "5"
    },
    "2478": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8605, 8618],
      "op": "PUSH2",
      "path": "5",
      "value": "0x55C"
    },
    "2481": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8605, 8637],
      "op": "JUMP",
      "path": "5"
    },
    "2482": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8605, 8637],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2483": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8587, 8637],
      "op": "SWAP1",
      "path": "5"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "branch": 64,
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8660, 8672],
      "op": "DUP1",
      "path": "5",
      "statement": 27
    },
    "2486": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA01"
    },
    "2489": {
      "branch": 64,
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "JUMPI",
      "path": "5"
    },
    "2490": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2492": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "MLOAD",
      "path": "5"
    },
    "2493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2499": {
      "op": "SHL"
    },
    "2500": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "DUP2",
      "path": "5"
    },
    "2501": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "MSTORE",
      "path": "5"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2504": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2506": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "DUP3",
      "path": "5"
    },
    "2507": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "ADD",
      "path": "5"
    },
    "2508": {
      "op": "MSTORE"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2513": {
      "op": "DUP3"
    },
    "2514": {
      "op": "ADD"
    },
    "2515": {
      "op": "MSTORE"
    },
    "2516": {
      "op": "PUSH32",
      "value": "0x6163636F756E74206973206E6F7420647565207061796D656E74000000000000"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2551": {
      "op": "DUP3"
    },
    "2552": {
      "op": "ADD"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2556": {
      "op": "ADD"
    },
    "2557": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "2560": {
      "op": "JUMP"
    },
    "2561": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8652, 8703],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2568": {
      "op": "SHL"
    },
    "2569": {
      "op": "SUB"
    },
    "2570": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "DUP4",
      "path": "5",
      "statement": 28
    },
    "2571": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "AND",
      "path": "5"
    },
    "2572": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2574": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "SWAP1",
      "path": "5"
    },
    "2575": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "DUP2",
      "path": "5"
    },
    "2576": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "MSTORE",
      "path": "5"
    },
    "2577": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8737],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "2579": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2581": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "MSTORE",
      "path": "5"
    },
    "2582": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2584": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "DUP2",
      "path": "5"
    },
    "2585": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "KECCAK256",
      "path": "5"
    },
    "2586": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8755],
      "op": "DUP1",
      "path": "5"
    },
    "2587": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8755],
      "op": "SLOAD",
      "path": "5"
    },
    "2588": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8748, 8755],
      "op": "DUP4",
      "path": "5"
    },
    "2589": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8748, 8755],
      "op": "SWAP3",
      "path": "5"
    },
    "2590": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8744],
      "op": "SWAP1",
      "path": "5"
    },
    "2591": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8755],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA29"
    },
    "2594": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8755],
      "op": "SWAP1",
      "path": "5"
    },
    "2595": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8748, 8755],
      "op": "DUP5",
      "path": "5"
    },
    "2596": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8748, 8755],
      "op": "SWAP1",
      "path": "5"
    },
    "2597": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8755],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1973"
    },
    "2600": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8718, 8755],
      "op": "JUMP",
      "path": "5"
    },
    "2601": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8755],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2602": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8755],
      "op": "SWAP1",
      "path": "5"
    },
    "2603": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8755],
      "op": "SWAP2",
      "path": "5"
    },
    "2604": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8718, 8755],
      "op": "SSTORE",
      "path": "5"
    },
    "2605": {
      "op": "POP"
    },
    "2606": {
      "op": "POP"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2613": {
      "op": "SHL"
    },
    "2614": {
      "op": "SUB"
    },
    "2615": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "DUP4",
      "path": "5",
      "statement": 29
    },
    "2616": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "AND",
      "path": "5"
    },
    "2617": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2619": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "SWAP1",
      "path": "5"
    },
    "2620": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "DUP2",
      "path": "5"
    },
    "2621": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "MSTORE",
      "path": "5"
    },
    "2622": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8812],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2624": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2626": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "MSTORE",
      "path": "5"
    },
    "2627": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2629": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "DUP2",
      "path": "5"
    },
    "2630": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "KECCAK256",
      "path": "5"
    },
    "2631": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8827],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2633": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "DUP1",
      "path": "5"
    },
    "2634": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "SLOAD",
      "path": "5"
    },
    "2635": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8835, 8842],
      "op": "DUP5",
      "path": "5"
    },
    "2636": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8835, 8842],
      "op": "SWAP4",
      "path": "5"
    },
    "2637": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8819],
      "op": "SWAP2",
      "path": "5"
    },
    "2638": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8827],
      "op": "SWAP1",
      "path": "5"
    },
    "2639": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8828, 8829],
      "op": "DUP7",
      "path": "5"
    },
    "2640": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8828, 8829],
      "op": "SWAP1",
      "path": "5"
    },
    "2641": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "DUP2",
      "path": "5"
    },
    "2642": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "LT",
      "path": "5"
    },
    "2643": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5E"
    },
    "2646": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "JUMPI",
      "path": "5"
    },
    "2647": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5E"
    },
    "2650": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "2653": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8820, 8830],
      "op": "JUMP",
      "path": "5"
    },
    "2654": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2655": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2657": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "SWAP2",
      "path": "5"
    },
    "2658": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "DUP3",
      "path": "5"
    },
    "2659": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "MSTORE",
      "path": "5"
    },
    "2660": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2662": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "DUP1",
      "path": "5"
    },
    "2663": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "DUP4",
      "path": "5"
    },
    "2664": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "KECCAK256",
      "path": "5"
    },
    "2665": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "SWAP1",
      "path": "5"
    },
    "2666": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "SWAP2",
      "path": "5"
    },
    "2667": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "ADD",
      "path": "5"
    },
    "2668": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "SLOAD",
      "path": "5"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2675": {
      "op": "SHL"
    },
    "2676": {
      "op": "SUB"
    },
    "2677": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8820, 8830],
      "op": "AND",
      "path": "5"
    },
    "2678": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "DUP4",
      "path": "5"
    },
    "2679": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "MSTORE",
      "path": "5"
    },
    "2680": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "DUP3",
      "path": "5"
    },
    "2681": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "ADD",
      "path": "5"
    },
    "2682": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "SWAP3",
      "path": "5"
    },
    "2683": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "SWAP1",
      "path": "5"
    },
    "2684": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "SWAP3",
      "path": "5"
    },
    "2685": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "MSTORE",
      "path": "5"
    },
    "2686": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2688": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "ADD",
      "path": "5"
    },
    "2689": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "SWAP1",
      "path": "5"
    },
    "2690": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8831],
      "op": "KECCAK256",
      "path": "5"
    },
    "2691": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8842],
      "op": "DUP1",
      "path": "5"
    },
    "2692": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8842],
      "op": "SLOAD",
      "path": "5"
    },
    "2693": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8842],
      "op": "SWAP1",
      "path": "5"
    },
    "2694": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8842],
      "op": "SWAP2",
      "path": "5"
    },
    "2695": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8842],
      "op": "ADD",
      "path": "5"
    },
    "2696": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8842],
      "op": "SWAP1",
      "path": "5"
    },
    "2697": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8798, 8842],
      "op": "SSTORE",
      "path": "5"
    },
    "2698": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8908],
      "op": "PUSH1",
      "path": "5",
      "statement": 30,
      "value": "0x6"
    },
    "2700": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "DUP1",
      "path": "5"
    },
    "2701": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "SLOAD",
      "path": "5"
    },
    "2702": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8871, 8921],
      "op": "PUSH2",
      "path": "5",
      "value": "0xABE"
    },
    "2705": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8871, 8921],
      "op": "SWAP2",
      "path": "5"
    },
    "2706": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8894, 8899],
      "op": "DUP6",
      "path": "5"
    },
    "2707": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8894, 8899],
      "op": "SWAP2",
      "path": "5"
    },
    "2708": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8909, 8910],
      "op": "DUP6",
      "path": "5"
    },
    "2709": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8909, 8910],
      "op": "SWAP1",
      "path": "5"
    },
    "2710": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "DUP2",
      "path": "5"
    },
    "2711": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "LT",
      "path": "5"
    },
    "2712": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAA3"
    },
    "2715": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "JUMPI",
      "path": "5"
    },
    "2716": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAA3"
    },
    "2719": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "2722": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8901, 8911],
      "op": "JUMP",
      "path": "5"
    },
    "2723": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2724": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2726": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "SWAP2",
      "path": "5"
    },
    "2727": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "DUP3",
      "path": "5"
    },
    "2728": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "MSTORE",
      "path": "5"
    },
    "2729": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2731": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "SWAP1",
      "path": "5"
    },
    "2732": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "SWAP2",
      "path": "5"
    },
    "2733": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "KECCAK256",
      "path": "5"
    },
    "2734": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "ADD",
      "path": "5"
    },
    "2735": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "SLOAD",
      "path": "5"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2742": {
      "op": "SHL"
    },
    "2743": {
      "op": "SUB"
    },
    "2744": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8901, 8911],
      "op": "AND",
      "path": "5"
    },
    "2745": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8913, 8920],
      "op": "DUP4",
      "path": "5"
    },
    "2746": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8871, 8893],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118B"
    },
    "2749": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8871, 8921],
      "op": "JUMP",
      "path": "5"
    },
    "2750": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8871, 8921],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2751": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8961, 8966],
      "op": "DUP3",
      "path": "5",
      "statement": 31
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "op": "SUB"
    },
    "2760": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "AND",
      "path": "5"
    },
    "2761": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "PUSH32",
      "path": "5",
      "value": "0xB91796AC388F2A71D412E9A062CE147ADF6C8F3683C6B37FA5F002529FBCB5CF"
    },
    "2794": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8975],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2796": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8976, 8977],
      "op": "DUP5",
      "path": "5"
    },
    "2797": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "DUP2",
      "path": "5"
    },
    "2798": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "SLOAD",
      "path": "5"
    },
    "2799": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "DUP2",
      "path": "5"
    },
    "2800": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "LT",
      "path": "5"
    },
    "2801": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAFC"
    },
    "2804": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "JUMPI",
      "path": "5"
    },
    "2805": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAFC"
    },
    "2808": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "2811": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8968, 8978],
      "op": "JUMP",
      "path": "5"
    },
    "2812": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2813": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "SWAP1",
      "path": "5"
    },
    "2814": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2816": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "MSTORE",
      "path": "5"
    },
    "2817": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2819": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2821": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "KECCAK256",
      "path": "5"
    },
    "2822": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "ADD",
      "path": "5"
    },
    "2823": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2825": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "SWAP1",
      "path": "5"
    },
    "2826": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "SLOAD",
      "path": "5"
    },
    "2827": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "SWAP1",
      "path": "5"
    },
    "2828": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2831": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "EXP",
      "path": "5"
    },
    "2832": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "SWAP1",
      "path": "5"
    },
    "2833": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "DIV",
      "path": "5"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2840": {
      "op": "SHL"
    },
    "2841": {
      "op": "SUB"
    },
    "2842": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8968, 8978],
      "op": "AND",
      "path": "5"
    },
    "2843": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8980, 8987],
      "op": "DUP4",
      "path": "5"
    },
    "2844": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9002],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2846": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2848": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9010],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2850": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9011, 9012],
      "op": "DUP9",
      "path": "5"
    },
    "2851": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "DUP2",
      "path": "5"
    },
    "2852": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "SLOAD",
      "path": "5"
    },
    "2853": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "DUP2",
      "path": "5"
    },
    "2854": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "LT",
      "path": "5"
    },
    "2855": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB32"
    },
    "2858": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "JUMPI",
      "path": "5"
    },
    "2859": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB32"
    },
    "2862": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "2865": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [9003, 9013],
      "op": "JUMP",
      "path": "5"
    },
    "2866": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2867": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2869": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "SWAP2",
      "path": "5"
    },
    "2870": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "DUP3",
      "path": "5"
    },
    "2871": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "MSTORE",
      "path": "5"
    },
    "2872": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2874": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "DUP1",
      "path": "5"
    },
    "2875": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "DUP4",
      "path": "5"
    },
    "2876": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "KECCAK256",
      "path": "5"
    },
    "2877": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "SWAP1",
      "path": "5"
    },
    "2878": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "SWAP2",
      "path": "5"
    },
    "2879": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "ADD",
      "path": "5"
    },
    "2880": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "SLOAD",
      "path": "5"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "op": "SUB"
    },
    "2889": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [9003, 9013],
      "op": "AND",
      "path": "5"
    },
    "2890": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "DUP4",
      "path": "5"
    },
    "2891": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "MSTORE",
      "path": "5"
    },
    "2892": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "DUP3",
      "path": "5"
    },
    "2893": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "ADD",
      "path": "5"
    },
    "2894": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "SWAP3",
      "path": "5"
    },
    "2895": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "SWAP1",
      "path": "5"
    },
    "2896": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "SWAP3",
      "path": "5"
    },
    "2897": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "MSTORE",
      "path": "5"
    },
    "2898": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2900": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "SWAP1",
      "path": "5"
    },
    "2901": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "DUP2",
      "path": "5"
    },
    "2902": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "ADD",
      "path": "5"
    },
    "2903": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "SWAP1",
      "path": "5"
    },
    "2904": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "SWAP2",
      "path": "5"
    },
    "2905": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "KECCAK256",
      "path": "5"
    },
    "2906": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "SWAP1",
      "path": "5"
    },
    "2907": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "MLOAD",
      "path": "5"
    },
    "2908": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB67"
    },
    "2911": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "SWAP4",
      "path": "5"
    },
    "2912": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "SWAP3",
      "path": "5"
    },
    "2913": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "SWAP2",
      "path": "5"
    },
    "2914": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8989, 9014],
      "op": "SWAP1",
      "path": "5"
    },
    "2915": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19F5"
    },
    "2918": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8940, 9015],
      "op": "JUMP",
      "path": "5"
    },
    "2919": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2920": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2922": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "MLOAD",
      "path": "5"
    },
    "2923": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "DUP1",
      "path": "5"
    },
    "2924": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "SWAP2",
      "path": "5"
    },
    "2925": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "SUB",
      "path": "5"
    },
    "2926": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "SWAP1",
      "path": "5"
    },
    "2927": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8940, 9015],
      "op": "LOG2",
      "path": "5"
    },
    "2928": {
      "op": "POP"
    },
    "2929": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8496, 8499],
      "op": "DUP1",
      "path": "5",
      "statement": 32
    },
    "2930": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8496, 8499],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB7A"
    },
    "2933": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8496, 8499],
      "op": "DUP2",
      "path": "5"
    },
    "2934": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8496, 8499],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AB7"
    },
    "2937": {
      "fn": "Splitter.bulkReleaseERC",
      "jump": "i",
      "offset": [8496, 8499],
      "op": "JUMP",
      "path": "5"
    },
    "2938": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8496, 8499],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2939": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8496, 8499],
      "op": "SWAP2",
      "path": "5"
    },
    "2940": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8496, 8499],
      "op": "POP",
      "path": "5"
    },
    "2941": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8496, 8499],
      "op": "POP",
      "path": "5"
    },
    "2942": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8456, 9026],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8F2"
    },
    "2945": {
      "fn": "Splitter.bulkReleaseERC",
      "offset": [8456, 9026],
      "op": "JUMP",
      "path": "5"
    },
    "2946": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2947": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3848, 3855],
      "op": "DUP1",
      "path": "5",
      "statement": 33
    },
    "2948": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3848, 3862],
      "op": "MLOAD",
      "path": "5"
    },
    "2949": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3831, 3837],
      "op": "DUP3",
      "path": "5"
    },
    "2950": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3831, 3844],
      "op": "MLOAD",
      "path": "5"
    },
    "2951": {
      "branch": 65,
      "fn": "Splitter._addCSVPayee",
      "offset": [3831, 3862],
      "op": "EQ",
      "path": "5"
    },
    "2952": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBEE"
    },
    "2955": {
      "branch": 65,
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "JUMPI",
      "path": "5"
    },
    "2956": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2958": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "MLOAD",
      "path": "5"
    },
    "2959": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2965": {
      "op": "SHL"
    },
    "2966": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "DUP2",
      "path": "5"
    },
    "2967": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "MSTORE",
      "path": "5"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2970": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2972": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "DUP3",
      "path": "5"
    },
    "2973": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "ADD",
      "path": "5"
    },
    "2974": {
      "op": "MSTORE"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2979": {
      "op": "DUP3"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "op": "MSTORE"
    },
    "2982": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A2070617965657320616E642073686172"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3017": {
      "op": "DUP3"
    },
    "3018": {
      "op": "ADD"
    },
    "3019": {
      "op": "MSTORE"
    },
    "3020": {
      "op": "PUSH18",
      "value": "0xCAE640D8CADCCEE8D040DAD2E6DAC2E8C6D"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "3041": {
      "op": "SHL"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3044": {
      "op": "DUP3"
    },
    "3045": {
      "op": "ADD"
    },
    "3046": {
      "op": "MSTORE"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3049": {
      "op": "ADD"
    },
    "3050": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "3053": {
      "op": "JUMP"
    },
    "3054": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3823, 3917],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3055": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3951, 3952],
      "op": "PUSH1",
      "path": "5",
      "statement": 34,
      "value": "0x0"
    },
    "3057": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3935, 3941],
      "op": "DUP3",
      "path": "5"
    },
    "3058": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3935, 3948],
      "op": "MLOAD",
      "path": "5"
    },
    "3059": {
      "branch": 66,
      "fn": "Splitter._addCSVPayee",
      "offset": [3935, 3952],
      "op": "GT",
      "path": "5"
    },
    "3060": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3F"
    },
    "3063": {
      "branch": 66,
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "JUMPI",
      "path": "5"
    },
    "3064": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3066": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "MLOAD",
      "path": "5"
    },
    "3067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3073": {
      "op": "SHL"
    },
    "3074": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "DUP2",
      "path": "5"
    },
    "3075": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "MSTORE",
      "path": "5"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3078": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3080": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "DUP3",
      "path": "5"
    },
    "3081": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "ADD",
      "path": "5"
    },
    "3082": {
      "op": "MSTORE"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3085": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3087": {
      "op": "DUP3"
    },
    "3088": {
      "op": "ADD"
    },
    "3089": {
      "op": "MSTORE"
    },
    "3090": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206E6F20706179656573000000000000"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3125": {
      "op": "DUP3"
    },
    "3126": {
      "op": "ADD"
    },
    "3127": {
      "op": "MSTORE"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3130": {
      "op": "ADD"
    },
    "3131": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "3134": {
      "op": "JUMP"
    },
    "3135": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3927, 3983],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3136": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4017, 4023],
      "op": "DUP2",
      "path": "5",
      "statement": 35
    },
    "3137": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4017, 4030],
      "op": "MLOAD",
      "path": "5"
    },
    "3138": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4001, 4006],
      "op": "DUP4",
      "path": "5"
    },
    "3139": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4001, 4013],
      "op": "MLOAD",
      "path": "5"
    },
    "3140": {
      "branch": 67,
      "fn": "Splitter._addCSVPayee",
      "offset": [4001, 4030],
      "op": "EQ",
      "path": "5"
    },
    "3141": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3993, 4031],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4D"
    },
    "3144": {
      "branch": 67,
      "fn": "Splitter._addCSVPayee",
      "offset": [3993, 4031],
      "op": "JUMPI",
      "path": "5"
    },
    "3145": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3993, 4031],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3147": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3993, 4031],
      "op": "DUP1",
      "path": "5"
    },
    "3148": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3993, 4031],
      "op": "REVERT",
      "path": "5"
    },
    "3149": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3993, 4031],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3150": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4047, 4056],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3152": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4042, 4153],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3153": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4066, 4072],
      "op": "DUP3",
      "path": "5"
    },
    "3154": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4066, 4079],
      "op": "MLOAD",
      "path": "5"
    },
    "3155": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4062, 4063],
      "op": "DUP2",
      "path": "5"
    },
    "3156": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4062, 4079],
      "op": "LT",
      "path": "5"
    },
    "3157": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4042, 4153],
      "op": "ISZERO",
      "path": "5"
    },
    "3158": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4042, 4153],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC1"
    },
    "3161": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4042, 4153],
      "op": "JUMPI",
      "path": "5"
    },
    "3162": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4100, 4142],
      "op": "PUSH2",
      "path": "5",
      "statement": 36,
      "value": "0xCAF"
    },
    "3165": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4115],
      "op": "DUP5",
      "path": "5"
    },
    "3166": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4116, 4117],
      "op": "DUP3",
      "path": "5"
    },
    "3167": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "DUP2",
      "path": "5"
    },
    "3168": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "MLOAD",
      "path": "5"
    },
    "3169": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "DUP2",
      "path": "5"
    },
    "3170": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "LT",
      "path": "5"
    },
    "3171": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC6E"
    },
    "3174": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "JUMPI",
      "path": "5"
    },
    "3175": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC6E"
    },
    "3178": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "3181": {
      "fn": "Splitter._addCSVPayee",
      "jump": "i",
      "offset": [4110, 4118],
      "op": "JUMP",
      "path": "5"
    },
    "3182": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3183": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3185": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "MUL",
      "path": "5"
    },
    "3186": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3188": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "ADD",
      "path": "5"
    },
    "3189": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "ADD",
      "path": "5"
    },
    "3190": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4110, 4118],
      "op": "MLOAD",
      "path": "5"
    },
    "3191": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4126],
      "op": "DUP5",
      "path": "5"
    },
    "3192": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4127, 4128],
      "op": "DUP4",
      "path": "5"
    },
    "3193": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "DUP2",
      "path": "5"
    },
    "3194": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "MLOAD",
      "path": "5"
    },
    "3195": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "DUP2",
      "path": "5"
    },
    "3196": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "LT",
      "path": "5"
    },
    "3197": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC88"
    },
    "3200": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "JUMPI",
      "path": "5"
    },
    "3201": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC88"
    },
    "3204": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "3207": {
      "fn": "Splitter._addCSVPayee",
      "jump": "i",
      "offset": [4120, 4129],
      "op": "JUMP",
      "path": "5"
    },
    "3208": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3209": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3211": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "MUL",
      "path": "5"
    },
    "3212": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3214": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "ADD",
      "path": "5"
    },
    "3215": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "ADD",
      "path": "5"
    },
    "3216": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4120, 4129],
      "op": "MLOAD",
      "path": "5"
    },
    "3217": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4138],
      "op": "DUP5",
      "path": "5"
    },
    "3218": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4139, 4140],
      "op": "DUP5",
      "path": "5"
    },
    "3219": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "DUP2",
      "path": "5"
    },
    "3220": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "MLOAD",
      "path": "5"
    },
    "3221": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "DUP2",
      "path": "5"
    },
    "3222": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "LT",
      "path": "5"
    },
    "3223": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA2"
    },
    "3226": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "JUMPI",
      "path": "5"
    },
    "3227": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA2"
    },
    "3230": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19A4"
    },
    "3233": {
      "fn": "Splitter._addCSVPayee",
      "jump": "i",
      "offset": [4131, 4141],
      "op": "JUMP",
      "path": "5"
    },
    "3234": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3235": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3237": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "MUL",
      "path": "5"
    },
    "3238": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3240": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "ADD",
      "path": "5"
    },
    "3241": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "ADD",
      "path": "5"
    },
    "3242": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4131, 4141],
      "op": "MLOAD",
      "path": "5"
    },
    "3243": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4100, 4109],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC7"
    },
    "3246": {
      "fn": "Splitter._addCSVPayee",
      "jump": "i",
      "offset": [4100, 4142],
      "op": "JUMP",
      "path": "5"
    },
    "3247": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4100, 4142],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3248": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4081, 4084],
      "op": "DUP1",
      "path": "5",
      "statement": 37
    },
    "3249": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4081, 4084],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCB9"
    },
    "3252": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4081, 4084],
      "op": "DUP2",
      "path": "5"
    },
    "3253": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4081, 4084],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AB7"
    },
    "3256": {
      "fn": "Splitter._addCSVPayee",
      "jump": "i",
      "offset": [4081, 4084],
      "op": "JUMP",
      "path": "5"
    },
    "3257": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4081, 4084],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3258": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4081, 4084],
      "op": "SWAP2",
      "path": "5"
    },
    "3259": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4081, 4084],
      "op": "POP",
      "path": "5"
    },
    "3260": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4081, 4084],
      "op": "POP",
      "path": "5"
    },
    "3261": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4042, 4153],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC50"
    },
    "3264": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4042, 4153],
      "op": "JUMP",
      "path": "5"
    },
    "3265": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4042, 4153],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3266": {
      "fn": "Splitter._addCSVPayee",
      "offset": [4042, 4153],
      "op": "POP",
      "path": "5"
    },
    "3267": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "POP",
      "path": "5"
    },
    "3268": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "POP",
      "path": "5"
    },
    "3269": {
      "fn": "Splitter._addCSVPayee",
      "offset": [3710, 4159],
      "op": "POP",
      "path": "5"
    },
    "3270": {
      "fn": "Splitter._addCSVPayee",
      "jump": "o",
      "offset": [3710, 4159],
      "op": "JUMP",
      "path": "5"
    },
    "3271": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3272": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3274": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "0"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3281": {
      "op": "SHL"
    },
    "3282": {
      "op": "SUB"
    },
    "3283": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "0"
    },
    "3284": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "3285": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "3286": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF1"
    },
    "3289": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "3290": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3292": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "3293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3299": {
      "op": "SHL"
    },
    "3300": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "3301": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "3302": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3304": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "3305": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "3308": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "3309": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1897"
    },
    "3312": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "3313": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "op": "SUB"
    },
    "3322": {
      "fn": "Splitter._addPayee",
      "offset": [9740, 9761],
      "op": "DUP3",
      "path": "5",
      "statement": 38
    },
    "3323": {
      "branch": 68,
      "fn": "Splitter._addPayee",
      "offset": [9740, 9761],
      "op": "AND",
      "path": "5"
    },
    "3324": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD5C"
    },
    "3327": {
      "branch": 68,
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "JUMPI",
      "path": "5"
    },
    "3328": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3330": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "MLOAD",
      "path": "5"
    },
    "3331": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3337": {
      "op": "SHL"
    },
    "3338": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "DUP2",
      "path": "5"
    },
    "3339": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "MSTORE",
      "path": "5"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3342": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3344": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "DUP3",
      "path": "5"
    },
    "3345": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "ADD",
      "path": "5"
    },
    "3346": {
      "op": "MSTORE"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3351": {
      "op": "DUP3"
    },
    "3352": {
      "op": "ADD"
    },
    "3353": {
      "op": "MSTORE"
    },
    "3354": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E742069732074686520"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3389": {
      "op": "DUP3"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "MSTORE"
    },
    "3392": {
      "op": "PUSH12",
      "value": "0x7A65726F2061646472657373"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3410": {
      "op": "DUP3"
    },
    "3411": {
      "op": "ADD"
    },
    "3412": {
      "op": "MSTORE"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3415": {
      "op": "ADD"
    },
    "3416": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "3419": {
      "op": "JUMP"
    },
    "3420": {
      "fn": "Splitter._addPayee",
      "offset": [9732, 9810],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3421": {
      "fn": "Splitter._addPayee",
      "offset": [9838, 9839],
      "op": "PUSH1",
      "path": "5",
      "statement": 39,
      "value": "0x0"
    },
    "3423": {
      "fn": "Splitter._addPayee",
      "offset": [9828, 9835],
      "op": "DUP2",
      "path": "5"
    },
    "3424": {
      "branch": 69,
      "fn": "Splitter._addPayee",
      "offset": [9828, 9839],
      "op": "GT",
      "path": "5"
    },
    "3425": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDAC"
    },
    "3428": {
      "branch": 69,
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "JUMPI",
      "path": "5"
    },
    "3429": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3431": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "MLOAD",
      "path": "5"
    },
    "3432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3438": {
      "op": "SHL"
    },
    "3439": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "DUP2",
      "path": "5"
    },
    "3440": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "MSTORE",
      "path": "5"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3443": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3445": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "DUP3",
      "path": "5"
    },
    "3446": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "ADD",
      "path": "5"
    },
    "3447": {
      "op": "MSTORE"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3452": {
      "op": "DUP3"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "MSTORE"
    },
    "3455": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A20736861726573206172652030000000"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3490": {
      "op": "DUP3"
    },
    "3491": {
      "op": "ADD"
    },
    "3492": {
      "op": "MSTORE"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "3499": {
      "op": "JUMP"
    },
    "3500": {
      "fn": "Splitter._addPayee",
      "offset": [9820, 9873],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3507": {
      "op": "SHL"
    },
    "3508": {
      "op": "SUB"
    },
    "3509": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "DUP3",
      "path": "5",
      "statement": 40
    },
    "3510": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "AND",
      "path": "5"
    },
    "3511": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3513": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "SWAP1",
      "path": "5"
    },
    "3514": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "DUP2",
      "path": "5"
    },
    "3515": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "MSTORE",
      "path": "5"
    },
    "3516": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9898],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3518": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3520": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "MSTORE",
      "path": "5"
    },
    "3521": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3523": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "SWAP1",
      "path": "5"
    },
    "3524": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "KECCAK256",
      "path": "5"
    },
    "3525": {
      "fn": "Splitter._addPayee",
      "offset": [9891, 9907],
      "op": "SLOAD",
      "path": "5"
    },
    "3526": {
      "branch": 70,
      "fn": "Splitter._addPayee",
      "offset": [9891, 9912],
      "op": "ISZERO",
      "path": "5"
    },
    "3527": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE26"
    },
    "3530": {
      "branch": 70,
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "JUMPI",
      "path": "5"
    },
    "3531": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3533": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "MLOAD",
      "path": "5"
    },
    "3534": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3540": {
      "op": "SHL"
    },
    "3541": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "DUP2",
      "path": "5"
    },
    "3542": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "MSTORE",
      "path": "5"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3545": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3547": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "DUP3",
      "path": "5"
    },
    "3548": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "ADD",
      "path": "5"
    },
    "3549": {
      "op": "MSTORE"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3554": {
      "op": "DUP3"
    },
    "3555": {
      "op": "ADD"
    },
    "3556": {
      "op": "MSTORE"
    },
    "3557": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E7420616C7265616479"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3592": {
      "op": "DUP3"
    },
    "3593": {
      "op": "ADD"
    },
    "3594": {
      "op": "MSTORE"
    },
    "3595": {
      "op": "PUSH11",
      "value": "0x2068617320736861726573"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3609": {
      "op": "SHL"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3612": {
      "op": "DUP3"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "MSTORE"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3617": {
      "op": "ADD"
    },
    "3618": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "3621": {
      "op": "JUMP"
    },
    "3622": {
      "fn": "Splitter._addPayee",
      "offset": [9883, 9960],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3623": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9978],
      "op": "PUSH1",
      "path": "5",
      "statement": 41,
      "value": "0x6"
    },
    "3625": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "DUP1",
      "path": "5"
    },
    "3626": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "SLOAD",
      "path": "5"
    },
    "3627": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3629": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "DUP1",
      "path": "5"
    },
    "3630": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "DUP3",
      "path": "5"
    },
    "3631": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "ADD",
      "path": "5"
    },
    "3632": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "SWAP1",
      "path": "5"
    },
    "3633": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "SWAP3",
      "path": "5"
    },
    "3634": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "SSTORE",
      "path": "5"
    },
    "3635": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "PUSH32",
      "path": "5",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "3668": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "ADD",
      "path": "5"
    },
    "3669": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "DUP1",
      "path": "5"
    },
    "3670": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "SLOAD",
      "path": "5"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3677": {
      "op": "SHL"
    },
    "3678": {
      "op": "SUB"
    },
    "3679": {
      "op": "NOT"
    },
    "3680": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "AND",
      "path": "5"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3687": {
      "op": "SHL"
    },
    "3688": {
      "op": "SUB"
    },
    "3689": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "DUP6",
      "path": "5"
    },
    "3690": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "AND",
      "path": "5"
    },
    "3691": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "SWAP1",
      "path": "5"
    },
    "3692": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "DUP2",
      "path": "5"
    },
    "3693": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "OR",
      "path": "5"
    },
    "3694": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "SWAP1",
      "path": "5"
    },
    "3695": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "SWAP2",
      "path": "5"
    },
    "3696": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "SSTORE",
      "path": "5"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3699": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10018],
      "op": "SWAP1",
      "path": "5",
      "statement": 42
    },
    "3700": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10018],
      "op": "DUP2",
      "path": "5"
    },
    "3701": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10018],
      "op": "MSTORE",
      "path": "5"
    },
    "3702": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10009],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3704": {
      "fn": "Splitter._addPayee",
      "offset": [9971, 9992],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3706": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10018],
      "op": "MSTORE",
      "path": "5"
    },
    "3707": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10018],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3709": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10018],
      "op": "SWAP1",
      "path": "5"
    },
    "3710": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10018],
      "op": "KECCAK256",
      "path": "5"
    },
    "3711": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10028],
      "op": "DUP3",
      "path": "5"
    },
    "3712": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10028],
      "op": "SWAP1",
      "path": "5"
    },
    "3713": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10028],
      "op": "SSTORE",
      "path": "5"
    },
    "3714": {
      "fn": "Splitter._addPayee",
      "offset": [10053, 10065],
      "op": "SLOAD",
      "path": "5",
      "statement": 43
    },
    "3715": {
      "fn": "Splitter._addPayee",
      "offset": [10053, 10075],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE8D"
    },
    "3718": {
      "fn": "Splitter._addPayee",
      "offset": [10053, 10075],
      "op": "SWAP1",
      "path": "5"
    },
    "3719": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10028],
      "op": "DUP3",
      "path": "5"
    },
    "3720": {
      "fn": "Splitter._addPayee",
      "offset": [10002, 10028],
      "op": "SWAP1",
      "path": "5"
    },
    "3721": {
      "fn": "Splitter._addPayee",
      "offset": [10053, 10075],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1973"
    },
    "3724": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [10053, 10075],
      "op": "JUMP",
      "path": "5"
    },
    "3725": {
      "fn": "Splitter._addPayee",
      "offset": [10053, 10075],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3726": {
      "fn": "Splitter._addPayee",
      "offset": [10038, 10050],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3728": {
      "fn": "Splitter._addPayee",
      "offset": [10038, 10075],
      "op": "SSTORE",
      "path": "5"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3735": {
      "op": "SHL"
    },
    "3736": {
      "op": "SUB"
    },
    "3737": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "DUP3",
      "path": "5",
      "statement": 44
    },
    "3738": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "AND",
      "path": "5"
    },
    "3739": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3741": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "SWAP1",
      "path": "5"
    },
    "3742": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "DUP2",
      "path": "5"
    },
    "3743": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "MSTORE",
      "path": "5"
    },
    "3744": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10098],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3746": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3748": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "SWAP1",
      "path": "5"
    },
    "3749": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "DUP2",
      "path": "5"
    },
    "3750": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "MSTORE",
      "path": "5"
    },
    "3751": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3753": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "SWAP1",
      "path": "5"
    },
    "3754": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "SWAP2",
      "path": "5"
    },
    "3755": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10107],
      "op": "KECCAK256",
      "path": "5"
    },
    "3756": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "DUP5",
      "path": "5"
    },
    "3757": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "MLOAD",
      "path": "5"
    },
    "3758": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEB9"
    },
    "3761": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "SWAP3",
      "path": "5"
    },
    "3762": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "DUP7",
      "path": "5"
    },
    "3763": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "ADD",
      "path": "5"
    },
    "3764": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "SWAP1",
      "path": "5"
    },
    "3765": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1413"
    },
    "3768": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [10085, 10115],
      "op": "JUMP",
      "path": "5"
    },
    "3769": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3770": {
      "fn": "Splitter._addPayee",
      "offset": [10085, 10115],
      "op": "POP",
      "path": "5"
    },
    "3771": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "PUSH32",
      "path": "5",
      "statement": 45,
      "value": "0x319341ECDAE9BDC47FD5810AAF1C42C449352B02DF82B41B8076895B5F3A4688"
    },
    "3804": {
      "fn": "Splitter._addPayee",
      "offset": [10141, 10148],
      "op": "DUP3",
      "path": "5"
    },
    "3805": {
      "fn": "Splitter._addPayee",
      "offset": [10150, 10157],
      "op": "DUP3",
      "path": "5"
    },
    "3806": {
      "fn": "Splitter._addPayee",
      "offset": [10159, 10164],
      "op": "DUP6",
      "path": "5"
    },
    "3807": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3809": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "MLOAD",
      "path": "5"
    },
    "3810": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEED"
    },
    "3813": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "SWAP4",
      "path": "5"
    },
    "3814": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "SWAP3",
      "path": "5"
    },
    "3815": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "SWAP2",
      "path": "5"
    },
    "3816": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "SWAP1",
      "path": "5"
    },
    "3817": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AD2"
    },
    "3820": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [10130, 10165],
      "op": "JUMP",
      "path": "5"
    },
    "3821": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3822": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3824": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "MLOAD",
      "path": "5"
    },
    "3825": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "DUP1",
      "path": "5"
    },
    "3826": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "SWAP2",
      "path": "5"
    },
    "3827": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "SUB",
      "path": "5"
    },
    "3828": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "SWAP1",
      "path": "5"
    },
    "3829": {
      "fn": "Splitter._addPayee",
      "offset": [10130, 10165],
      "op": "LOG1",
      "path": "5"
    },
    "3830": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "POP",
      "path": "5"
    },
    "3831": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "POP",
      "path": "5"
    },
    "3832": {
      "fn": "Splitter._addPayee",
      "offset": [9631, 10172],
      "op": "POP",
      "path": "5"
    },
    "3833": {
      "fn": "Splitter._addPayee",
      "jump": "o",
      "offset": [9631, 10172],
      "op": "JUMP",
      "path": "5"
    },
    "3834": {
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3835": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3837": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3839": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MSTORE",
      "path": "5"
    },
    "3840": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3842": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3843": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP2",
      "path": "5"
    },
    "3844": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MSTORE",
      "path": "5"
    },
    "3845": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3847": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3848": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "KECCAK256",
      "path": "5"
    },
    "3849": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "3850": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SLOAD",
      "path": "5"
    },
    "3851": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF13"
    },
    "3854": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3855": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19BA"
    },
    "3858": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [1988, 2035],
      "op": "JUMP",
      "path": "5"
    },
    "3859": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3860": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "3861": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3863": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ADD",
      "path": "5"
    },
    "3864": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3866": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "3867": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP2",
      "path": "5"
    },
    "3868": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DIV",
      "path": "5"
    },
    "3869": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MUL",
      "path": "5"
    },
    "3870": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3872": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ADD",
      "path": "5"
    },
    "3873": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3875": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MLOAD",
      "path": "5"
    },
    "3876": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3877": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP2",
      "path": "5"
    },
    "3878": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ADD",
      "path": "5"
    },
    "3879": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3881": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MSTORE",
      "path": "5"
    },
    "3882": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "3883": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP3",
      "path": "5"
    },
    "3884": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP2",
      "path": "5"
    },
    "3885": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3886": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP2",
      "path": "5"
    },
    "3887": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP2",
      "path": "5"
    },
    "3888": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MSTORE",
      "path": "5"
    },
    "3889": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3891": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ADD",
      "path": "5"
    },
    "3892": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP3",
      "path": "5"
    },
    "3893": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "3894": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SLOAD",
      "path": "5"
    },
    "3895": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3F"
    },
    "3898": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3899": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19BA"
    },
    "3902": {
      "fn": "Splitter._addPayee",
      "jump": "i",
      "offset": [1988, 2035],
      "op": "JUMP",
      "path": "5"
    },
    "3903": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3904": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "3905": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ISZERO",
      "path": "5"
    },
    "3906": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF8C"
    },
    "3909": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "JUMPI",
      "path": "5"
    },
    "3910": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "3911": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3913": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "LT",
      "path": "5"
    },
    "3914": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF61"
    },
    "3917": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "JUMPI",
      "path": "5"
    },
    "3918": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "3921": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "3922": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP4",
      "path": "5"
    },
    "3923": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SLOAD",
      "path": "5"
    },
    "3924": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DIV",
      "path": "5"
    },
    "3925": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MUL",
      "path": "5"
    },
    "3926": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP4",
      "path": "5"
    },
    "3927": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MSTORE",
      "path": "5"
    },
    "3928": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP2",
      "path": "5"
    },
    "3929": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3931": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ADD",
      "path": "5"
    },
    "3932": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP2",
      "path": "5"
    },
    "3933": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF8C"
    },
    "3936": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "JUMP",
      "path": "5"
    },
    "3937": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3938": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP3",
      "path": "5"
    },
    "3939": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ADD",
      "path": "5"
    },
    "3940": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP2",
      "path": "5"
    },
    "3941": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3942": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3944": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MSTORE",
      "path": "5"
    },
    "3945": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3947": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3949": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "KECCAK256",
      "path": "5"
    },
    "3950": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3951": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3952": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP2",
      "path": "5"
    },
    "3953": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SLOAD",
      "path": "5"
    },
    "3954": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP2",
      "path": "5"
    },
    "3955": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "MSTORE",
      "path": "5"
    },
    "3956": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3957": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3959": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ADD",
      "path": "5"
    },
    "3960": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3961": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3963": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ADD",
      "path": "5"
    },
    "3964": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP1",
      "path": "5"
    },
    "3965": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP4",
      "path": "5"
    },
    "3966": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "GT",
      "path": "5"
    },
    "3967": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF6F"
    },
    "3970": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "JUMPI",
      "path": "5"
    },
    "3971": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP3",
      "path": "5"
    },
    "3972": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP1",
      "path": "5"
    },
    "3973": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SUB",
      "path": "5"
    },
    "3974": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3976": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "AND",
      "path": "5"
    },
    "3977": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP3",
      "path": "5"
    },
    "3978": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "ADD",
      "path": "5"
    },
    "3979": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "SWAP2",
      "path": "5"
    },
    "3980": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3981": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "POP",
      "path": "5"
    },
    "3982": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "POP",
      "path": "5"
    },
    "3983": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "POP",
      "path": "5"
    },
    "3984": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "POP",
      "path": "5"
    },
    "3985": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "POP",
      "path": "5"
    },
    "3986": {
      "fn": "Splitter._addPayee",
      "offset": [1988, 2035],
      "op": "DUP2",
      "path": "5"
    },
    "3987": {
      "fn": "Splitter._addPayee",
      "jump": "o",
      "offset": [1988, 2035],
      "op": "JUMP",
      "path": "5"
    },
    "3988": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3989": {
      "fn": "Ownable.owner",
      "offset": [1082, 1089],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3991": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "SLOAD",
      "path": "0"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3998": {
      "op": "SHL"
    },
    "3999": {
      "op": "SUB"
    },
    "4000": {
      "fn": "Ownable.owner",
      "offset": [1108, 1114],
      "op": "AND",
      "path": "0"
    },
    "4001": {
      "fn": "Context._msgSender",
      "offset": [719, 729],
      "op": "CALLER",
      "path": "4"
    },
    "4002": {
      "offset": [1248, 1271],
      "op": "EQ",
      "path": "0"
    },
    "4003": {
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFBE"
    },
    "4006": {
      "offset": [1240, 1308],
      "op": "JUMPI",
      "path": "0"
    },
    "4007": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4009": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MLOAD",
      "path": "0"
    },
    "4010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4016": {
      "op": "SHL"
    },
    "4017": {
      "offset": [1240, 1308],
      "op": "DUP2",
      "path": "0"
    },
    "4018": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "MSTORE",
      "path": "0"
    },
    "4019": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4021": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "ADD",
      "path": "0"
    },
    "4022": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "4025": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "SWAP1",
      "path": "0"
    },
    "4026": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1897"
    },
    "4029": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [1240, 1308],
      "op": "JUMP",
      "path": "0"
    },
    "4030": {
      "fn": "Context._msgSender",
      "offset": [1240, 1308],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4037": {
      "op": "SHL"
    },
    "4038": {
      "op": "SUB"
    },
    "4039": {
      "fn": "Ownable.transferOwnership",
      "offset": [2006, 2028],
      "op": "DUP2",
      "path": "0",
      "statement": 46
    },
    "4040": {
      "branch": 75,
      "fn": "Ownable.transferOwnership",
      "offset": [2006, 2028],
      "op": "AND",
      "path": "0"
    },
    "4041": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1023"
    },
    "4044": {
      "branch": 75,
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "JUMPI",
      "path": "0"
    },
    "4045": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4047": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "MLOAD",
      "path": "0"
    },
    "4048": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4054": {
      "op": "SHL"
    },
    "4055": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "DUP2",
      "path": "0"
    },
    "4056": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "MSTORE",
      "path": "0"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4059": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4061": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "DUP3",
      "path": "0"
    },
    "4062": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "ADD",
      "path": "0"
    },
    "4063": {
      "op": "MSTORE"
    },
    "4064": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4068": {
      "op": "DUP3"
    },
    "4069": {
      "op": "ADD"
    },
    "4070": {
      "op": "MSTORE"
    },
    "4071": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4106": {
      "op": "DUP3"
    },
    "4107": {
      "op": "ADD"
    },
    "4108": {
      "op": "MSTORE"
    },
    "4109": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4118": {
      "op": "SHL"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4121": {
      "op": "DUP3"
    },
    "4122": {
      "op": "ADD"
    },
    "4123": {
      "op": "MSTORE"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4126": {
      "op": "ADD"
    },
    "4127": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46F"
    },
    "4130": {
      "op": "JUMP"
    },
    "4131": {
      "fn": "Ownable.transferOwnership",
      "offset": [1998, 2071],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4132": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2109],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0x102C"
    },
    "4135": {
      "fn": "Ownable.transferOwnership",
      "offset": [2100, 2108],
      "op": "DUP2",
      "path": "0"
    },
    "4136": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2099],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DD"
    },
    "4139": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [2081, 2109],
      "op": "JUMP",
      "path": "0"
    },
    "4140": {
      "fn": "Ownable.transferOwnership",
      "offset": [2081, 2109],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4141": {
      "fn": "Ownable.transferOwnership",
      "offset": [1918, 2116],
      "op": "POP",
      "path": "0"
    },
    "4142": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [1918, 2116],
      "op": "JUMP",
      "path": "0"
    },
    "4143": {
      "fn": "Address.sendValue",
      "offset": [2412, 2724],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4144": {
      "fn": "Address.sendValue",
      "offset": [2526, 2532],
      "op": "DUP1",
      "path": "3",
      "statement": 48
    },
    "4145": {
      "fn": "Address.sendValue",
      "offset": [2501, 2522],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "4146": {
      "fn": "Address.sendValue",
      "offset": [2501, 2532],
      "op": "LT",
      "path": "3"
    },
    "4147": {
      "branch": 71,
      "fn": "Address.sendValue",
      "offset": [2501, 2532],
      "op": "ISZERO",
      "path": "3"
    },
    "4148": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "PUSH2",
      "path": "3",
      "value": "0x107F"
    },
    "4151": {
      "branch": 71,
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "JUMPI",
      "path": "3"
    },
    "4152": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4154": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "MLOAD",
      "path": "3"
    },
    "4155": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4161": {
      "op": "SHL"
    },
    "4162": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "DUP2",
      "path": "3"
    },
    "4163": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "MSTORE",
      "path": "3"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4166": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4168": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "DUP3",
      "path": "3"
    },
    "4169": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "ADD",
      "path": "3"
    },
    "4170": {
      "op": "MSTORE"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4175": {
      "op": "DUP3"
    },
    "4176": {
      "op": "ADD"
    },
    "4177": {
      "op": "MSTORE"
    },
    "4178": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E6365000000"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4213": {
      "op": "DUP3"
    },
    "4214": {
      "op": "ADD"
    },
    "4215": {
      "op": "MSTORE"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4218": {
      "op": "ADD"
    },
    "4219": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46F"
    },
    "4222": {
      "op": "JUMP"
    },
    "4223": {
      "fn": "Address.sendValue",
      "offset": [2493, 2566],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4224": {
      "fn": "Address.sendValue",
      "offset": [2578, 2590],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4226": {
      "fn": "Address.sendValue",
      "offset": [2596, 2605],
      "op": "DUP3",
      "path": "3"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4233": {
      "op": "SHL"
    },
    "4234": {
      "op": "SUB"
    },
    "4235": {
      "fn": "Address.sendValue",
      "offset": [2596, 2610],
      "op": "AND",
      "path": "3"
    },
    "4236": {
      "fn": "Address.sendValue",
      "offset": [2618, 2624],
      "op": "DUP3",
      "path": "3"
    },
    "4237": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4239": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "MLOAD",
      "path": "3"
    },
    "4240": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4242": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4244": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "MLOAD",
      "path": "3"
    },
    "4245": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP1",
      "path": "3"
    },
    "4246": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP4",
      "path": "3"
    },
    "4247": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "SUB",
      "path": "3"
    },
    "4248": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP2",
      "path": "3"
    },
    "4249": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP6",
      "path": "3"
    },
    "4250": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP8",
      "path": "3"
    },
    "4251": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "GAS",
      "path": "3"
    },
    "4252": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "CALL",
      "path": "3"
    },
    "4253": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "SWAP3",
      "path": "3"
    },
    "4254": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "POP",
      "path": "3"
    },
    "4255": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "POP",
      "path": "3"
    },
    "4256": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "POP",
      "path": "3"
    },
    "4257": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4258": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP1",
      "path": "3"
    },
    "4259": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4261": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP2",
      "path": "3"
    },
    "4262": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "EQ",
      "path": "3"
    },
    "4263": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10CC"
    },
    "4266": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "JUMPI",
      "path": "3"
    },
    "4267": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4269": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "MLOAD",
      "path": "3"
    },
    "4270": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "SWAP2",
      "path": "3"
    },
    "4271": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "POP",
      "path": "3"
    },
    "4272": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4274": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "NOT",
      "path": "3"
    },
    "4275": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "4277": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4278": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "ADD",
      "path": "3"
    },
    "4279": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "AND",
      "path": "3"
    },
    "4280": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP3",
      "path": "3"
    },
    "4281": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "ADD",
      "path": "3"
    },
    "4282": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4284": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "MSTORE",
      "path": "3"
    },
    "4285": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4286": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP3",
      "path": "3"
    },
    "4287": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "MSTORE",
      "path": "3"
    },
    "4288": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4289": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4291": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4293": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "DUP5",
      "path": "3"
    },
    "4294": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "ADD",
      "path": "3"
    },
    "4295": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4296": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D1"
    },
    "4299": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "JUMP",
      "path": "3"
    },
    "4300": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4301": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4303": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "SWAP2",
      "path": "3"
    },
    "4304": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "POP",
      "path": "3"
    },
    "4305": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4306": {
      "fn": "Address.sendValue",
      "offset": [2596, 2629],
      "op": "POP",
      "path": "3"
    },
    "4307": {
      "fn": "Address.sendValue",
      "offset": [2577, 2629],
      "op": "POP",
      "path": "3"
    },
    "4308": {
      "fn": "Address.sendValue",
      "offset": [2577, 2629],
      "op": "SWAP1",
      "path": "3"
    },
    "4309": {
      "fn": "Address.sendValue",
      "offset": [2577, 2629],
      "op": "POP",
      "path": "3"
    },
    "4310": {
      "branch": 72,
      "fn": "Address.sendValue",
      "offset": [2647, 2654],
      "op": "DUP1",
      "path": "3",
      "statement": 49
    },
    "4311": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1148"
    },
    "4314": {
      "branch": 72,
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "JUMPI",
      "path": "3"
    },
    "4315": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4317": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "MLOAD",
      "path": "3"
    },
    "4318": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4324": {
      "op": "SHL"
    },
    "4325": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "DUP2",
      "path": "3"
    },
    "4326": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "MSTORE",
      "path": "3"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4329": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4331": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "DUP3",
      "path": "3"
    },
    "4332": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "ADD",
      "path": "3"
    },
    "4333": {
      "op": "MSTORE"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4338": {
      "op": "DUP3"
    },
    "4339": {
      "op": "ADD"
    },
    "4340": {
      "op": "MSTORE"
    },
    "4341": {
      "op": "PUSH32",
      "value": "0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4376": {
      "op": "DUP3"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "MSTORE"
    },
    "4379": {
      "op": "PUSH32",
      "value": "0x6563697069656E74206D61792068617665207265766572746564000000000000"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4414": {
      "op": "DUP3"
    },
    "4415": {
      "op": "ADD"
    },
    "4416": {
      "op": "MSTORE"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4419": {
      "op": "ADD"
    },
    "4420": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46F"
    },
    "4423": {
      "op": "JUMP"
    },
    "4424": {
      "fn": "Address.sendValue",
      "offset": [2639, 2717],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4425": {
      "fn": "Address.sendValue",
      "offset": [2483, 2724],
      "op": "POP",
      "path": "3"
    },
    "4426": {
      "fn": "Address.sendValue",
      "offset": [2412, 2724],
      "op": "POP",
      "path": "3"
    },
    "4427": {
      "fn": "Address.sendValue",
      "offset": [2412, 2724],
      "op": "POP",
      "path": "3"
    },
    "4428": {
      "fn": "Address.sendValue",
      "jump": "o",
      "offset": [2412, 2724],
      "op": "JUMP",
      "path": "3"
    },
    "4429": {
      "fn": "Splitter._pendingPayment",
      "offset": [9204, 9446],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4430": {
      "fn": "Splitter._pendingPayment",
      "offset": [9409, 9421],
      "op": "PUSH1",
      "path": "5",
      "statement": 50,
      "value": "0x1"
    },
    "4432": {
      "fn": "Splitter._pendingPayment",
      "offset": [9409, 9421],
      "op": "SLOAD",
      "path": "5"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4439": {
      "op": "SHL"
    },
    "4440": {
      "op": "SUB"
    },
    "4441": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "DUP5",
      "path": "5"
    },
    "4442": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "AND",
      "path": "5"
    },
    "4443": {
      "fn": "Splitter._pendingPayment",
      "offset": [9346, 9353],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4445": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "SWAP1",
      "path": "5"
    },
    "4446": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "DUP2",
      "path": "5"
    },
    "4447": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "MSTORE",
      "path": "5"
    },
    "4448": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9396],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4450": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4452": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "MSTORE",
      "path": "5"
    },
    "4453": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4455": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "DUP2",
      "path": "5"
    },
    "4456": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "KECCAK256",
      "path": "5"
    },
    "4457": {
      "fn": "Splitter._pendingPayment",
      "offset": [9389, 9405],
      "op": "SLOAD",
      "path": "5"
    },
    "4458": {
      "fn": "Splitter._pendingPayment",
      "offset": [9346, 9353],
      "op": "SWAP1",
      "path": "5"
    },
    "4459": {
      "fn": "Splitter._pendingPayment",
      "offset": [9346, 9353],
      "op": "SWAP2",
      "path": "5"
    },
    "4460": {
      "fn": "Splitter._pendingPayment",
      "offset": [9424, 9439],
      "op": "DUP4",
      "path": "5"
    },
    "4461": {
      "fn": "Splitter._pendingPayment",
      "offset": [9424, 9439],
      "op": "SWAP2",
      "path": "5"
    },
    "4462": {
      "fn": "Splitter._pendingPayment",
      "offset": [9373, 9405],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1177"
    },
    "4465": {
      "fn": "Splitter._pendingPayment",
      "offset": [9373, 9405],
      "op": "SWAP1",
      "path": "5"
    },
    "4466": {
      "fn": "Splitter._pendingPayment",
      "offset": [9373, 9386],
      "op": "DUP7",
      "path": "5"
    },
    "4467": {
      "fn": "Splitter._pendingPayment",
      "offset": [9373, 9405],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B02"
    },
    "4470": {
      "fn": "Splitter._pendingPayment",
      "jump": "i",
      "offset": [9373, 9405],
      "op": "JUMP",
      "path": "5"
    },
    "4471": {
      "fn": "Splitter._pendingPayment",
      "offset": [9373, 9405],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4472": {
      "fn": "Splitter._pendingPayment",
      "offset": [9372, 9421],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1181"
    },
    "4475": {
      "fn": "Splitter._pendingPayment",
      "offset": [9372, 9421],
      "op": "SWAP2",
      "path": "5"
    },
    "4476": {
      "fn": "Splitter._pendingPayment",
      "offset": [9372, 9421],
      "op": "SWAP1",
      "path": "5"
    },
    "4477": {
      "fn": "Splitter._pendingPayment",
      "offset": [9372, 9421],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B21"
    },
    "4480": {
      "fn": "Splitter._pendingPayment",
      "jump": "i",
      "offset": [9372, 9421],
      "op": "JUMP",
      "path": "5"
    },
    "4481": {
      "fn": "Splitter._pendingPayment",
      "offset": [9372, 9421],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4482": {
      "fn": "Splitter._pendingPayment",
      "offset": [9372, 9439],
      "op": "PUSH2",
      "path": "5",
      "value": "0x624"
    },
    "4485": {
      "fn": "Splitter._pendingPayment",
      "offset": [9372, 9439],
      "op": "SWAP2",
      "path": "5"
    },
    "4486": {
      "fn": "Splitter._pendingPayment",
      "offset": [9372, 9439],
      "op": "SWAP1",
      "path": "5"
    },
    "4487": {
      "fn": "Splitter._pendingPayment",
      "offset": [9372, 9439],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B43"
    },
    "4490": {
      "fn": "Splitter._pendingPayment",
      "jump": "i",
      "offset": [9372, 9439],
      "op": "JUMP",
      "path": "5"
    },
    "4491": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [701, 906],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4492": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "2",
      "statement": 51,
      "value": "0x40"
    },
    "4494": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP1",
      "path": "2"
    },
    "4495": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MLOAD",
      "path": "2"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4502": {
      "op": "SHL"
    },
    "4503": {
      "op": "SUB"
    },
    "4504": {
      "op": "DUP5"
    },
    "4505": {
      "op": "AND"
    },
    "4506": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4508": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP3",
      "path": "2"
    },
    "4509": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "ADD",
      "path": "2"
    },
    "4510": {
      "op": "MSTORE"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4513": {
      "op": "DUP1"
    },
    "4514": {
      "op": "DUP3"
    },
    "4515": {
      "op": "ADD"
    },
    "4516": {
      "op": "DUP5"
    },
    "4517": {
      "op": "SWAP1"
    },
    "4518": {
      "op": "MSTORE"
    },
    "4519": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP3",
      "path": "2"
    },
    "4520": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MLOAD",
      "path": "2"
    },
    "4521": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP1",
      "path": "2"
    },
    "4522": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP4",
      "path": "2"
    },
    "4523": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SUB",
      "path": "2"
    },
    "4524": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP1",
      "path": "2"
    },
    "4525": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP2",
      "path": "2"
    },
    "4526": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "ADD",
      "path": "2"
    },
    "4527": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP2",
      "path": "2"
    },
    "4528": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MSTORE",
      "path": "2"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4531": {
      "op": "SWAP1"
    },
    "4532": {
      "op": "SWAP2"
    },
    "4533": {
      "op": "ADD"
    },
    "4534": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP1",
      "path": "2"
    },
    "4535": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP2",
      "path": "2"
    },
    "4536": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MSTORE",
      "path": "2"
    },
    "4537": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4539": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP2",
      "path": "2"
    },
    "4540": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "ADD",
      "path": "2"
    },
    "4541": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "DUP1",
      "path": "2"
    },
    "4542": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MLOAD",
      "path": "2"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4549": {
      "op": "SHL"
    },
    "4550": {
      "op": "SUB"
    },
    "4551": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "AND",
      "path": "2"
    },
    "4552": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4559": {
      "op": "SHL"
    },
    "4560": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "OR",
      "path": "2"
    },
    "4561": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "SWAP1",
      "path": "2"
    },
    "4562": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [840, 898],
      "op": "MSTORE",
      "path": "2"
    },
    "4563": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 899],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1148"
    },
    "4566": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 899],
      "op": "SWAP1",
      "path": "2"
    },
    "4567": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [833, 838],
      "op": "DUP5",
      "path": "2"
    },
    "4568": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [833, 838],
      "op": "SWAP1",
      "path": "2"
    },
    "4569": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [813, 832],
      "op": "PUSH2",
      "path": "2",
      "value": "0x122D"
    },
    "4572": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [813, 899],
      "op": "JUMP",
      "path": "2"
    },
    "4573": {
      "fn": "Ownable._transferOwnership",
      "offset": [2270, 2457],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4574": {
      "fn": "Ownable._transferOwnership",
      "offset": [2343, 2359],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4576": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "DUP1",
      "path": "0"
    },
    "4577": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SLOAD",
      "path": "0"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4584": {
      "op": "SHL"
    },
    "4585": {
      "op": "SUB"
    },
    "4586": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP4",
      "path": "0",
      "statement": 52
    },
    "4587": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP2",
      "path": "0"
    },
    "4588": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "AND",
      "path": "0"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4595": {
      "op": "SHL"
    },
    "4596": {
      "op": "SUB"
    },
    "4597": {
      "op": "NOT"
    },
    "4598": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP4",
      "path": "0"
    },
    "4599": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "AND",
      "path": "0"
    },
    "4600": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP2",
      "path": "0"
    },
    "4601": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "OR",
      "path": "0"
    },
    "4602": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "DUP5",
      "path": "0"
    },
    "4603": {
      "fn": "Ownable._transferOwnership",
      "offset": [2378, 2395],
      "op": "SSTORE",
      "path": "0"
    },
    "4604": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "PUSH1",
      "path": "0",
      "statement": 53,
      "value": "0x40"
    },
    "4606": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "MLOAD",
      "path": "0"
    },
    "4607": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP2",
      "path": "0"
    },
    "4608": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP1",
      "path": "0"
    },
    "4609": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP3",
      "path": "0"
    },
    "4610": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "AND",
      "path": "0"
    },
    "4611": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP3",
      "path": "0"
    },
    "4612": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "DUP4",
      "path": "0"
    },
    "4613": {
      "fn": "Ownable._transferOwnership",
      "offset": [2362, 2368],
      "op": "SWAP2",
      "path": "0"
    },
    "4614": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4647": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "SWAP2",
      "path": "0"
    },
    "4648": {
      "fn": "Ownable._transferOwnership",
      "offset": [2343, 2359],
      "op": "SWAP1",
      "path": "0"
    },
    "4649": {
      "fn": "Ownable._transferOwnership",
      "offset": [2410, 2450],
      "op": "LOG3",
      "path": "0"
    },
    "4650": {
      "fn": "Ownable._transferOwnership",
      "offset": [2333, 2457],
      "op": "POP",
      "path": "0"
    },
    "4651": {
      "fn": "Ownable._transferOwnership",
      "offset": [2270, 2457],
      "op": "POP",
      "path": "0"
    },
    "4652": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [2270, 2457],
      "op": "JUMP",
      "path": "0"
    },
    "4653": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3207, 3913],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4654": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3649],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4656": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1282"
    },
    "4659": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3680, 3684],
      "op": "DUP3",
      "path": "2"
    },
    "4660": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4662": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MLOAD",
      "path": "2"
    },
    "4663": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP1",
      "path": "2"
    },
    "4664": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4666": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "ADD",
      "path": "2"
    },
    "4667": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4669": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "2"
    },
    "4670": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP1",
      "path": "2"
    },
    "4671": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4673": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP2",
      "path": "2"
    },
    "4674": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "2"
    },
    "4675": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4677": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "ADD",
      "path": "2"
    },
    "4678": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH32",
      "path": "2",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "4711": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "DUP2",
      "path": "2"
    },
    "4712": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "MSTORE",
      "path": "2"
    },
    "4713": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "POP",
      "path": "2"
    },
    "4714": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3660, 3665],
      "op": "DUP6",
      "path": "2"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4721": {
      "op": "SHL"
    },
    "4722": {
      "op": "SUB"
    },
    "4723": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "AND",
      "path": "2"
    },
    "4724": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12FF"
    },
    "4727": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3679],
      "op": "SWAP1",
      "path": "2"
    },
    "4728": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP3",
      "path": "2"
    },
    "4729": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP2",
      "path": "2"
    },
    "4730": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "SWAP1",
      "path": "2"
    },
    "4731": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4736": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "AND",
      "path": "2"
    },
    "4737": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3652, 3721],
      "op": "JUMP",
      "path": "2"
    },
    "4738": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3652, 3721],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4739": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3752],
      "op": "DUP1",
      "path": "2"
    },
    "4740": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3752],
      "op": "MLOAD",
      "path": "2"
    },
    "4741": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3721],
      "op": "SWAP1",
      "path": "2"
    },
    "4742": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3626, 3721],
      "op": "SWAP2",
      "path": "2"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "branch": 76,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3735, 3756],
      "op": "ISZERO",
      "path": "2"
    },
    "4745": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3731, 3907],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1148"
    },
    "4748": {
      "branch": 76,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3731, 3907],
      "op": "JUMPI",
      "path": "2"
    },
    "4749": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3830, 3840],
      "op": "DUP1",
      "path": "2",
      "statement": 54
    },
    "4750": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "DUP1",
      "path": "2"
    },
    "4751": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4753": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "ADD",
      "path": "2"
    },
    "4754": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "2"
    },
    "4755": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "MLOAD",
      "path": "2"
    },
    "4756": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "DUP2",
      "path": "2"
    },
    "4757": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "ADD",
      "path": "2"
    },
    "4758": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "2"
    },
    "4759": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A0"
    },
    "4762": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP2",
      "path": "2"
    },
    "4763": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "SWAP1",
      "path": "2"
    },
    "4764": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5A"
    },
    "4767": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [3819, 3849],
      "op": "JUMP",
      "path": "2"
    },
    "4768": {
      "branch": 77,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3819, 3849],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4769": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1148"
    },
    "4772": {
      "branch": 77,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "JUMPI",
      "path": "2"
    },
    "4773": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4775": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "MLOAD",
      "path": "2"
    },
    "4776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "DUP2",
      "path": "2"
    },
    "4784": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "MSTORE",
      "path": "2"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4787": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4789": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "DUP3",
      "path": "2"
    },
    "4790": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "ADD",
      "path": "2"
    },
    "4791": {
      "op": "MSTORE"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4796": {
      "op": "DUP3"
    },
    "4797": {
      "op": "ADD"
    },
    "4798": {
      "op": "MSTORE"
    },
    "4799": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4834": {
      "op": "DUP3"
    },
    "4835": {
      "op": "ADD"
    },
    "4836": {
      "op": "MSTORE"
    },
    "4837": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "4850": {
      "op": "SHL"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4853": {
      "op": "DUP3"
    },
    "4854": {
      "op": "ADD"
    },
    "4855": {
      "op": "MSTORE"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4858": {
      "op": "ADD"
    },
    "4859": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [3811, 3896],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46F"
    },
    "4862": {
      "op": "JUMP"
    },
    "4863": {
      "fn": "Address.functionCall",
      "offset": [3861, 4084],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4864": {
      "fn": "Address.functionCall",
      "offset": [3994, 4006],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4866": {
      "fn": "Address.functionCall",
      "offset": [4025, 4077],
      "op": "PUSH2",
      "path": "3",
      "statement": 55,
      "value": "0x624"
    },
    "4869": {
      "fn": "Address.functionCall",
      "offset": [4047, 4053],
      "op": "DUP5",
      "path": "3"
    },
    "4870": {
      "fn": "Address.functionCall",
      "offset": [4055, 4059],
      "op": "DUP5",
      "path": "3"
    },
    "4871": {
      "fn": "Address.functionCall",
      "offset": [4061, 4062],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4873": {
      "fn": "Address.functionCall",
      "offset": [4064, 4076],
      "op": "DUP6",
      "path": "3"
    },
    "4874": {
      "fn": "Address.functionCall",
      "offset": [3994, 4006],
      "op": "DUP6",
      "path": "3"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4881": {
      "op": "SHL"
    },
    "4882": {
      "op": "SUB"
    },
    "4883": {
      "fn": "Address.isContract",
      "offset": [1465, 1484],
      "op": "DUP6",
      "path": "3",
      "statement": 56
    },
    "4884": {
      "fn": "Address.isContract",
      "offset": [1465, 1484],
      "op": "AND",
      "path": "3"
    },
    "4885": {
      "fn": "Address.isContract",
      "offset": [1465, 1484],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4886": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "PUSH2",
      "path": "3",
      "statement": 57,
      "value": "0x1361"
    },
    "4889": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "JUMPI",
      "path": "3"
    },
    "4890": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4892": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "MLOAD",
      "path": "3"
    },
    "4893": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4897": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4899": {
      "op": "SHL"
    },
    "4900": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "DUP2",
      "path": "3"
    },
    "4901": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "MSTORE",
      "path": "3"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4904": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4906": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "DUP3",
      "path": "3"
    },
    "4907": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "ADD",
      "path": "3"
    },
    "4908": {
      "op": "MSTORE"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4913": {
      "op": "DUP3"
    },
    "4914": {
      "op": "ADD"
    },
    "4915": {
      "op": "MSTORE"
    },
    "4916": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4951": {
      "op": "DUP3"
    },
    "4952": {
      "op": "ADD"
    },
    "4953": {
      "op": "MSTORE"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4956": {
      "op": "ADD"
    },
    "4957": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46F"
    },
    "4960": {
      "op": "JUMP"
    },
    "4961": {
      "fn": "Address.functionCallWithValue",
      "offset": [5228, 5288],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4962": {
      "fn": "Address.functionCallWithValue",
      "offset": [5300, 5312],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4964": {
      "fn": "Address.functionCallWithValue",
      "offset": [5314, 5337],
      "op": "DUP1",
      "path": "3"
    },
    "4965": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5347],
      "op": "DUP7",
      "path": "3"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "op": "SUB"
    },
    "4974": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5352],
      "op": "AND",
      "path": "3"
    },
    "4975": {
      "fn": "Address.functionCallWithValue",
      "offset": [5360, 5365],
      "op": "DUP6",
      "path": "3"
    },
    "4976": {
      "fn": "Address.functionCallWithValue",
      "offset": [5367, 5371],
      "op": "DUP8",
      "path": "3"
    },
    "4977": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4979": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MLOAD",
      "path": "3"
    },
    "4980": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH2",
      "path": "3",
      "value": "0x137D"
    },
    "4983": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP2",
      "path": "3"
    },
    "4984": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP1",
      "path": "3"
    },
    "4985": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B7C"
    },
    "4988": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5341, 5372],
      "op": "JUMP",
      "path": "3"
    },
    "4989": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4990": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4992": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4994": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MLOAD",
      "path": "3"
    },
    "4995": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP1",
      "path": "3"
    },
    "4996": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP4",
      "path": "3"
    },
    "4997": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SUB",
      "path": "3"
    },
    "4998": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP2",
      "path": "3"
    },
    "4999": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP6",
      "path": "3"
    },
    "5000": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP8",
      "path": "3"
    },
    "5001": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "GAS",
      "path": "3"
    },
    "5002": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "CALL",
      "path": "3"
    },
    "5003": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP3",
      "path": "3"
    },
    "5004": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "3"
    },
    "5005": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "3"
    },
    "5006": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "3"
    },
    "5007": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5008": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP1",
      "path": "3"
    },
    "5009": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5011": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP2",
      "path": "3"
    },
    "5012": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "EQ",
      "path": "3"
    },
    "5013": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13BA"
    },
    "5016": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMPI",
      "path": "3"
    },
    "5017": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5019": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MLOAD",
      "path": "3"
    },
    "5020": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP2",
      "path": "3"
    },
    "5021": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "3"
    },
    "5022": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5024": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "NOT",
      "path": "3"
    },
    "5025": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "5027": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5028": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "ADD",
      "path": "3"
    },
    "5029": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "AND",
      "path": "3"
    },
    "5030": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP3",
      "path": "3"
    },
    "5031": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "ADD",
      "path": "3"
    },
    "5032": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5034": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MSTORE",
      "path": "3"
    },
    "5035": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5036": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP3",
      "path": "3"
    },
    "5037": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "MSTORE",
      "path": "3"
    },
    "5038": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5039": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5041": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5043": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "DUP5",
      "path": "3"
    },
    "5044": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "ADD",
      "path": "3"
    },
    "5045": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5046": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13BF"
    },
    "5049": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMP",
      "path": "3"
    },
    "5050": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5051": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5053": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "SWAP2",
      "path": "3"
    },
    "5054": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "3"
    },
    "5055": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5056": {
      "fn": "Address.functionCallWithValue",
      "offset": [5341, 5372],
      "op": "POP",
      "path": "3"
    },
    "5057": {
      "fn": "Address.functionCallWithValue",
      "offset": [5299, 5372],
      "op": "SWAP2",
      "path": "3"
    },
    "5058": {
      "fn": "Address.functionCallWithValue",
      "offset": [5299, 5372],
      "op": "POP",
      "path": "3"
    },
    "5059": {
      "fn": "Address.functionCallWithValue",
      "offset": [5299, 5372],
      "op": "SWAP2",
      "path": "3"
    },
    "5060": {
      "fn": "Address.functionCallWithValue",
      "offset": [5299, 5372],
      "op": "POP",
      "path": "3"
    },
    "5061": {
      "fn": "Address.functionCallWithValue",
      "offset": [5389, 5440],
      "op": "PUSH2",
      "path": "3",
      "statement": 58,
      "value": "0x13CF"
    },
    "5064": {
      "fn": "Address.functionCallWithValue",
      "offset": [5406, 5413],
      "op": "DUP3",
      "path": "3"
    },
    "5065": {
      "fn": "Address.functionCallWithValue",
      "offset": [5415, 5425],
      "op": "DUP3",
      "path": "3"
    },
    "5066": {
      "fn": "Address.functionCallWithValue",
      "offset": [5427, 5439],
      "op": "DUP7",
      "path": "3"
    },
    "5067": {
      "fn": "Address.functionCallWithValue",
      "offset": [5389, 5405],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13DA"
    },
    "5070": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [5389, 5440],
      "op": "JUMP",
      "path": "3"
    },
    "5071": {
      "fn": "Address.functionCallWithValue",
      "offset": [5389, 5440],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5072": {
      "fn": "Address.functionCallWithValue",
      "offset": [5382, 5440],
      "op": "SWAP8",
      "path": "3"
    },
    "5073": {
      "fn": "Address.functionCallWithValue",
      "offset": [4948, 5447],
      "op": "SWAP7",
      "path": "3"
    },
    "5074": {
      "op": "POP"
    },
    "5075": {
      "op": "POP"
    },
    "5076": {
      "op": "POP"
    },
    "5077": {
      "op": "POP"
    },
    "5078": {
      "op": "POP"
    },
    "5079": {
      "op": "POP"
    },
    "5080": {
      "op": "POP"
    },
    "5081": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [4948, 5447],
      "op": "JUMP",
      "path": "3"
    },
    "5082": {
      "fn": "Address.verifyCallResult",
      "offset": [7561, 8253],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5083": {
      "fn": "Address.verifyCallResult",
      "offset": [7707, 7719],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5085": {
      "branch": 73,
      "fn": "Address.verifyCallResult",
      "offset": [7735, 7742],
      "op": "DUP4",
      "path": "3"
    },
    "5086": {
      "fn": "Address.verifyCallResult",
      "offset": [7731, 8247],
      "op": "ISZERO",
      "path": "3"
    },
    "5087": {
      "fn": "Address.verifyCallResult",
      "offset": [7731, 8247],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E9"
    },
    "5090": {
      "branch": 73,
      "fn": "Address.verifyCallResult",
      "offset": [7731, 8247],
      "op": "JUMPI",
      "path": "3"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "fn": "Address.verifyCallResult",
      "offset": [7765, 7775],
      "op": "DUP2",
      "path": "3",
      "statement": 59
    },
    "5093": {
      "fn": "Address.verifyCallResult",
      "offset": [7758, 7775],
      "op": "PUSH2",
      "path": "3",
      "value": "0x774"
    },
    "5096": {
      "fn": "Address.verifyCallResult",
      "offset": [7758, 7775],
      "op": "JUMP",
      "path": "3"
    },
    "5097": {
      "fn": "Address.verifyCallResult",
      "offset": [7731, 8247],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5098": {
      "fn": "Address.verifyCallResult",
      "offset": [7876, 7893],
      "op": "DUP3",
      "path": "3"
    },
    "5099": {
      "fn": "Address.verifyCallResult",
      "offset": [7876, 7893],
      "op": "MLOAD",
      "path": "3"
    },
    "5100": {
      "branch": 74,
      "fn": "Address.verifyCallResult",
      "offset": [7876, 7897],
      "op": "ISZERO",
      "path": "3"
    },
    "5101": {
      "fn": "Address.verifyCallResult",
      "offset": [7872, 8237],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F9"
    },
    "5104": {
      "branch": 74,
      "fn": "Address.verifyCallResult",
      "offset": [7872, 8237],
      "op": "JUMPI",
      "path": "3"
    },
    "5105": {
      "fn": "Address.verifyCallResult",
      "offset": [8070, 8080],
      "op": "DUP3",
      "path": "3"
    },
    "5106": {
      "fn": "Address.verifyCallResult",
      "offset": [8064, 8081],
      "op": "MLOAD",
      "path": "3"
    },
    "5107": {
      "fn": "Address.verifyCallResult",
      "offset": [8130, 8145],
      "op": "DUP1",
      "path": "3"
    },
    "5108": {
      "fn": "Address.verifyCallResult",
      "offset": [8117, 8127],
      "op": "DUP5",
      "path": "3"
    },
    "5109": {
      "fn": "Address.verifyCallResult",
      "offset": [8113, 8115],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5111": {
      "fn": "Address.verifyCallResult",
      "offset": [8109, 8128],
      "op": "ADD",
      "path": "3"
    },
    "5112": {
      "fn": "Address.verifyCallResult",
      "offset": [8102, 8146],
      "op": "REVERT",
      "path": "3"
    },
    "5113": {
      "fn": "Address.verifyCallResult",
      "offset": [7872, 8237],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5114": {
      "fn": "Address.verifyCallResult",
      "offset": [8209, 8221],
      "op": "DUP2",
      "path": "3",
      "statement": 60
    },
    "5115": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5117": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "MLOAD",
      "path": "3"
    },
    "5118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5124": {
      "op": "SHL"
    },
    "5125": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "DUP2",
      "path": "3"
    },
    "5126": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "MSTORE",
      "path": "3"
    },
    "5127": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5129": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "ADD",
      "path": "3"
    },
    "5130": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46F"
    },
    "5133": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "SWAP2",
      "path": "3"
    },
    "5134": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "SWAP1",
      "path": "3"
    },
    "5135": {
      "fn": "Address.verifyCallResult",
      "offset": [8202, 8222],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1884"
    },
    "5138": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [8202, 8222],
      "op": "JUMP",
      "path": "3"
    },
    "5139": {
      "op": "JUMPDEST"
    },
    "5140": {
      "op": "DUP3"
    },
    "5141": {
      "op": "DUP1"
    },
    "5142": {
      "op": "SLOAD"
    },
    "5143": {
      "op": "PUSH2",
      "value": "0x141F"
    },
    "5146": {
      "op": "SWAP1"
    },
    "5147": {
      "op": "PUSH2",
      "value": "0x19BA"
    },
    "5150": {
      "jump": "i",
      "op": "JUMP"
    },
    "5151": {
      "op": "JUMPDEST"
    },
    "5152": {
      "op": "SWAP1"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5155": {
      "op": "MSTORE"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5160": {
      "op": "KECCAK256"
    },
    "5161": {
      "op": "SWAP1"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5164": {
      "op": "ADD"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5167": {
      "op": "SWAP1"
    },
    "5168": {
      "op": "DIV"
    },
    "5169": {
      "op": "DUP2"
    },
    "5170": {
      "op": "ADD"
    },
    "5171": {
      "op": "SWAP3"
    },
    "5172": {
      "op": "DUP3"
    },
    "5173": {
      "op": "PUSH2",
      "value": "0x1441"
    },
    "5176": {
      "op": "JUMPI"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5179": {
      "op": "DUP6"
    },
    "5180": {
      "op": "SSTORE"
    },
    "5181": {
      "op": "PUSH2",
      "value": "0x1487"
    },
    "5184": {
      "op": "JUMP"
    },
    "5185": {
      "op": "JUMPDEST"
    },
    "5186": {
      "op": "DUP3"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5189": {
      "op": "LT"
    },
    "5190": {
      "op": "PUSH2",
      "value": "0x145A"
    },
    "5193": {
      "op": "JUMPI"
    },
    "5194": {
      "op": "DUP1"
    },
    "5195": {
      "op": "MLOAD"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5198": {
      "op": "NOT"
    },
    "5199": {
      "op": "AND"
    },
    "5200": {
      "op": "DUP4"
    },
    "5201": {
      "op": "DUP1"
    },
    "5202": {
      "op": "ADD"
    },
    "5203": {
      "op": "OR"
    },
    "5204": {
      "op": "DUP6"
    },
    "5205": {
      "op": "SSTORE"
    },
    "5206": {
      "op": "PUSH2",
      "value": "0x1487"
    },
    "5209": {
      "op": "JUMP"
    },
    "5210": {
      "op": "JUMPDEST"
    },
    "5211": {
      "op": "DUP3"
    },
    "5212": {
      "op": "DUP1"
    },
    "5213": {
      "op": "ADD"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5216": {
      "op": "ADD"
    },
    "5217": {
      "op": "DUP6"
    },
    "5218": {
      "op": "SSTORE"
    },
    "5219": {
      "op": "DUP3"
    },
    "5220": {
      "op": "ISZERO"
    },
    "5221": {
      "op": "PUSH2",
      "value": "0x1487"
    },
    "5224": {
      "op": "JUMPI"
    },
    "5225": {
      "op": "SWAP2"
    },
    "5226": {
      "op": "DUP3"
    },
    "5227": {
      "op": "ADD"
    },
    "5228": {
      "op": "JUMPDEST"
    },
    "5229": {
      "op": "DUP3"
    },
    "5230": {
      "op": "DUP2"
    },
    "5231": {
      "op": "GT"
    },
    "5232": {
      "op": "ISZERO"
    },
    "5233": {
      "op": "PUSH2",
      "value": "0x1487"
    },
    "5236": {
      "op": "JUMPI"
    },
    "5237": {
      "op": "DUP3"
    },
    "5238": {
      "op": "MLOAD"
    },
    "5239": {
      "op": "DUP3"
    },
    "5240": {
      "op": "SSTORE"
    },
    "5241": {
      "op": "SWAP2"
    },
    "5242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5244": {
      "op": "ADD"
    },
    "5245": {
      "op": "SWAP2"
    },
    "5246": {
      "op": "SWAP1"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5249": {
      "op": "ADD"
    },
    "5250": {
      "op": "SWAP1"
    },
    "5251": {
      "op": "PUSH2",
      "value": "0x146C"
    },
    "5254": {
      "op": "JUMP"
    },
    "5255": {
      "op": "JUMPDEST"
    },
    "5256": {
      "op": "POP"
    },
    "5257": {
      "op": "PUSH2",
      "value": "0x1493"
    },
    "5260": {
      "op": "SWAP3"
    },
    "5261": {
      "op": "SWAP2"
    },
    "5262": {
      "op": "POP"
    },
    "5263": {
      "op": "PUSH2",
      "value": "0x1497"
    },
    "5266": {
      "jump": "i",
      "op": "JUMP"
    },
    "5267": {
      "op": "JUMPDEST"
    },
    "5268": {
      "op": "POP"
    },
    "5269": {
      "op": "SWAP1"
    },
    "5270": {
      "jump": "o",
      "op": "JUMP"
    },
    "5271": {
      "op": "JUMPDEST"
    },
    "5272": {
      "op": "JUMPDEST"
    },
    "5273": {
      "op": "DUP1"
    },
    "5274": {
      "op": "DUP3"
    },
    "5275": {
      "op": "GT"
    },
    "5276": {
      "op": "ISZERO"
    },
    "5277": {
      "op": "PUSH2",
      "value": "0x1493"
    },
    "5280": {
      "op": "JUMPI"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5283": {
      "op": "DUP2"
    },
    "5284": {
      "op": "SSTORE"
    },
    "5285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5287": {
      "op": "ADD"
    },
    "5288": {
      "op": "PUSH2",
      "value": "0x1498"
    },
    "5291": {
      "op": "JUMP"
    },
    "5292": {
      "op": "JUMPDEST"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5299": {
      "op": "SHL"
    },
    "5300": {
      "op": "SUB"
    },
    "5301": {
      "op": "DUP2"
    },
    "5302": {
      "op": "AND"
    },
    "5303": {
      "op": "DUP2"
    },
    "5304": {
      "op": "EQ"
    },
    "5305": {
      "op": "PUSH2",
      "value": "0x102C"
    },
    "5308": {
      "op": "JUMPI"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5311": {
      "op": "DUP1"
    },
    "5312": {
      "op": "REVERT"
    },
    "5313": {
      "op": "JUMPDEST"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5318": {
      "op": "DUP3"
    },
    "5319": {
      "op": "DUP5"
    },
    "5320": {
      "op": "SUB"
    },
    "5321": {
      "op": "SLT"
    },
    "5322": {
      "op": "ISZERO"
    },
    "5323": {
      "op": "PUSH2",
      "value": "0x14D3"
    },
    "5326": {
      "op": "JUMPI"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5329": {
      "op": "DUP1"
    },
    "5330": {
      "op": "REVERT"
    },
    "5331": {
      "op": "JUMPDEST"
    },
    "5332": {
      "op": "DUP2"
    },
    "5333": {
      "op": "CALLDATALOAD"
    },
    "5334": {
      "op": "PUSH2",
      "value": "0x774"
    },
    "5337": {
      "op": "DUP2"
    },
    "5338": {
      "op": "PUSH2",
      "value": "0x14AC"
    },
    "5341": {
      "jump": "i",
      "op": "JUMP"
    },
    "5342": {
      "op": "JUMPDEST"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5345": {
      "op": "DUP1"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5348": {
      "op": "DUP4"
    },
    "5349": {
      "op": "DUP6"
    },
    "5350": {
      "op": "SUB"
    },
    "5351": {
      "op": "SLT"
    },
    "5352": {
      "op": "ISZERO"
    },
    "5353": {
      "op": "PUSH2",
      "value": "0x14F1"
    },
    "5356": {
      "op": "JUMPI"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5359": {
      "op": "DUP1"
    },
    "5360": {
      "op": "REVERT"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "op": "DUP3"
    },
    "5363": {
      "op": "CALLDATALOAD"
    },
    "5364": {
      "op": "PUSH2",
      "value": "0x14FC"
    },
    "5367": {
      "op": "DUP2"
    },
    "5368": {
      "op": "PUSH2",
      "value": "0x14AC"
    },
    "5371": {
      "jump": "i",
      "op": "JUMP"
    },
    "5372": {
      "op": "JUMPDEST"
    },
    "5373": {
      "op": "SWAP2"
    },
    "5374": {
      "op": "POP"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5377": {
      "op": "DUP4"
    },
    "5378": {
      "op": "ADD"
    },
    "5379": {
      "op": "CALLDATALOAD"
    },
    "5380": {
      "op": "PUSH2",
      "value": "0x150C"
    },
    "5383": {
      "op": "DUP2"
    },
    "5384": {
      "op": "PUSH2",
      "value": "0x14AC"
    },
    "5387": {
      "jump": "i",
      "op": "JUMP"
    },
    "5388": {
      "op": "JUMPDEST"
    },
    "5389": {
      "op": "DUP1"
    },
    "5390": {
      "op": "SWAP2"
    },
    "5391": {
      "op": "POP"
    },
    "5392": {
      "op": "POP"
    },
    "5393": {
      "op": "SWAP3"
    },
    "5394": {
      "op": "POP"
    },
    "5395": {
      "op": "SWAP3"
    },
    "5396": {
      "op": "SWAP1"
    },
    "5397": {
      "op": "POP"
    },
    "5398": {
      "jump": "o",
      "op": "JUMP"
    },
    "5399": {
      "op": "JUMPDEST"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5404": {
      "op": "DUP3"
    },
    "5405": {
      "op": "DUP5"
    },
    "5406": {
      "op": "SUB"
    },
    "5407": {
      "op": "SLT"
    },
    "5408": {
      "op": "ISZERO"
    },
    "5409": {
      "op": "PUSH2",
      "value": "0x1529"
    },
    "5412": {
      "op": "JUMPI"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5415": {
      "op": "DUP1"
    },
    "5416": {
      "op": "REVERT"
    },
    "5417": {
      "op": "JUMPDEST"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "op": "CALLDATALOAD"
    },
    "5420": {
      "op": "SWAP2"
    },
    "5421": {
      "op": "SWAP1"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "jump": "o",
      "op": "JUMP"
    },
    "5424": {
      "op": "JUMPDEST"
    },
    "5425": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5432": {
      "op": "SHL"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5435": {
      "op": "MSTORE"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5440": {
      "op": "MSTORE"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5445": {
      "op": "REVERT"
    },
    "5446": {
      "op": "JUMPDEST"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5449": {
      "op": "MLOAD"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5452": {
      "op": "DUP3"
    },
    "5453": {
      "op": "ADD"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5456": {
      "op": "NOT"
    },
    "5457": {
      "op": "AND"
    },
    "5458": {
      "op": "DUP2"
    },
    "5459": {
      "op": "ADD"
    },
    "5460": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5469": {
      "op": "DUP2"
    },
    "5470": {
      "op": "GT"
    },
    "5471": {
      "op": "DUP3"
    },
    "5472": {
      "op": "DUP3"
    },
    "5473": {
      "op": "LT"
    },
    "5474": {
      "op": "OR"
    },
    "5475": {
      "op": "ISZERO"
    },
    "5476": {
      "op": "PUSH2",
      "value": "0x156F"
    },
    "5479": {
      "op": "JUMPI"
    },
    "5480": {
      "op": "PUSH2",
      "value": "0x156F"
    },
    "5483": {
      "op": "PUSH2",
      "value": "0x1530"
    },
    "5486": {
      "jump": "i",
      "op": "JUMP"
    },
    "5487": {
      "op": "JUMPDEST"
    },
    "5488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5490": {
      "op": "MSTORE"
    },
    "5491": {
      "op": "SWAP2"
    },
    "5492": {
      "op": "SWAP1"
    },
    "5493": {
      "op": "POP"
    },
    "5494": {
      "jump": "o",
      "op": "JUMP"
    },
    "5495": {
      "op": "JUMPDEST"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5498": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5507": {
      "op": "DUP3"
    },
    "5508": {
      "op": "GT"
    },
    "5509": {
      "op": "ISZERO"
    },
    "5510": {
      "op": "PUSH2",
      "value": "0x1591"
    },
    "5513": {
      "op": "JUMPI"
    },
    "5514": {
      "op": "PUSH2",
      "value": "0x1591"
    },
    "5517": {
      "op": "PUSH2",
      "value": "0x1530"
    },
    "5520": {
      "jump": "i",
      "op": "JUMP"
    },
    "5521": {
      "op": "JUMPDEST"
    },
    "5522": {
      "op": "POP"
    },
    "5523": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5525": {
      "op": "SHL"
    },
    "5526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5528": {
      "op": "ADD"
    },
    "5529": {
      "op": "SWAP1"
    },
    "5530": {
      "jump": "o",
      "op": "JUMP"
    },
    "5531": {
      "op": "JUMPDEST"
    },
    "5532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5534": {
      "op": "DUP3"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5537": {
      "op": "DUP4"
    },
    "5538": {
      "op": "ADD"
    },
    "5539": {
      "op": "SLT"
    },
    "5540": {
      "op": "PUSH2",
      "value": "0x15AC"
    },
    "5543": {
      "op": "JUMPI"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5546": {
      "op": "DUP1"
    },
    "5547": {
      "op": "REVERT"
    },
    "5548": {
      "op": "JUMPDEST"
    },
    "5549": {
      "op": "DUP2"
    },
    "5550": {
      "op": "CALLDATALOAD"
    },
    "5551": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5560": {
      "op": "DUP2"
    },
    "5561": {
      "op": "GT"
    },
    "5562": {
      "op": "ISZERO"
    },
    "5563": {
      "op": "PUSH2",
      "value": "0x15C6"
    },
    "5566": {
      "op": "JUMPI"
    },
    "5567": {
      "op": "PUSH2",
      "value": "0x15C6"
    },
    "5570": {
      "op": "PUSH2",
      "value": "0x1530"
    },
    "5573": {
      "jump": "i",
      "op": "JUMP"
    },
    "5574": {
      "op": "JUMPDEST"
    },
    "5575": {
      "op": "PUSH2",
      "value": "0x15D9"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5580": {
      "op": "DUP3"
    },
    "5581": {
      "op": "ADD"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5584": {
      "op": "NOT"
    },
    "5585": {
      "op": "AND"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5588": {
      "op": "ADD"
    },
    "5589": {
      "op": "PUSH2",
      "value": "0x1546"
    },
    "5592": {
      "jump": "i",
      "op": "JUMP"
    },
    "5593": {
      "op": "JUMPDEST"
    },
    "5594": {
      "op": "DUP2"
    },
    "5595": {
      "op": "DUP2"
    },
    "5596": {
      "op": "MSTORE"
    },
    "5597": {
      "op": "DUP5"
    },
    "5598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5600": {
      "op": "DUP4"
    },
    "5601": {
      "op": "DUP7"
    },
    "5602": {
      "op": "ADD"
    },
    "5603": {
      "op": "ADD"
    },
    "5604": {
      "op": "GT"
    },
    "5605": {
      "op": "ISZERO"
    },
    "5606": {
      "op": "PUSH2",
      "value": "0x15EE"
    },
    "5609": {
      "op": "JUMPI"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5612": {
      "op": "DUP1"
    },
    "5613": {
      "op": "REVERT"
    },
    "5614": {
      "op": "JUMPDEST"
    },
    "5615": {
      "op": "DUP2"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5618": {
      "op": "DUP6"
    },
    "5619": {
      "op": "ADD"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5622": {
      "op": "DUP4"
    },
    "5623": {
      "op": "ADD"
    },
    "5624": {
      "op": "CALLDATACOPY"
    },
    "5625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5627": {
      "op": "SWAP2"
    },
    "5628": {
      "op": "DUP2"
    },
    "5629": {
      "op": "ADD"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5632": {
      "op": "ADD"
    },
    "5633": {
      "op": "SWAP2"
    },
    "5634": {
      "op": "SWAP1"
    },
    "5635": {
      "op": "SWAP2"
    },
    "5636": {
      "op": "MSTORE"
    },
    "5637": {
      "op": "SWAP4"
    },
    "5638": {
      "op": "SWAP3"
    },
    "5639": {
      "op": "POP"
    },
    "5640": {
      "op": "POP"
    },
    "5641": {
      "op": "POP"
    },
    "5642": {
      "jump": "o",
      "op": "JUMP"
    },
    "5643": {
      "op": "JUMPDEST"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5646": {
      "op": "DUP3"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5649": {
      "op": "DUP4"
    },
    "5650": {
      "op": "ADD"
    },
    "5651": {
      "op": "SLT"
    },
    "5652": {
      "op": "PUSH2",
      "value": "0x161C"
    },
    "5655": {
      "op": "JUMPI"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5658": {
      "op": "DUP1"
    },
    "5659": {
      "op": "REVERT"
    },
    "5660": {
      "op": "JUMPDEST"
    },
    "5661": {
      "op": "DUP2"
    },
    "5662": {
      "op": "CALLDATALOAD"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5665": {
      "op": "PUSH2",
      "value": "0x1631"
    },
    "5668": {
      "op": "PUSH2",
      "value": "0x162C"
    },
    "5671": {
      "op": "DUP4"
    },
    "5672": {
      "op": "PUSH2",
      "value": "0x1577"
    },
    "5675": {
      "jump": "i",
      "op": "JUMP"
    },
    "5676": {
      "op": "JUMPDEST"
    },
    "5677": {
      "op": "PUSH2",
      "value": "0x1546"
    },
    "5680": {
      "jump": "i",
      "op": "JUMP"
    },
    "5681": {
      "op": "JUMPDEST"
    },
    "5682": {
      "op": "DUP3"
    },
    "5683": {
      "op": "DUP2"
    },
    "5684": {
      "op": "MSTORE"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5687": {
      "op": "SWAP3"
    },
    "5688": {
      "op": "SWAP1"
    },
    "5689": {
      "op": "SWAP3"
    },
    "5690": {
      "op": "SHL"
    },
    "5691": {
      "op": "DUP5"
    },
    "5692": {
      "op": "ADD"
    },
    "5693": {
      "op": "DUP2"
    },
    "5694": {
      "op": "ADD"
    },
    "5695": {
      "op": "SWAP2"
    },
    "5696": {
      "op": "DUP2"
    },
    "5697": {
      "op": "DUP2"
    },
    "5698": {
      "op": "ADD"
    },
    "5699": {
      "op": "SWAP1"
    },
    "5700": {
      "op": "DUP7"
    },
    "5701": {
      "op": "DUP5"
    },
    "5702": {
      "op": "GT"
    },
    "5703": {
      "op": "ISZERO"
    },
    "5704": {
      "op": "PUSH2",
      "value": "0x1650"
    },
    "5707": {
      "op": "JUMPI"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5710": {
      "op": "DUP1"
    },
    "5711": {
      "op": "REVERT"
    },
    "5712": {
      "op": "JUMPDEST"
    },
    "5713": {
      "op": "DUP3"
    },
    "5714": {
      "op": "DUP7"
    },
    "5715": {
      "op": "ADD"
    },
    "5716": {
      "op": "JUMPDEST"
    },
    "5717": {
      "op": "DUP5"
    },
    "5718": {
      "op": "DUP2"
    },
    "5719": {
      "op": "LT"
    },
    "5720": {
      "op": "ISZERO"
    },
    "5721": {
      "op": "PUSH2",
      "value": "0x1674"
    },
    "5724": {
      "op": "JUMPI"
    },
    "5725": {
      "op": "DUP1"
    },
    "5726": {
      "op": "CALLDATALOAD"
    },
    "5727": {
      "op": "PUSH2",
      "value": "0x1667"
    },
    "5730": {
      "op": "DUP2"
    },
    "5731": {
      "op": "PUSH2",
      "value": "0x14AC"
    },
    "5734": {
      "jump": "i",
      "op": "JUMP"
    },
    "5735": {
      "op": "JUMPDEST"
    },
    "5736": {
      "op": "DUP4"
    },
    "5737": {
      "op": "MSTORE"
    },
    "5738": {
      "op": "SWAP2"
    },
    "5739": {
      "op": "DUP4"
    },
    "5740": {
      "op": "ADD"
    },
    "5741": {
      "op": "SWAP2"
    },
    "5742": {
      "op": "DUP4"
    },
    "5743": {
      "op": "ADD"
    },
    "5744": {
      "op": "PUSH2",
      "value": "0x1654"
    },
    "5747": {
      "op": "JUMP"
    },
    "5748": {
      "op": "JUMPDEST"
    },
    "5749": {
      "op": "POP"
    },
    "5750": {
      "op": "SWAP7"
    },
    "5751": {
      "op": "SWAP6"
    },
    "5752": {
      "op": "POP"
    },
    "5753": {
      "op": "POP"
    },
    "5754": {
      "op": "POP"
    },
    "5755": {
      "op": "POP"
    },
    "5756": {
      "op": "POP"
    },
    "5757": {
      "op": "POP"
    },
    "5758": {
      "jump": "o",
      "op": "JUMP"
    },
    "5759": {
      "op": "JUMPDEST"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5762": {
      "op": "DUP3"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5765": {
      "op": "DUP4"
    },
    "5766": {
      "op": "ADD"
    },
    "5767": {
      "op": "SLT"
    },
    "5768": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "5771": {
      "op": "JUMPI"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5774": {
      "op": "DUP1"
    },
    "5775": {
      "op": "REVERT"
    },
    "5776": {
      "op": "JUMPDEST"
    },
    "5777": {
      "op": "DUP2"
    },
    "5778": {
      "op": "CALLDATALOAD"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5781": {
      "op": "PUSH2",
      "value": "0x16A0"
    },
    "5784": {
      "op": "PUSH2",
      "value": "0x162C"
    },
    "5787": {
      "op": "DUP4"
    },
    "5788": {
      "op": "PUSH2",
      "value": "0x1577"
    },
    "5791": {
      "jump": "i",
      "op": "JUMP"
    },
    "5792": {
      "op": "JUMPDEST"
    },
    "5793": {
      "op": "DUP3"
    },
    "5794": {
      "op": "DUP2"
    },
    "5795": {
      "op": "MSTORE"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5798": {
      "op": "SWAP3"
    },
    "5799": {
      "op": "SWAP1"
    },
    "5800": {
      "op": "SWAP3"
    },
    "5801": {
      "op": "SHL"
    },
    "5802": {
      "op": "DUP5"
    },
    "5803": {
      "op": "ADD"
    },
    "5804": {
      "op": "DUP2"
    },
    "5805": {
      "op": "ADD"
    },
    "5806": {
      "op": "SWAP2"
    },
    "5807": {
      "op": "DUP2"
    },
    "5808": {
      "op": "DUP2"
    },
    "5809": {
      "op": "ADD"
    },
    "5810": {
      "op": "SWAP1"
    },
    "5811": {
      "op": "DUP7"
    },
    "5812": {
      "op": "DUP5"
    },
    "5813": {
      "op": "GT"
    },
    "5814": {
      "op": "ISZERO"
    },
    "5815": {
      "op": "PUSH2",
      "value": "0x16BF"
    },
    "5818": {
      "op": "JUMPI"
    },
    "5819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5821": {
      "op": "DUP1"
    },
    "5822": {
      "op": "REVERT"
    },
    "5823": {
      "op": "JUMPDEST"
    },
    "5824": {
      "op": "DUP3"
    },
    "5825": {
      "op": "DUP7"
    },
    "5826": {
      "op": "ADD"
    },
    "5827": {
      "op": "JUMPDEST"
    },
    "5828": {
      "op": "DUP5"
    },
    "5829": {
      "op": "DUP2"
    },
    "5830": {
      "op": "LT"
    },
    "5831": {
      "op": "ISZERO"
    },
    "5832": {
      "op": "PUSH2",
      "value": "0x1674"
    },
    "5835": {
      "op": "JUMPI"
    },
    "5836": {
      "op": "DUP1"
    },
    "5837": {
      "op": "CALLDATALOAD"
    },
    "5838": {
      "op": "DUP4"
    },
    "5839": {
      "op": "MSTORE"
    },
    "5840": {
      "op": "SWAP2"
    },
    "5841": {
      "op": "DUP4"
    },
    "5842": {
      "op": "ADD"
    },
    "5843": {
      "op": "SWAP2"
    },
    "5844": {
      "op": "DUP4"
    },
    "5845": {
      "op": "ADD"
    },
    "5846": {
      "op": "PUSH2",
      "value": "0x16C3"
    },
    "5849": {
      "op": "JUMP"
    },
    "5850": {
      "op": "JUMPDEST"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5853": {
      "op": "DUP1"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5858": {
      "op": "DUP5"
    },
    "5859": {
      "op": "DUP7"
    },
    "5860": {
      "op": "SUB"
    },
    "5861": {
      "op": "SLT"
    },
    "5862": {
      "op": "ISZERO"
    },
    "5863": {
      "op": "PUSH2",
      "value": "0x16EF"
    },
    "5866": {
      "op": "JUMPI"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5869": {
      "op": "DUP1"
    },
    "5870": {
      "op": "REVERT"
    },
    "5871": {
      "op": "JUMPDEST"
    },
    "5872": {
      "op": "DUP4"
    },
    "5873": {
      "op": "CALLDATALOAD"
    },
    "5874": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5883": {
      "op": "DUP1"
    },
    "5884": {
      "op": "DUP3"
    },
    "5885": {
      "op": "GT"
    },
    "5886": {
      "op": "ISZERO"
    },
    "5887": {
      "op": "PUSH2",
      "value": "0x1707"
    },
    "5890": {
      "op": "JUMPI"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5893": {
      "op": "DUP1"
    },
    "5894": {
      "op": "REVERT"
    },
    "5895": {
      "op": "JUMPDEST"
    },
    "5896": {
      "op": "DUP2"
    },
    "5897": {
      "op": "DUP7"
    },
    "5898": {
      "op": "ADD"
    },
    "5899": {
      "op": "SWAP2"
    },
    "5900": {
      "op": "POP"
    },
    "5901": {
      "op": "DUP7"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5904": {
      "op": "DUP4"
    },
    "5905": {
      "op": "ADD"
    },
    "5906": {
      "op": "SLT"
    },
    "5907": {
      "op": "PUSH2",
      "value": "0x171B"
    },
    "5910": {
      "op": "JUMPI"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5913": {
      "op": "DUP1"
    },
    "5914": {
      "op": "REVERT"
    },
    "5915": {
      "op": "JUMPDEST"
    },
    "5916": {
      "op": "DUP2"
    },
    "5917": {
      "op": "CALLDATALOAD"
    },
    "5918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5920": {
      "op": "PUSH2",
      "value": "0x172B"
    },
    "5923": {
      "op": "PUSH2",
      "value": "0x162C"
    },
    "5926": {
      "op": "DUP4"
    },
    "5927": {
      "op": "PUSH2",
      "value": "0x1577"
    },
    "5930": {
      "jump": "i",
      "op": "JUMP"
    },
    "5931": {
      "op": "JUMPDEST"
    },
    "5932": {
      "op": "DUP3"
    },
    "5933": {
      "op": "DUP2"
    },
    "5934": {
      "op": "MSTORE"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "5937": {
      "op": "SWAP3"
    },
    "5938": {
      "op": "SWAP1"
    },
    "5939": {
      "op": "SWAP3"
    },
    "5940": {
      "op": "SHL"
    },
    "5941": {
      "op": "DUP5"
    },
    "5942": {
      "op": "ADD"
    },
    "5943": {
      "op": "DUP2"
    },
    "5944": {
      "op": "ADD"
    },
    "5945": {
      "op": "SWAP2"
    },
    "5946": {
      "op": "DUP2"
    },
    "5947": {
      "op": "DUP2"
    },
    "5948": {
      "op": "ADD"
    },
    "5949": {
      "op": "SWAP1"
    },
    "5950": {
      "op": "DUP11"
    },
    "5951": {
      "op": "DUP5"
    },
    "5952": {
      "op": "GT"
    },
    "5953": {
      "op": "ISZERO"
    },
    "5954": {
      "op": "PUSH2",
      "value": "0x174A"
    },
    "5957": {
      "op": "JUMPI"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5960": {
      "op": "DUP1"
    },
    "5961": {
      "op": "REVERT"
    },
    "5962": {
      "op": "JUMPDEST"
    },
    "5963": {
      "op": "DUP3"
    },
    "5964": {
      "op": "DUP7"
    },
    "5965": {
      "op": "ADD"
    },
    "5966": {
      "op": "JUMPDEST"
    },
    "5967": {
      "op": "DUP5"
    },
    "5968": {
      "op": "DUP2"
    },
    "5969": {
      "op": "LT"
    },
    "5970": {
      "op": "ISZERO"
    },
    "5971": {
      "op": "PUSH2",
      "value": "0x1782"
    },
    "5974": {
      "op": "JUMPI"
    },
    "5975": {
      "op": "DUP1"
    },
    "5976": {
      "op": "CALLDATALOAD"
    },
    "5977": {
      "op": "DUP7"
    },
    "5978": {
      "op": "DUP2"
    },
    "5979": {
      "op": "GT"
    },
    "5980": {
      "op": "ISZERO"
    },
    "5981": {
      "op": "PUSH2",
      "value": "0x1766"
    },
    "5984": {
      "op": "JUMPI"
    },
    "5985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5987": {
      "op": "DUP1"
    },
    "5988": {
      "op": "DUP2"
    },
    "5989": {
      "op": "REVERT"
    },
    "5990": {
      "op": "JUMPDEST"
    },
    "5991": {
      "op": "PUSH2",
      "value": "0x1774"
    },
    "5994": {
      "op": "DUP14"
    },
    "5995": {
      "op": "DUP7"
    },
    "5996": {
      "op": "DUP4"
    },
    "5997": {
      "op": "DUP12"
    },
    "5998": {
      "op": "ADD"
    },
    "5999": {
      "op": "ADD"
    },
    "6000": {
      "op": "PUSH2",
      "value": "0x159B"
    },
    "6003": {
      "jump": "i",
      "op": "JUMP"
    },
    "6004": {
      "op": "JUMPDEST"
    },
    "6005": {
      "op": "DUP5"
    },
    "6006": {
      "op": "MSTORE"
    },
    "6007": {
      "op": "POP"
    },
    "6008": {
      "op": "SWAP2"
    },
    "6009": {
      "op": "DUP4"
    },
    "6010": {
      "op": "ADD"
    },
    "6011": {
      "op": "SWAP2"
    },
    "6012": {
      "op": "DUP4"
    },
    "6013": {
      "op": "ADD"
    },
    "6014": {
      "op": "PUSH2",
      "value": "0x174E"
    },
    "6017": {
      "op": "JUMP"
    },
    "6018": {
      "op": "JUMPDEST"
    },
    "6019": {
      "op": "POP"
    },
    "6020": {
      "op": "SWAP8"
    },
    "6021": {
      "op": "POP"
    },
    "6022": {
      "op": "POP"
    },
    "6023": {
      "op": "DUP8"
    },
    "6024": {
      "op": "ADD"
    },
    "6025": {
      "op": "CALLDATALOAD"
    },
    "6026": {
      "op": "SWAP3"
    },
    "6027": {
      "op": "POP"
    },
    "6028": {
      "op": "POP"
    },
    "6029": {
      "op": "DUP1"
    },
    "6030": {
      "op": "DUP3"
    },
    "6031": {
      "op": "GT"
    },
    "6032": {
      "op": "ISZERO"
    },
    "6033": {
      "op": "PUSH2",
      "value": "0x1799"
    },
    "6036": {
      "op": "JUMPI"
    },
    "6037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6039": {
      "op": "DUP1"
    },
    "6040": {
      "op": "REVERT"
    },
    "6041": {
      "op": "JUMPDEST"
    },
    "6042": {
      "op": "PUSH2",
      "value": "0x17A5"
    },
    "6045": {
      "op": "DUP8"
    },
    "6046": {
      "op": "DUP4"
    },
    "6047": {
      "op": "DUP9"
    },
    "6048": {
      "op": "ADD"
    },
    "6049": {
      "op": "PUSH2",
      "value": "0x160B"
    },
    "6052": {
      "jump": "i",
      "op": "JUMP"
    },
    "6053": {
      "op": "JUMPDEST"
    },
    "6054": {
      "op": "SWAP4"
    },
    "6055": {
      "op": "POP"
    },
    "6056": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6058": {
      "op": "DUP7"
    },
    "6059": {
      "op": "ADD"
    },
    "6060": {
      "op": "CALLDATALOAD"
    },
    "6061": {
      "op": "SWAP2"
    },
    "6062": {
      "op": "POP"
    },
    "6063": {
      "op": "DUP1"
    },
    "6064": {
      "op": "DUP3"
    },
    "6065": {
      "op": "GT"
    },
    "6066": {
      "op": "ISZERO"
    },
    "6067": {
      "op": "PUSH2",
      "value": "0x17BB"
    },
    "6070": {
      "op": "JUMPI"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6073": {
      "op": "DUP1"
    },
    "6074": {
      "op": "REVERT"
    },
    "6075": {
      "op": "JUMPDEST"
    },
    "6076": {
      "op": "POP"
    },
    "6077": {
      "op": "PUSH2",
      "value": "0x17C8"
    },
    "6080": {
      "op": "DUP7"
    },
    "6081": {
      "op": "DUP3"
    },
    "6082": {
      "op": "DUP8"
    },
    "6083": {
      "op": "ADD"
    },
    "6084": {
      "op": "PUSH2",
      "value": "0x167F"
    },
    "6087": {
      "jump": "i",
      "op": "JUMP"
    },
    "6088": {
      "op": "JUMPDEST"
    },
    "6089": {
      "op": "SWAP2"
    },
    "6090": {
      "op": "POP"
    },
    "6091": {
      "op": "POP"
    },
    "6092": {
      "op": "SWAP3"
    },
    "6093": {
      "op": "POP"
    },
    "6094": {
      "op": "SWAP3"
    },
    "6095": {
      "op": "POP"
    },
    "6096": {
      "op": "SWAP3"
    },
    "6097": {
      "jump": "o",
      "op": "JUMP"
    },
    "6098": {
      "op": "JUMPDEST"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6101": {
      "op": "DUP1"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6106": {
      "op": "DUP5"
    },
    "6107": {
      "op": "DUP7"
    },
    "6108": {
      "op": "SUB"
    },
    "6109": {
      "op": "SLT"
    },
    "6110": {
      "op": "ISZERO"
    },
    "6111": {
      "op": "PUSH2",
      "value": "0x17E7"
    },
    "6114": {
      "op": "JUMPI"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6117": {
      "op": "DUP1"
    },
    "6118": {
      "op": "REVERT"
    },
    "6119": {
      "op": "JUMPDEST"
    },
    "6120": {
      "op": "DUP4"
    },
    "6121": {
      "op": "CALLDATALOAD"
    },
    "6122": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6131": {
      "op": "DUP2"
    },
    "6132": {
      "op": "GT"
    },
    "6133": {
      "op": "ISZERO"
    },
    "6134": {
      "op": "PUSH2",
      "value": "0x17FE"
    },
    "6137": {
      "op": "JUMPI"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6140": {
      "op": "DUP1"
    },
    "6141": {
      "op": "REVERT"
    },
    "6142": {
      "op": "JUMPDEST"
    },
    "6143": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "6146": {
      "op": "DUP7"
    },
    "6147": {
      "op": "DUP3"
    },
    "6148": {
      "op": "DUP8"
    },
    "6149": {
      "op": "ADD"
    },
    "6150": {
      "op": "PUSH2",
      "value": "0x159B"
    },
    "6153": {
      "jump": "i",
      "op": "JUMP"
    },
    "6154": {
      "op": "JUMPDEST"
    },
    "6155": {
      "op": "SWAP4"
    },
    "6156": {
      "op": "POP"
    },
    "6157": {
      "op": "POP"
    },
    "6158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6160": {
      "op": "DUP5"
    },
    "6161": {
      "op": "ADD"
    },
    "6162": {
      "op": "CALLDATALOAD"
    },
    "6163": {
      "op": "PUSH2",
      "value": "0x181B"
    },
    "6166": {
      "op": "DUP2"
    },
    "6167": {
      "op": "PUSH2",
      "value": "0x14AC"
    },
    "6170": {
      "jump": "i",
      "op": "JUMP"
    },
    "6171": {
      "op": "JUMPDEST"
    },
    "6172": {
      "op": "SWAP3"
    },
    "6173": {
      "op": "SWAP6"
    },
    "6174": {
      "op": "SWAP3"
    },
    "6175": {
      "op": "SWAP5"
    },
    "6176": {
      "op": "POP"
    },
    "6177": {
      "op": "POP"
    },
    "6178": {
      "op": "POP"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6181": {
      "op": "SWAP2"
    },
    "6182": {
      "op": "SWAP1"
    },
    "6183": {
      "op": "SWAP2"
    },
    "6184": {
      "op": "ADD"
    },
    "6185": {
      "op": "CALLDATALOAD"
    },
    "6186": {
      "op": "SWAP1"
    },
    "6187": {
      "jump": "o",
      "op": "JUMP"
    },
    "6188": {
      "op": "JUMPDEST"
    },
    "6189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6191": {
      "op": "JUMPDEST"
    },
    "6192": {
      "op": "DUP4"
    },
    "6193": {
      "op": "DUP2"
    },
    "6194": {
      "op": "LT"
    },
    "6195": {
      "op": "ISZERO"
    },
    "6196": {
      "op": "PUSH2",
      "value": "0x1847"
    },
    "6199": {
      "op": "JUMPI"
    },
    "6200": {
      "op": "DUP2"
    },
    "6201": {
      "op": "DUP2"
    },
    "6202": {
      "op": "ADD"
    },
    "6203": {
      "op": "MLOAD"
    },
    "6204": {
      "op": "DUP4"
    },
    "6205": {
      "op": "DUP3"
    },
    "6206": {
      "op": "ADD"
    },
    "6207": {
      "op": "MSTORE"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6210": {
      "op": "ADD"
    },
    "6211": {
      "op": "PUSH2",
      "value": "0x182F"
    },
    "6214": {
      "op": "JUMP"
    },
    "6215": {
      "op": "JUMPDEST"
    },
    "6216": {
      "op": "DUP4"
    },
    "6217": {
      "op": "DUP2"
    },
    "6218": {
      "op": "GT"
    },
    "6219": {
      "op": "ISZERO"
    },
    "6220": {
      "op": "PUSH2",
      "value": "0xCC1"
    },
    "6223": {
      "op": "JUMPI"
    },
    "6224": {
      "op": "POP"
    },
    "6225": {
      "op": "POP"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6228": {
      "op": "SWAP2"
    },
    "6229": {
      "op": "ADD"
    },
    "6230": {
      "op": "MSTORE"
    },
    "6231": {
      "jump": "o",
      "op": "JUMP"
    },
    "6232": {
      "op": "JUMPDEST"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6235": {
      "op": "DUP2"
    },
    "6236": {
      "op": "MLOAD"
    },
    "6237": {
      "op": "DUP1"
    },
    "6238": {
      "op": "DUP5"
    },
    "6239": {
      "op": "MSTORE"
    },
    "6240": {
      "op": "PUSH2",
      "value": "0x1870"
    },
    "6243": {
      "op": "DUP2"
    },
    "6244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6246": {
      "op": "DUP7"
    },
    "6247": {
      "op": "ADD"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6250": {
      "op": "DUP7"
    },
    "6251": {
      "op": "ADD"
    },
    "6252": {
      "op": "PUSH2",
      "value": "0x182C"
    },
    "6255": {
      "jump": "i",
      "op": "JUMP"
    },
    "6256": {
      "op": "JUMPDEST"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6259": {
      "op": "ADD"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6262": {
      "op": "NOT"
    },
    "6263": {
      "op": "AND"
    },
    "6264": {
      "op": "SWAP3"
    },
    "6265": {
      "op": "SWAP1"
    },
    "6266": {
      "op": "SWAP3"
    },
    "6267": {
      "op": "ADD"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6270": {
      "op": "ADD"
    },
    "6271": {
      "op": "SWAP3"
    },
    "6272": {
      "op": "SWAP2"
    },
    "6273": {
      "op": "POP"
    },
    "6274": {
      "op": "POP"
    },
    "6275": {
      "jump": "o",
      "op": "JUMP"
    },
    "6276": {
      "op": "JUMPDEST"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6279": {
      "op": "DUP2"
    },
    "6280": {
      "op": "MSTORE"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6283": {
      "op": "PUSH2",
      "value": "0x774"
    },
    "6286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6288": {
      "op": "DUP4"
    },
    "6289": {
      "op": "ADD"
    },
    "6290": {
      "op": "DUP5"
    },
    "6291": {
      "op": "PUSH2",
      "value": "0x1858"
    },
    "6294": {
      "jump": "i",
      "op": "JUMP"
    },
    "6295": {
      "op": "JUMPDEST"
    },
    "6296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6298": {
      "op": "DUP1"
    },
    "6299": {
      "op": "DUP3"
    },
    "6300": {
      "op": "MSTORE"
    },
    "6301": {
      "op": "DUP2"
    },
    "6302": {
      "op": "DUP2"
    },
    "6303": {
      "op": "ADD"
    },
    "6304": {
      "op": "MSTORE"
    },
    "6305": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6340": {
      "op": "DUP3"
    },
    "6341": {
      "op": "ADD"
    },
    "6342": {
      "op": "MSTORE"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6345": {
      "op": "ADD"
    },
    "6346": {
      "op": "SWAP1"
    },
    "6347": {
      "jump": "o",
      "op": "JUMP"
    },
    "6348": {
      "op": "JUMPDEST"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6351": {
      "op": "DUP1"
    },
    "6352": {
      "op": "DUP3"
    },
    "6353": {
      "op": "MSTORE"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6356": {
      "op": "SWAP1"
    },
    "6357": {
      "op": "DUP3"
    },
    "6358": {
      "op": "ADD"
    },
    "6359": {
      "op": "MSTORE"
    },
    "6360": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E7420686173206E6F20"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6395": {
      "op": "DUP3"
    },
    "6396": {
      "op": "ADD"
    },
    "6397": {
      "op": "MSTORE"
    },
    "6398": {
      "op": "PUSH6",
      "value": "0x736861726573"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6407": {
      "op": "SHL"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6410": {
      "op": "DUP3"
    },
    "6411": {
      "op": "ADD"
    },
    "6412": {
      "op": "MSTORE"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6415": {
      "op": "ADD"
    },
    "6416": {
      "op": "SWAP1"
    },
    "6417": {
      "jump": "o",
      "op": "JUMP"
    },
    "6418": {
      "op": "JUMPDEST"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6421": {
      "op": "DUP1"
    },
    "6422": {
      "op": "DUP3"
    },
    "6423": {
      "op": "MSTORE"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "6426": {
      "op": "SWAP1"
    },
    "6427": {
      "op": "DUP3"
    },
    "6428": {
      "op": "ADD"
    },
    "6429": {
      "op": "MSTORE"
    },
    "6430": {
      "op": "PUSH32",
      "value": "0x5061796D656E7453706C69747465723A206163636F756E74206973206E6F7420"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6465": {
      "op": "DUP3"
    },
    "6466": {
      "op": "ADD"
    },
    "6467": {
      "op": "MSTORE"
    },
    "6468": {
      "op": "PUSH11",
      "value": "0x191D59481C185E5B595B9D"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6482": {
      "op": "SHL"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6485": {
      "op": "DUP3"
    },
    "6486": {
      "op": "ADD"
    },
    "6487": {
      "op": "MSTORE"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6490": {
      "op": "ADD"
    },
    "6491": {
      "op": "SWAP1"
    },
    "6492": {
      "jump": "o",
      "op": "JUMP"
    },
    "6493": {
      "op": "JUMPDEST"
    },
    "6494": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6499": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6501": {
      "op": "SHL"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6504": {
      "op": "MSTORE"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6509": {
      "op": "MSTORE"
    },
    "6510": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6514": {
      "op": "REVERT"
    },
    "6515": {
      "op": "JUMPDEST"
    },
    "6516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6518": {
      "op": "DUP3"
    },
    "6519": {
      "op": "NOT"
    },
    "6520": {
      "op": "DUP3"
    },
    "6521": {
      "op": "GT"
    },
    "6522": {
      "op": "ISZERO"
    },
    "6523": {
      "op": "PUSH2",
      "value": "0x1986"
    },
    "6526": {
      "op": "JUMPI"
    },
    "6527": {
      "op": "PUSH2",
      "value": "0x1986"
    },
    "6530": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "6533": {
      "jump": "i",
      "op": "JUMP"
    },
    "6534": {
      "op": "JUMPDEST"
    },
    "6535": {
      "op": "POP"
    },
    "6536": {
      "op": "ADD"
    },
    "6537": {
      "op": "SWAP1"
    },
    "6538": {
      "jump": "o",
      "op": "JUMP"
    },
    "6539": {
      "op": "JUMPDEST"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6544": {
      "op": "DUP3"
    },
    "6545": {
      "op": "DUP5"
    },
    "6546": {
      "op": "SUB"
    },
    "6547": {
      "op": "SLT"
    },
    "6548": {
      "op": "ISZERO"
    },
    "6549": {
      "op": "PUSH2",
      "value": "0x199D"
    },
    "6552": {
      "op": "JUMPI"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6555": {
      "op": "DUP1"
    },
    "6556": {
      "op": "REVERT"
    },
    "6557": {
      "op": "JUMPDEST"
    },
    "6558": {
      "op": "POP"
    },
    "6559": {
      "op": "MLOAD"
    },
    "6560": {
      "op": "SWAP2"
    },
    "6561": {
      "op": "SWAP1"
    },
    "6562": {
      "op": "POP"
    },
    "6563": {
      "jump": "o",
      "op": "JUMP"
    },
    "6564": {
      "op": "JUMPDEST"
    },
    "6565": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6570": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6572": {
      "op": "SHL"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6575": {
      "op": "MSTORE"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6580": {
      "op": "MSTORE"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6585": {
      "op": "REVERT"
    },
    "6586": {
      "op": "JUMPDEST"
    },
    "6587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6589": {
      "op": "DUP2"
    },
    "6590": {
      "op": "DUP2"
    },
    "6591": {
      "op": "SHR"
    },
    "6592": {
      "op": "SWAP1"
    },
    "6593": {
      "op": "DUP3"
    },
    "6594": {
      "op": "AND"
    },
    "6595": {
      "op": "DUP1"
    },
    "6596": {
      "op": "PUSH2",
      "value": "0x19CE"
    },
    "6599": {
      "op": "JUMPI"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6602": {
      "op": "DUP3"
    },
    "6603": {
      "op": "AND"
    },
    "6604": {
      "op": "SWAP2"
    },
    "6605": {
      "op": "POP"
    },
    "6606": {
      "op": "JUMPDEST"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6609": {
      "op": "DUP3"
    },
    "6610": {
      "op": "LT"
    },
    "6611": {
      "op": "DUP2"
    },
    "6612": {
      "op": "EQ"
    },
    "6613": {
      "op": "ISZERO"
    },
    "6614": {
      "op": "PUSH2",
      "value": "0x19EF"
    },
    "6617": {
      "op": "JUMPI"
    },
    "6618": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6625": {
      "op": "SHL"
    },
    "6626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6628": {
      "op": "MSTORE"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6633": {
      "op": "MSTORE"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6638": {
      "op": "REVERT"
    },
    "6639": {
      "op": "JUMPDEST"
    },
    "6640": {
      "op": "POP"
    },
    "6641": {
      "op": "SWAP2"
    },
    "6642": {
      "op": "SWAP1"
    },
    "6643": {
      "op": "POP"
    },
    "6644": {
      "jump": "o",
      "op": "JUMP"
    },
    "6645": {
      "op": "JUMPDEST"
    },
    "6646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6652": {
      "op": "SHL"
    },
    "6653": {
      "op": "SUB"
    },
    "6654": {
      "op": "DUP5"
    },
    "6655": {
      "op": "AND"
    },
    "6656": {
      "op": "DUP2"
    },
    "6657": {
      "op": "MSTORE"
    },
    "6658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6660": {
      "op": "DUP1"
    },
    "6661": {
      "op": "DUP3"
    },
    "6662": {
      "op": "ADD"
    },
    "6663": {
      "op": "DUP5"
    },
    "6664": {
      "op": "SWAP1"
    },
    "6665": {
      "op": "MSTORE"
    },
    "6666": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6670": {
      "op": "DUP4"
    },
    "6671": {
      "op": "ADD"
    },
    "6672": {
      "op": "MSTORE"
    },
    "6673": {
      "op": "DUP3"
    },
    "6674": {
      "op": "SLOAD"
    },
    "6675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6677": {
      "op": "SWAP2"
    },
    "6678": {
      "op": "SWAP1"
    },
    "6679": {
      "op": "DUP3"
    },
    "6680": {
      "op": "SWAP1"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6683": {
      "op": "DUP2"
    },
    "6684": {
      "op": "DUP2"
    },
    "6685": {
      "op": "SHR"
    },
    "6686": {
      "op": "SWAP1"
    },
    "6687": {
      "op": "DUP3"
    },
    "6688": {
      "op": "DUP2"
    },
    "6689": {
      "op": "AND"
    },
    "6690": {
      "op": "DUP1"
    },
    "6691": {
      "op": "PUSH2",
      "value": "0x1A2D"
    },
    "6694": {
      "op": "JUMPI"
    },
    "6695": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6697": {
      "op": "DUP4"
    },
    "6698": {
      "op": "AND"
    },
    "6699": {
      "op": "SWAP3"
    },
    "6700": {
      "op": "POP"
    },
    "6701": {
      "op": "JUMPDEST"
    },
    "6702": {
      "op": "DUP6"
    },
    "6703": {
      "op": "DUP4"
    },
    "6704": {
      "op": "LT"
    },
    "6705": {
      "op": "DUP2"
    },
    "6706": {
      "op": "EQ"
    },
    "6707": {
      "op": "ISZERO"
    },
    "6708": {
      "op": "PUSH2",
      "value": "0x1A4B"
    },
    "6711": {
      "op": "JUMPI"
    },
    "6712": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6717": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6719": {
      "op": "SHL"
    },
    "6720": {
      "op": "DUP6"
    },
    "6721": {
      "op": "MSTORE"
    },
    "6722": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6726": {
      "op": "MSTORE"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6729": {
      "op": "DUP6"
    },
    "6730": {
      "op": "REVERT"
    },
    "6731": {
      "op": "JUMPDEST"
    },
    "6732": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6734": {
      "op": "DUP9"
    },
    "6735": {
      "op": "ADD"
    },
    "6736": {
      "op": "DUP4"
    },
    "6737": {
      "op": "SWAP1"
    },
    "6738": {
      "op": "MSTORE"
    },
    "6739": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6741": {
      "op": "DUP9"
    },
    "6742": {
      "op": "ADD"
    },
    "6743": {
      "op": "DUP2"
    },
    "6744": {
      "op": "DUP1"
    },
    "6745": {
      "op": "ISZERO"
    },
    "6746": {
      "op": "PUSH2",
      "value": "0x1A6A"
    },
    "6749": {
      "op": "JUMPI"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6752": {
      "op": "DUP2"
    },
    "6753": {
      "op": "EQ"
    },
    "6754": {
      "op": "PUSH2",
      "value": "0x1A7B"
    },
    "6757": {
      "op": "JUMPI"
    },
    "6758": {
      "op": "PUSH2",
      "value": "0x1AA6"
    },
    "6761": {
      "op": "JUMP"
    },
    "6762": {
      "op": "JUMPDEST"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6765": {
      "op": "NOT"
    },
    "6766": {
      "op": "DUP7"
    },
    "6767": {
      "op": "AND"
    },
    "6768": {
      "op": "DUP3"
    },
    "6769": {
      "op": "MSTORE"
    },
    "6770": {
      "op": "DUP8"
    },
    "6771": {
      "op": "DUP3"
    },
    "6772": {
      "op": "ADD"
    },
    "6773": {
      "op": "SWAP7"
    },
    "6774": {
      "op": "POP"
    },
    "6775": {
      "op": "PUSH2",
      "value": "0x1AA6"
    },
    "6778": {
      "op": "JUMP"
    },
    "6779": {
      "op": "JUMPDEST"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6782": {
      "op": "DUP12"
    },
    "6783": {
      "op": "DUP2"
    },
    "6784": {
      "op": "MSTORE"
    },
    "6785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6787": {
      "op": "SWAP1"
    },
    "6788": {
      "op": "KECCAK256"
    },
    "6789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6791": {
      "op": "JUMPDEST"
    },
    "6792": {
      "op": "DUP7"
    },
    "6793": {
      "op": "DUP2"
    },
    "6794": {
      "op": "LT"
    },
    "6795": {
      "op": "ISZERO"
    },
    "6796": {
      "op": "PUSH2",
      "value": "0x1AA0"
    },
    "6799": {
      "op": "JUMPI"
    },
    "6800": {
      "op": "DUP2"
    },
    "6801": {
      "op": "SLOAD"
    },
    "6802": {
      "op": "DUP5"
    },
    "6803": {
      "op": "DUP3"
    },
    "6804": {
      "op": "ADD"
    },
    "6805": {
      "op": "MSTORE"
    },
    "6806": {
      "op": "SWAP1"
    },
    "6807": {
      "op": "DUP6"
    },
    "6808": {
      "op": "ADD"
    },
    "6809": {
      "op": "SWAP1"
    },
    "6810": {
      "op": "DUP10"
    },
    "6811": {
      "op": "ADD"
    },
    "6812": {
      "op": "PUSH2",
      "value": "0x1A87"
    },
    "6815": {
      "op": "JUMP"
    },
    "6816": {
      "op": "JUMPDEST"
    },
    "6817": {
      "op": "DUP4"
    },
    "6818": {
      "op": "ADD"
    },
    "6819": {
      "op": "SWAP8"
    },
    "6820": {
      "op": "POP"
    },
    "6821": {
      "op": "POP"
    },
    "6822": {
      "op": "JUMPDEST"
    },
    "6823": {
      "op": "POP"
    },
    "6824": {
      "op": "SWAP5"
    },
    "6825": {
      "op": "SWAP12"
    },
    "6826": {
      "op": "SWAP11"
    },
    "6827": {
      "op": "POP"
    },
    "6828": {
      "op": "POP"
    },
    "6829": {
      "op": "POP"
    },
    "6830": {
      "op": "POP"
    },
    "6831": {
      "op": "POP"
    },
    "6832": {
      "op": "POP"
    },
    "6833": {
      "op": "POP"
    },
    "6834": {
      "op": "POP"
    },
    "6835": {
      "op": "POP"
    },
    "6836": {
      "op": "POP"
    },
    "6837": {
      "op": "POP"
    },
    "6838": {
      "jump": "o",
      "op": "JUMP"
    },
    "6839": {
      "op": "JUMPDEST"
    },
    "6840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6844": {
      "op": "NOT"
    },
    "6845": {
      "op": "DUP3"
    },
    "6846": {
      "op": "EQ"
    },
    "6847": {
      "op": "ISZERO"
    },
    "6848": {
      "op": "PUSH2",
      "value": "0x1ACB"
    },
    "6851": {
      "op": "JUMPI"
    },
    "6852": {
      "op": "PUSH2",
      "value": "0x1ACB"
    },
    "6855": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "6858": {
      "jump": "i",
      "op": "JUMP"
    },
    "6859": {
      "op": "JUMPDEST"
    },
    "6860": {
      "op": "POP"
    },
    "6861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6863": {
      "op": "ADD"
    },
    "6864": {
      "op": "SWAP1"
    },
    "6865": {
      "jump": "o",
      "op": "JUMP"
    },
    "6866": {
      "op": "JUMPDEST"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6869": {
      "op": "DUP1"
    },
    "6870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6872": {
      "op": "SHL"
    },
    "6873": {
      "op": "SUB"
    },
    "6874": {
      "op": "DUP5"
    },
    "6875": {
      "op": "AND"
    },
    "6876": {
      "op": "DUP2"
    },
    "6877": {
      "op": "MSTORE"
    },
    "6878": {
      "op": "DUP3"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6881": {
      "op": "DUP3"
    },
    "6882": {
      "op": "ADD"
    },
    "6883": {
      "op": "MSTORE"
    },
    "6884": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6886": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6888": {
      "op": "DUP3"
    },
    "6889": {
      "op": "ADD"
    },
    "6890": {
      "op": "MSTORE"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6893": {
      "op": "PUSH2",
      "value": "0x1AF9"
    },
    "6896": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6898": {
      "op": "DUP4"
    },
    "6899": {
      "op": "ADD"
    },
    "6900": {
      "op": "DUP5"
    },
    "6901": {
      "op": "PUSH2",
      "value": "0x1858"
    },
    "6904": {
      "jump": "i",
      "op": "JUMP"
    },
    "6905": {
      "op": "JUMPDEST"
    },
    "6906": {
      "op": "SWAP6"
    },
    "6907": {
      "op": "SWAP5"
    },
    "6908": {
      "op": "POP"
    },
    "6909": {
      "op": "POP"
    },
    "6910": {
      "op": "POP"
    },
    "6911": {
      "op": "POP"
    },
    "6912": {
      "op": "POP"
    },
    "6913": {
      "jump": "o",
      "op": "JUMP"
    },
    "6914": {
      "op": "JUMPDEST"
    },
    "6915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6917": {
      "op": "DUP2"
    },
    "6918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6920": {
      "op": "NOT"
    },
    "6921": {
      "op": "DIV"
    },
    "6922": {
      "op": "DUP4"
    },
    "6923": {
      "op": "GT"
    },
    "6924": {
      "op": "DUP3"
    },
    "6925": {
      "op": "ISZERO"
    },
    "6926": {
      "op": "ISZERO"
    },
    "6927": {
      "op": "AND"
    },
    "6928": {
      "op": "ISZERO"
    },
    "6929": {
      "op": "PUSH2",
      "value": "0x1B1C"
    },
    "6932": {
      "op": "JUMPI"
    },
    "6933": {
      "op": "PUSH2",
      "value": "0x1B1C"
    },
    "6936": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "6939": {
      "jump": "i",
      "op": "JUMP"
    },
    "6940": {
      "op": "JUMPDEST"
    },
    "6941": {
      "op": "POP"
    },
    "6942": {
      "op": "MUL"
    },
    "6943": {
      "op": "SWAP1"
    },
    "6944": {
      "jump": "o",
      "op": "JUMP"
    },
    "6945": {
      "op": "JUMPDEST"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6948": {
      "op": "DUP3"
    },
    "6949": {
      "op": "PUSH2",
      "value": "0x1B3E"
    },
    "6952": {
      "op": "JUMPI"
    },
    "6953": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6958": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6960": {
      "op": "SHL"
    },
    "6961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6963": {
      "op": "MSTORE"
    },
    "6964": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6968": {
      "op": "MSTORE"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6973": {
      "op": "REVERT"
    },
    "6974": {
      "op": "JUMPDEST"
    },
    "6975": {
      "op": "POP"
    },
    "6976": {
      "op": "DIV"
    },
    "6977": {
      "op": "SWAP1"
    },
    "6978": {
      "jump": "o",
      "op": "JUMP"
    },
    "6979": {
      "op": "JUMPDEST"
    },
    "6980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6982": {
      "op": "DUP3"
    },
    "6983": {
      "op": "DUP3"
    },
    "6984": {
      "op": "LT"
    },
    "6985": {
      "op": "ISZERO"
    },
    "6986": {
      "op": "PUSH2",
      "value": "0x1B55"
    },
    "6989": {
      "op": "JUMPI"
    },
    "6990": {
      "op": "PUSH2",
      "value": "0x1B55"
    },
    "6993": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "6996": {
      "jump": "i",
      "op": "JUMP"
    },
    "6997": {
      "op": "JUMPDEST"
    },
    "6998": {
      "op": "POP"
    },
    "6999": {
      "op": "SUB"
    },
    "7000": {
      "op": "SWAP1"
    },
    "7001": {
      "jump": "o",
      "op": "JUMP"
    },
    "7002": {
      "op": "JUMPDEST"
    },
    "7003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7007": {
      "op": "DUP3"
    },
    "7008": {
      "op": "DUP5"
    },
    "7009": {
      "op": "SUB"
    },
    "7010": {
      "op": "SLT"
    },
    "7011": {
      "op": "ISZERO"
    },
    "7012": {
      "op": "PUSH2",
      "value": "0x1B6C"
    },
    "7015": {
      "op": "JUMPI"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7018": {
      "op": "DUP1"
    },
    "7019": {
      "op": "REVERT"
    },
    "7020": {
      "op": "JUMPDEST"
    },
    "7021": {
      "op": "DUP2"
    },
    "7022": {
      "op": "MLOAD"
    },
    "7023": {
      "op": "DUP1"
    },
    "7024": {
      "op": "ISZERO"
    },
    "7025": {
      "op": "ISZERO"
    },
    "7026": {
      "op": "DUP2"
    },
    "7027": {
      "op": "EQ"
    },
    "7028": {
      "op": "PUSH2",
      "value": "0x774"
    },
    "7031": {
      "op": "JUMPI"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7034": {
      "op": "DUP1"
    },
    "7035": {
      "op": "REVERT"
    },
    "7036": {
      "op": "JUMPDEST"
    },
    "7037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7039": {
      "op": "DUP3"
    },
    "7040": {
      "op": "MLOAD"
    },
    "7041": {
      "op": "PUSH2",
      "value": "0x1B8E"
    },
    "7044": {
      "op": "DUP2"
    },
    "7045": {
      "op": "DUP5"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7048": {
      "op": "DUP8"
    },
    "7049": {
      "op": "ADD"
    },
    "7050": {
      "op": "PUSH2",
      "value": "0x182C"
    },
    "7053": {
      "jump": "i",
      "op": "JUMP"
    },
    "7054": {
      "op": "JUMPDEST"
    },
    "7055": {
      "op": "SWAP2"
    },
    "7056": {
      "op": "SWAP1"
    },
    "7057": {
      "op": "SWAP2"
    },
    "7058": {
      "op": "ADD"
    },
    "7059": {
      "op": "SWAP3"
    },
    "7060": {
      "op": "SWAP2"
    },
    "7061": {
      "op": "POP"
    },
    "7062": {
      "op": "POP"
    },
    "7063": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "86c0658b6daa5ec593fb6b65fd859391da43fca5",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (finance/PaymentSplitter.sol)\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title PaymentSplitter\n * @dev This contract allows to split Ether payments among a group of accounts. The sender does not need to be aware\n * that the Ether will be split in this way, since it is handled transparently by the contract.\n *\n * The split can be in equal parts or in any other arbitrary proportion. The way this is specified is by assigning each\n * account to a number of shares. Of all the Ether that this contract receives, each account will then be able to claim\n * an amount proportional to the percentage of total shares they were assigned. The distribution of shares is set at the\n * time of contract deployment and can't be updated thereafter.\n *\n * `PaymentSplitter` follows a _pull payment_ model. This means that payments are not automatically forwarded to the\n * accounts but kept in this contract, and the actual transfer is triggered as a separate step by calling the {release}\n * function.\n *\n * NOTE: This contract assumes that ERC20 tokens will behave similarly to native tokens (Ether). Rebasing tokens, and\n * tokens that apply fees during transfers, are likely to not be supported as expected. If in doubt, we encourage you\n * to run tests before sending real value to this contract.\n */\ncontract Splitter is Context, Ownable {\n    event PayeeAdded(address account, uint256 shares, string name);\n    event PaymentReleased(address to, uint256 amount);\n    event ERC20PaymentReleased(IERC20 indexed token, address to, uint256 amount, string \n    recipient);\n    event PaymentReceived(address from, uint256 amount);\n\n    uint256 private _totalShares;\n    uint256 private _totalReleased;\n\n    mapping(address => string) public addresstoname;\n    mapping(address => uint256) private _shares;\n    mapping(address => uint256) private _released;\n    address[] private _payees;\n\n    mapping(IERC20 => uint256) private _erc20TotalReleased;\n    mapping(IERC20 => mapping(address => uint256)) private _erc20Released;\n\n    /**\n     * @dev Creates an instance of `PaymentSplitter` where each account in `payees` is assigned the number of shares at\n     * the matching position in the `shares` array.\n     *\n     * All addresses in `payees` must be non-zero. Both arrays must have the same non-zero length, and there must be no\n     * duplicates in `payees`.\n     */\n    constructor(string[] memory _name, address[] memory payees, uint256[] memory shares_) payable {\n        require(payees.length == shares_.length, \"PaymentSplitter: payees and shares length mismatch\");\n        require(payees.length > 0, \"PaymentSplitter: no payees\");\n        require(_name.length == payees.length);\n\n        for (uint256 i = 0; i < payees.length; i++) {\n            _addPayee(_name[i], payees[i], shares_[i]);\n        }\n    }\n\n    /**\n     * @dev The Ether received will be logged with {PaymentReceived} events. Note that these events are not fully\n     * reliable: it's possible for a contract to receive Ether without triggering this function. This only affects the\n     * reliability of the events, and not the actual splitting of Ether.\n     *\n     * To learn more about this see the Solidity documentation for\n     * https://solidity.readthedocs.io/en/latest/contracts.html#fallback-function[fallback\n     * functions].\n     */\n    receive() external payable virtual {\n        emit PaymentReceived(_msgSender(), msg.value);\n    }\n\n    function _addCSVPayee(string[] memory _name, address[] memory payees, uint256[] memory shares_) public {\n        require(payees.length == shares_.length, \"PaymentSplitter: payees and shares length mismatch\");\n        require(payees.length > 0, \"PaymentSplitter: no payees\");\n        require(_name.length == payees.length);\n\n        for (uint256 i = 0; i < payees.length; i++) {\n            _addPayee(_name[i], payees[i], shares_[i]);\n        }\n    }\n\n    /**\n     * @dev Getter for the total shares held by payees.\n     */\n    function totalShares() public view returns (uint256) {\n        return _totalShares;\n    }\n\n    /**\n     * @dev Getter for the total amount of Ether already released.\n     */\n    function totalReleased() public view returns (uint256) {\n        return _totalReleased;\n    }\n\n    /**\n     * @dev Getter for the total amount of `token` already released. `token` should be the address of an IERC20\n     * contract.\n     */\n    function totalERCReleased(IERC20 token) public view returns (uint256) {\n        return _erc20TotalReleased[token];\n    }\n\n    /**\n     * @dev Getter for the amount of shares held by an account.\n     */\n    function shares(address account) public view returns (uint256) {\n        return _shares[account];\n    }\n\n    /**\n     * @dev Getter for the amount of Ether already released to a payee.\n     */\n    function released(address account) public view returns (uint256) {\n        return _released[account];\n    }\n\n    /**\n     * @dev Getter for the amount of `token` tokens already released to a payee. `token` should be the address of an\n     * IERC20 contract.\n     */\n    function releasedERC(IERC20 token, address account) public view returns (uint256) {\n        return _erc20Released[token][account];\n    }\n\n    /**\n     * @dev Getter for the address of the payee number `index`.\n     */\n    function payee(uint256 index) public view returns (address) {\n        return _payees[index];\n    }\n\n    /**\n     * @dev Getter for the amount of payee's releasable Ether.\n     */\n    function releasable(address account) public view returns (uint256) {\n        uint256 totalReceived = address(this).balance + totalReleased();\n        return _pendingPayment(account, totalReceived, released(account));\n    }\n\n    /**\n     * @dev Getter for the amount of payee's releasable `token` tokens. `token` should be the address of an\n     * IERC20 contract.\n     */\n    function releasableERC(IERC20 token, address account) public view returns (uint256) {\n        uint256 totalReceived = token.balanceOf(address(this)) + totalERCReleased(token);\n        return _pendingPayment(account, totalReceived, releasedERC(token, account));\n    }\n\n    /**\n     * @dev Triggers a transfer to `account` of the amount of Ether they are owed, according to their percentage of the\n     * total shares and their previous withdrawals.\n     */\n    function release(address payable account) public virtual onlyOwner{\n        require(_shares[account] > 0, \"PaymentSplitter: account has no shares\");\n\n        uint256 payment = releasable(account);\n\n        require(payment != 0, \"PaymentSplitter: account is not due payment\");\n\n        // _totalReleased is the sum of all values in _released.\n        // If \"_totalReleased += payment\" does not overflow, then \"_released[account] += payment\" cannot overflow.\n        _totalReleased += payment;\n        unchecked {\n            _released[account] += payment;\n        }\n\n        Address.sendValue(account, payment);\n        emit PaymentReleased(account, payment);\n    }\n\n    /**\n     * @dev Triggers a transfer to `account` of the amount of `token` tokens they are owed, according to their\n     * percentage of the total shares and their previous withdrawals. `token` must be the address of an IERC20\n     * contract.\n     */\n    function releaseERC(IERC20 token, address account) public virtual onlyOwner{\n        require(_shares[account] > 0, \"PaymentSplitter: account has no shares\");\n\n        uint256 payment = releasableERC(token, account);\n\n        require(payment != 0, \"PaymentSplitter: account is not due payment\");\n\n        // _erc20TotalReleased[token] is the sum of all values in _erc20Released[token].\n        // If \"_erc20TotalReleased[token] += payment\" does not overflow, then \"_erc20Released[token][account] += payment\"\n        // cannot overflow.\n        _erc20TotalReleased[token] += payment;\n        unchecked {\n            _erc20Released[token][account] += payment;\n        }\n\n        SafeERC20.safeTransfer(token, account, payment);\n        emit ERC20PaymentReleased(token, account, payment, addresstoname[account]);\n    }\n\n    /**\n     * Function to make the smart contract Bulk\n     */\n\n    function bulkReleaseERC(IERC20 token) public virtual onlyOwner {\n        for (uint256 i = 0; i < _payees.length; i++) {\n            require(_shares[_payees[i]] > 0, \"Account has no shares\");\n\n            uint256 payment = releasableERC(token, _payees[i]);\n\n            require(payment != 0, \"account is not due payment\");\n\n            _erc20TotalReleased[token] += payment;\n\n            unchecked {\n                _erc20Released[token][_payees[i]] += payment;\n            }\n\n            SafeERC20.safeTransfer(token, _payees[i], payment);\n            emit ERC20PaymentReleased(token, _payees[i], payment, addresstoname[_payees[i]]);\n        }\n    }\n\n    /**\n     * @dev internal logic for computing the pending payment of an `account` given the token historical balances and\n     * already released amounts.\n     */\n    function _pendingPayment(\n        address account,\n        uint256 totalReceived,\n        uint256 alreadyReleased\n    ) private view returns (uint256) {\n        return (totalReceived * _shares[account]) / _totalShares - alreadyReleased;\n    }\n\n    /**\n     * @dev Add a new payee to the contract.\n     * @param account The address of the payee to add.\n     * @param shares_ The number of shares owned by the payee.\n     */\n    function _addPayee(string memory _name, address account, uint256 shares_) public onlyOwner {\n        require(account != address(0), \"PaymentSplitter: account is the zero address\");\n        require(shares_ > 0, \"PaymentSplitter: shares are 0\");\n        require(_shares[account] == 0, \"PaymentSplitter: account already has shares\");\n\n        _payees.push(account);\n        _shares[account] = shares_;\n        _totalShares = _totalShares + shares_;\n        addresstoname[account] = _name;\n        emit PayeeAdded(account, shares_, _name);\n    }\n\n    function withdraw(IERC20 token) public onlyOwner {\n        uint256 tokenBalance = token.balanceOf(address(this));\n\n        SafeERC20.safeTransfer(token, msg.sender, tokenBalance);\n    }\n}",
  "sourceMap": "1587:8778:5:-:0;;;2655:440;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;2784:7:5;:14;2767:6;:13;:31;2759:94;;;;-1:-1:-1;;;2759:94:5;;4734:2:6;2759:94:5;;;4716:21:6;4773:2;4753:18;;;4746:30;4812:34;4792:18;;;4785:62;-1:-1:-1;;;4863:18:6;;;4856:48;4921:19;;2759:94:5;;;;;;;;;2887:1;2871:6;:13;:17;2863:56;;;;-1:-1:-1;;;2863:56:5;;5153:2:6;2863:56:5;;;5135:21:6;5192:2;5172:18;;;5165:30;5231:28;5211:18;;;5204:56;5277:18;;2863:56:5;4951:350:6;2863:56:5;2953:6;:13;2937:5;:12;:29;2929:38;;;;;;2983:9;2978:111;3002:6;:13;2998:1;:17;2978:111;;;3036:42;3046:5;3052:1;3046:8;;;;;;;;:::i;:::-;;;;;;;3056:6;3063:1;3056:9;;;;;;;;:::i;:::-;;;;;;;3067:7;3075:1;3067:10;;;;;;;;:::i;:::-;;;;;;;3036:9;;;:42;;:::i;:::-;3017:3;;;;:::i;:::-;;;;2978:111;;;;2655:440;;;1587:8778;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;9631:541:5:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;5912:2:6;1240:68:0;;;5894:21:6;;;5931:18;;;5924:30;5990:34;5970:18;;;5963:62;6042:18;;1240:68:0;5710:356:6;1240:68:0;-1:-1:-1;;;;;9740:21:5;::::1;9732:78;;;::::0;-1:-1:-1;;;9732:78:5;;6273:2:6;9732:78:5::1;::::0;::::1;6255:21:6::0;6312:2;6292:18;;;6285:30;6351:34;6331:18;;;6324:62;-1:-1:-1;;;6402:18:6;;;6395:42;6454:19;;9732:78:5::1;6071:408:6::0;9732:78:5::1;9838:1;9828:7;:11;9820:53;;;::::0;-1:-1:-1;;;9820:53:5;;6686:2:6;9820:53:5::1;::::0;::::1;6668:21:6::0;6725:2;6705:18;;;6698:30;6764:31;6744:18;;;6737:59;6813:18;;9820:53:5::1;6484:353:6::0;9820:53:5::1;-1:-1:-1::0;;;;;9891:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;;:21;9883:77:::1;;;::::0;-1:-1:-1;;;9883:77:5;;7044:2:6;9883:77:5::1;::::0;::::1;7026:21:6::0;7083:2;7063:18;;;7056:30;7122:34;7102:18;;;7095:62;-1:-1:-1;;;7173:18:6;;;7166:41;7224:19;;9883:77:5::1;6842:407:6::0;9883:77:5::1;9971:7;:21:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;9971:21:5::1;-1:-1:-1::0;;;;;9971:21:5;::::1;::::0;;::::1;::::0;;;-1:-1:-1;10002:16:5;;;:7:::1;9971:21;10002:16:::0;;;;:26;;;10053:12;:22:::1;::::0;10002:26;;10053:22:::1;:::i;:::-;10038:12;:37:::0;-1:-1:-1;;;;;10085:22:5;::::1;;::::0;;;:13:::1;:22;::::0;;;;;;;:30;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;10130:35;10141:7;10150;10159:5;10130:35;;;;;;;;:::i;:::-;;;;;;;;9631:541:::0;;;:::o;1587:8778::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1587:8778:5;;;-1:-1:-1;1587:8778:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:6;247:40;;-1:-1:-1;;;;;302:34:6;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:6:o;426:182::-;485:4;-1:-1:-1;;;;;507:30:6;;504:56;;;540:18;;:::i;:::-;-1:-1:-1;585:1:6;581:14;597:4;577:25;;426:182::o;613:258::-;685:1;695:113;709:6;706:1;703:13;695:113;;;785:11;;;779:18;766:11;;;759:39;731:2;724:10;695:113;;;826:6;823:1;820:13;817:48;;;861:1;852:6;847:3;843:16;836:27;817:48;;613:258;;;:::o;876:842::-;941:5;994:3;987:4;979:6;975:17;971:27;961:55;;1012:1;1009;1002:12;961:55;1041:6;1035:13;1067:4;1091:59;1107:42;1146:2;1107:42;:::i;:::-;1091:59;:::i;:::-;1184:15;;;1270:1;1266:10;;;;1254:23;;1250:32;;;1215:12;;;;1294:15;;;1291:35;;;1322:1;1319;1312:12;1291:35;1358:2;1350:6;1346:15;1370:319;1386:6;1381:3;1378:15;1370:319;;;1453:10;;-1:-1:-1;;;;;1496:31:6;;1486:42;;1476:140;;1570:1;1599:2;1595;1588:14;1476:140;1629:18;;1667:12;;;;1403;;1370:319;;;-1:-1:-1;1707:5:6;876:842;-1:-1:-1;;;;;;876:842:6:o;1723:658::-;1788:5;1841:3;1834:4;1826:6;1822:17;1818:27;1808:55;;1859:1;1856;1849:12;1808:55;1888:6;1882:13;1914:4;1938:59;1954:42;1993:2;1954:42;:::i;1938:59::-;2031:15;;;2117:1;2113:10;;;;2101:23;;2097:32;;;2062:12;;;;2141:15;;;2138:35;;;2169:1;2166;2159:12;2138:35;2205:2;2197:6;2193:15;2217:135;2233:6;2228:3;2225:15;2217:135;;;2299:10;;2287:23;;2330:12;;;;2250;;2217:135;;2386:2141;2559:6;2567;2575;2628:2;2616:9;2607:7;2603:23;2599:32;2596:52;;;2644:1;2641;2634:12;2596:52;2671:16;;-1:-1:-1;;;;;2736:14:6;;;2733:34;;;2763:1;2760;2753:12;2733:34;2801:6;2790:9;2786:22;2776:32;;2846:7;2839:4;2835:2;2831:13;2827:27;2817:55;;2868:1;2865;2858:12;2817:55;2897:2;2891:9;2919:4;2943:59;2959:42;2998:2;2959:42;:::i;2943:59::-;3036:15;;;3118:1;3114:10;;;;3106:19;;3102:28;;;3067:12;;;;3142:19;;;3139:39;;;3174:1;3171;3164:12;3139:39;3206:2;3202;3198:11;3218:903;3234:6;3229:3;3226:15;3218:903;;;3313:3;3307:10;3349:2;3336:11;3333:19;3330:109;;;3393:1;3422:2;3418;3411:14;3330:109;3462:20;;3517:2;3509:11;;3505:25;-1:-1:-1;3495:123:6;;3572:1;3601:2;3597;3590:14;3495:123;3655:2;3651;3647:11;3641:18;3682:2;3707;3703;3700:10;3697:36;;;3713:18;;:::i;:::-;3759:53;3802:2;3783:13;;-1:-1:-1;;3779:27:6;3775:36;;3759:53;:::i;:::-;3839:2;3832:5;3825:17;3883:7;3878:2;3873;3869;3865:11;3861:20;3858:33;3855:126;;;3933:1;3963:3;3958;3951:16;3855:126;3994:54;4045:2;4040;4033:5;4029:14;4024:2;4020;4016:11;3994:54;:::i;:::-;4061:18;;-1:-1:-1;;;4099:12:6;;;;3251;;3218:903;;;-1:-1:-1;4176:18:6;;;4170:25;4140:5;;-1:-1:-1;4170:25:6;;-1:-1:-1;;;4207:16:6;;;4204:36;;;4236:1;4233;4226:12;4204:36;4259:74;4325:7;4314:8;4303:9;4299:24;4259:74;:::i;:::-;4249:84;;4379:2;4368:9;4364:18;4358:25;4342:41;;4408:2;4398:8;4395:16;4392:36;;;4424:1;4421;4414:12;4392:36;;4447:74;4513:7;4502:8;4491:9;4487:24;4447:74;:::i;:::-;4437:84;;;2386:2141;;;;;:::o;5306:127::-;5367:10;5362:3;5358:20;5355:1;5348:31;5398:4;5395:1;5388:15;5422:4;5419:1;5412:15;5438:127;5499:10;5494:3;5490:20;5487:1;5480:31;5530:4;5527:1;5520:15;5554:4;5551:1;5544:15;5570:135;5609:3;-1:-1:-1;;5630:17:6;;5627:43;;;5650:18;;:::i;:::-;-1:-1:-1;5697:1:6;5686:13;;5570:135::o;7254:128::-;7294:3;7325:1;7321:6;7318:1;7315:13;7312:39;;;7331:18;;:::i;:::-;-1:-1:-1;7367:9:6;;7254:128::o;7387:553::-;7621:1;7617;7612:3;7608:11;7604:19;7596:6;7592:32;7581:9;7574:51;7661:6;7656:2;7645:9;7641:18;7634:34;7704:2;7699;7688:9;7684:18;7677:30;7555:4;7736:6;7730:13;7779:6;7774:2;7763:9;7759:18;7752:34;7795:67;7855:6;7849:3;7838:9;7834:19;7829:2;7821:6;7817:15;7795:67;:::i;:::-;7923:2;7902:15;-1:-1:-1;;7898:29:6;7883:45;;;;7930:3;7879:55;;7387:553;-1:-1:-1;;;;7387:553:6:o;7945:380::-;8024:1;8020:12;;;;8067;;;8088:61;;8142:4;8134:6;8130:17;8120:27;;8088:61;8195:2;8187:6;8184:14;8164:18;8161:38;8158:161;;;8241:10;8236:3;8232:20;8229:1;8222:31;8276:4;8273:1;8266:15;8304:4;8301:1;8294:15;8158:161;;7945:380;;;:::o;:::-;1587:8778:5;;;;;;",
  "sourcePath": "contracts/splitter.sol",
  "type": "contract"
}
